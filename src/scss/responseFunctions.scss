@use 'sass:map';
@use 'sass:list';
@use 'sass:meta';
@import './mixins.scss';

@function getResponsiveProperty($var, $breakpoints...) {
    $property: var(--#{$var});

    @each $breakpoint in $breakpoints {
        $property: var(--#{$var}-#{$breakpoint}, $property);
    }

    @return $property;
}

@mixin generateResponsiveProperties($breakpoints, $properties) {
    $keys: map.keys($breakpoints);

    @each $var, $value in $properties {
        @include generateResponsiveProperty($var, 'initial', $keys);
    }

    @each $var, $prop in $properties {
        #{$prop}: calcResponsiveProperty($var);
    }

    @for $index from 1 to length($keys) {
        $key: nth($keys, $index);
        $value: map-get($breakpoints, $key);

        &__#{$key} {
            @include mq($value) {
                @each $var, $prop in $properties {
                    #{$prop}: calcResponsiveProperty($var, $key);
                }
            }
        }
    }
}

@mixin generateResponsiveProperty($var, $default, $keys) {
    --#{$var}: #{$default};

    @for $index from 1 to length($keys) {
        $key: nth($keys, $index);

        @if $index == 1 {
            --#{$var}-#{$key}: var(--#{$var});
        }

        @if $index > 1 {
            $prev: nth($keys, $index - 1);

            @if $prev != false {
                --#{$var}-#{$key}: var(--#{$var}-#{$prev});
            }
        }
    }
}

@function calcResponsiveProperty($var, $breakpoint: false) {
    @if $breakpoint == false {
        @return var(--#{$var});
    }

    $property: var(--#{$var}-#{$breakpoint});

    @return $property;
}
