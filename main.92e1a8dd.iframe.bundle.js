(self["webpackChunk_greensight_gds"] = self["webpackChunk_greensight_gds"] || []).push([[792],{

/***/ "./src/autokits/common/ColorsAutokit/ColorsAutokit.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  basic: () => (/* binding */ basic),
  "default": () => (/* binding */ ColorsAutokit_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./src/components/emotion/Layout/index.tsx + 3 modules
var Layout = __webpack_require__("./src/components/emotion/Layout/index.tsx");
// EXTERNAL MODULE: ./src/helpers/emotion/typography.ts
var typography = __webpack_require__("./src/helpers/emotion/typography.ts");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
// EXTERNAL MODULE: ./src/helpers/common/Tooltip.tsx
var Tooltip = __webpack_require__("./src/helpers/common/Tooltip.tsx");
// EXTERNAL MODULE: ./src/helpers/common/copyToClipboard.ts
var copyToClipboard = __webpack_require__("./src/helpers/common/copyToClipboard.ts");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
;// CONCATENATED MODULE: ./src/autokits/common/ColorsAutokit/Color.tsx




















function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}







var Color = function Color(_ref) {
  var name = _ref.name,
    value = _ref.value;
  var colors = baseTheme/* baseTheme */.$.colors;
  var buttonRef = (0,react.useRef)(null);
  var markCss = _objectSpread({
    backgroundColor: colors.white,
    color: colors.grey0,
    padding: (0,scale/* scale */.h)(1),
    borderRadius: '4px 4px 4px 0px'
  }, (0,typography/* typography */.I)('smallBold'));
  return (0,emotion_react_browser_esm/* jsx */.Y)(Tooltip/* Tooltip */.m, {
    content: "Variable name is copied to the clipboard"
  }, (0,emotion_react_browser_esm/* jsx */.Y)("button", {
    ref: buttonRef,
    type: "button",
    onClick: function onClick() {
      return (0,copyToClipboard/* copyToClipboard */.l)("colors.".concat(name), buttonRef);
    },
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)({
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'flex-end',
      alignItems: 'flex-start',
      width: '100%',
      height: (0,scale/* scale */.h)(28),
      padding: (0,scale/* scale */.h)(1),
      backgroundColor: value,
      borderRadius: '24px 24px 24px 0px',
      transition: 'box-shadow ease 300ms',
      ':focus-visible': {
        outline: 'none',
        boxShadow: "0 0 0 2px ".concat(colors.grey0)
      }
    },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)(_objectSpread(_objectSpread({}, markCss), {}, {
      marginBottom: (0,scale/* scale */.h)(1)
    }),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }, value), (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    css: markCss
  }, name)));
};
try {
    // @ts-ignore
    Color.displayName = "Color";
    // @ts-ignore
    Color.__docgenInfo = { "description": "", "displayName": "Color", "props": { "name": { "defaultValue": null, "description": "Color variable name.", "name": "name", "required": true, "type": { "name": "string" } }, "value": { "defaultValue": null, "description": "Color value.", "name": "value", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/common/ColorsAutokit/Color.tsx#Color"] = { docgenInfo: Color.__docgenInfo, name: "Color", path: "src/autokits/common/ColorsAutokit/Color.tsx#Color" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/utils/autokits/useTheme.ts
var useTheme = __webpack_require__("./src/utils/autokits/useTheme.ts");
;// CONCATENATED MODULE: ./src/autokits/common/ColorsAutokit/index.tsx








/**
 * Autokit for colors tokens `theme.colors`.
 */

var ColorsAutokit = function ColorsAutokit() {
  var _useAutokitsTheme = (0,useTheme/* useAutokitsTheme */.Z)(),
    colors = _useAutokitsTheme.colors;
  if (!colors) return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    css: (0,typography/* typography */.I)('body')
  }, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    role: "img",
    "aria-label": "Error"
  }, "\u26D4\uFE0F"), ' ', "Colors are not defined. Use tokens or add ", (0,emotion_react_browser_esm/* jsx */.Y)("strong", null, "colors"), " property in theme settings manually");
  return (0,emotion_react_browser_esm/* jsx */.Y)(Layout/* Layout */.P, {
    auto: (0,scale/* scale */.h)(20),
    gap: (0,scale/* scale */.h)(8)
  }, Object.keys(colors).map(function (name) {
    return (0,emotion_react_browser_esm/* jsx */.Y)(Layout/* Layout */.P.Item, {
      key: name
    }, (0,emotion_react_browser_esm/* jsx */.Y)(Color, {
      name: name,
      value: colors[name]
    }));
  }));
};
try {
    // @ts-ignore
    ColorsAutokit.displayName = "ColorsAutokit";
    // @ts-ignore
    ColorsAutokit.__docgenInfo = { "description": "Autokit for colors tokens `theme.colors`.", "displayName": "ColorsAutokit", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/common/ColorsAutokit/index.tsx#ColorsAutokit"] = { docgenInfo: ColorsAutokit.__docgenInfo, name: "ColorsAutokit", path: "src/autokits/common/ColorsAutokit/index.tsx#ColorsAutokit" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./.storybook/decorators/paddingDecorator.tsx
var paddingDecorator = __webpack_require__("./.storybook/decorators/paddingDecorator.tsx");
;// CONCATENATED MODULE: ./src/autokits/common/ColorsAutokit/ColorsAutokit.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */




const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Autokits / ColorsAutokit",
    component: ColorsAutokit,
    decorators: [paddingDecorator/* default */.A],
    parameters: {
      design: {
        type: 'figma',
        url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1330%3A2'
      }
    },
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "colors"
  }, `Colors`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "basic",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(ColorsAutokit, {
    mdxType: "ColorsAutokit"
  }))), (0,esm/* mdx */.yg)("p", null, `Автокит для цветов проекта. Читает содержимое поля `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `colors`), ` объекта темы.`));
}
;
MDXContent.isMDXComponent = true;
const basic = () => (0,esm/* mdx */.yg)(ColorsAutokit, null);
basic.storyName = 'basic';
basic.parameters = {
  storySource: {
    source: '<ColorsAutokit />'
  }
};
const componentMeta = {
  title: 'Autokits / ColorsAutokit',
  parameters: {
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1330%3A2'
    }
  },
  decorators: [paddingDecorator/* default */.A],
  component: ColorsAutokit,
  includeStories: ["basic"]
};
const mdxStoryNameToKey = {
  "basic": "basic"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const ColorsAutokit_stories = (componentMeta);

/***/ }),

/***/ "./src/autokits/common/IconsAutokit/IconsAutokit.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  basic: () => (/* binding */ basic),
  "default": () => (/* binding */ IconsAutokit_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.bind.js
var es_function_bind = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("./node_modules/core-js/modules/es.array.slice.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("./node_modules/core-js/modules/es.array.from.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce.js
var es_array_reduce = __webpack_require__("./node_modules/core-js/modules/es.array.reduce.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.match.js
var es_string_match = __webpack_require__("./node_modules/core-js/modules/es.string.match.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js
var es_regexp_exec = __webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__("./node_modules/core-js/modules/es.string.replace.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js
var es_array_find = __webpack_require__("./node_modules/core-js/modules/es.array.find.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find-index.js
var es_array_find_index = __webpack_require__("./node_modules/core-js/modules/es.array.find-index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js
var es_string_split = __webpack_require__("./node_modules/core-js/modules/es.string.split.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce-right.js
var es_array_reduce_right = __webpack_require__("./node_modules/core-js/modules/es.array.reduce-right.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.entries.js
var es_object_entries = __webpack_require__("./node_modules/core-js/modules/es.object.entries.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/deepmerge/dist/cjs.js
var cjs = __webpack_require__("./node_modules/deepmerge/dist/cjs.js");
var cjs_default = /*#__PURE__*/__webpack_require__.n(cjs);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
// EXTERNAL MODULE: ./src/helpers/common/Tooltip.tsx
var Tooltip = __webpack_require__("./src/helpers/common/Tooltip.tsx");
// EXTERNAL MODULE: ./src/helpers/common/copyToClipboard.ts
var copyToClipboard = __webpack_require__("./src/helpers/common/copyToClipboard.ts");
// EXTERNAL MODULE: ./src/helpers/emotion/typography.ts
var typography = __webpack_require__("./src/helpers/emotion/typography.ts");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./src/utils/autokits/useTheme.ts
var useTheme = __webpack_require__("./src/utils/autokits/useTheme.ts");
;// CONCATENATED MODULE: ./src/autokits/common/IconsAutokit/Icon.tsx



















function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}

function _EMOTION_STRINGIFIED_CSS_ERROR__() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}







var _ref2 =  true ? {
  name: "zjik7",
  styles: "display:flex"
} : 0;
var Icon = function Icon(_ref) {
  var name = _ref.name,
    Component = _ref.Component,
    path = _ref.path,
    _ref$iconCSS = _ref.iconCSS,
    iconCSS = _ref$iconCSS === void 0 ? {} : _ref$iconCSS;
  var _useAutokitsTheme = (0,useTheme/* useAutokitsTheme */.Z)(),
    colors = _useAutokitsTheme.colors;
  var buttonRef = (0,react.useRef)(null);
  return (0,emotion_react_browser_esm/* jsx */.Y)(Tooltip/* Tooltip */.m, {
    content: "Path to icon is copied to the clipboard"
  }, (0,emotion_react_browser_esm/* jsx */.Y)("button", {
    ref: buttonRef,
    type: "button",
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)(_objectSpread(_objectSpread({
      width: '100%',
      height: '100%',
      padding: (0,scale/* scale */.h)(2),
      border: "2px solid ".concat(colors === null || colors === void 0 ? void 0 : colors.grey70),
      borderRadius: 4
    }, (0,typography/* typography */.I)('bodyBold')), {}, {
      textAlign: 'center',
      color: colors === null || colors === void 0 ? void 0 : colors.black,
      transition: 'border-color ease 300ms',
      ':hover, :focus-visible': {
        borderColor: colors === null || colors === void 0 ? void 0 : colors.grey0,
        outline: 'none'
      }
    }),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0),
    onClick: function onClick() {
      return (0,copyToClipboard/* copyToClipboard */.l)(path);
    }
  }, (0,emotion_react_browser_esm/* jsx */.Y)(Component, {
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)(_objectSpread(_objectSpread({}, iconCSS), {}, {
      marginBottom: (0,scale/* scale */.h)(1)
    }),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }), (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    css: _ref2
  }, name)));
};
try {
    // @ts-ignore
    Icon.displayName = "Icon";
    // @ts-ignore
    Icon.__docgenInfo = { "description": "", "displayName": "Icon", "props": { "name": { "defaultValue": null, "description": "Icon variable name.", "name": "name", "required": true, "type": { "name": "string" } }, "Component": { "defaultValue": null, "description": "Icon component.", "name": "Component", "required": true, "type": { "name": "SVGRIcon" } }, "path": { "defaultValue": null, "description": "Path to icon from icons directory.", "name": "path", "required": true, "type": { "name": "string" } }, "iconCSS": { "defaultValue": { value: "{}" }, "description": "Icon css", "name": "iconCSS", "required": false, "type": { "name": "CSSObject | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/common/IconsAutokit/Icon.tsx#Icon"] = { docgenInfo: Icon.__docgenInfo, name: "Icon", path: "src/autokits/common/IconsAutokit/Icon.tsx#Icon" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/autokits/common/IconsAutokit/styles.module.scss
var styles_module = __webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/autokits/common/IconsAutokit/styles.module.scss");
;// CONCATENATED MODULE: ./src/autokits/common/IconsAutokit/styles.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(styles_module/* default */.A, options);



/* harmony default export */ const IconsAutokit_styles_module = (styles_module/* default */.A.locals || {});
;// CONCATENATED MODULE: ./src/autokits/common/IconsAutokit/index.tsx




































function IconsAutokit_typeof(o) {
  "@babel/helpers - typeof";

  return IconsAutokit_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, IconsAutokit_typeof(o);
}
var _excluded = ["visible"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
function IconsAutokit_ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function IconsAutokit_objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? IconsAutokit_ownKeys(Object(t), !0).forEach(function (r) {
      IconsAutokit_defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : IconsAutokit_ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function IconsAutokit_defineProperty(e, r, t) {
  return (r = IconsAutokit_toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function IconsAutokit_toPropertyKey(t) {
  var i = IconsAutokit_toPrimitive(t, "string");
  return "symbol" == IconsAutokit_typeof(i) ? i : i + "";
}
function IconsAutokit_toPrimitive(t, r) {
  if ("object" != IconsAutokit_typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != IconsAutokit_typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}





/**
 * Autokit for icons assets from `@icons` directory.
 */
var IconsAutokit = function IconsAutokit(_ref) {
  var useBuilderMethods = _ref.useBuilderMethods,
    _ref$exceptionByPaths = _ref.exceptionByPaths,
    exceptionByPaths = _ref$exceptionByPaths === void 0 ? [] : _ref$exceptionByPaths,
    _ref$iconProperties = _ref.iconProperties,
    iconProperties = _ref$iconProperties === void 0 ? [] : _ref$iconProperties,
    propertiesForAllIcons = _ref.propertiesForAllIcons,
    _ref$headingLevel = _ref.headingLevel,
    headingLevel = _ref$headingLevel === void 0 ? 2 : _ref$headingLevel;
  var _useBuilderMethods = useBuilderMethods(),
    getIconsReq = _useBuilderMethods.getIconsReq,
    getIconsReqKeys = _useBuilderMethods.getIconsReqKeys,
    getIconComponent = _useBuilderMethods.getIconComponent;
  var iconsReq = getIconsReq();
  var iconKeys = getIconsReqKeys(iconsReq);
  var icons = iconKeys.reduce(function (acc, name) {
    var matchRes = name.match(/\.\/(.+)\.svg$/);
    var fullPath = matchRes ? "".concat(matchRes === null || matchRes === void 0 ? void 0 : matchRes[0].slice(1)) : name.replace('/src', '');
    var _ref2 = iconProperties.find(function (p) {
        return p.path === fullPath.slice(0, p.path.length);
      }) || {
        visible: true
      },
      _ref2$visible = _ref2.visible,
      visible = _ref2$visible === void 0 ? true : _ref2$visible,
      iconProperty = _objectWithoutProperties(_ref2, _excluded);
    if (!visible) return acc;
    if (exceptionByPaths.findIndex(function (p) {
      return fullPath.slice(0, p.length) === p;
    }) !== -1) return acc;
    var nameParts = fullPath === null || fullPath === void 0 ? void 0 : fullPath.slice(1).split('/');
    var properties = (Object.keys(iconProperty).length ? iconProperty : propertiesForAllIcons) || {};
    var obj = nameParts === null || nameParts === void 0 ? void 0 : nameParts.reduceRight(function (acc, part, index) {
      var value = index === (nameParts === null || nameParts === void 0 ? void 0 : nameParts.length) - 1 ? IconsAutokit_objectSpread({
        Component: getIconComponent(iconsReq, name),
        path: fullPath
      }, properties) : acc;
      return IconsAutokit_defineProperty({}, part, value);
    }, {});
    return cjs_default()(acc, obj || {});
  }, {});
  function mapIcons(icons, level) {
    var simpleItems = Object.entries(icons).filter(function (_ref4) {
      var _ref5 = _slicedToArray(_ref4, 2),
        value = _ref5[1];
      return value.Component;
    });
    var complexItems = Object.entries(icons).filter(function (_ref6) {
      var _ref7 = _slicedToArray(_ref6, 2),
        value = _ref7[1];
      return !value.Component;
    });
    var Heading = "h".concat(level);
    return (0,emotion_react_browser_esm/* jsx */.Y)(react.Fragment, null, !!simpleItems.length && (0,emotion_react_browser_esm/* jsx */.Y)("div", {
      className: IconsAutokit_styles_module.iconsAutokit_layout
    }, simpleItems.map(function (_ref8) {
      var _ref9 = _slicedToArray(_ref8, 2),
        name = _ref9[0],
        value = _ref9[1];
      return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
        key: name
      }, (0,emotion_react_browser_esm/* jsx */.Y)(Icon, _extends({
        name: name
      }, value)));
    })), !!complexItems.length && complexItems.map(function (_ref10) {
      var _ref11 = _slicedToArray(_ref10, 2),
        name = _ref11[0],
        value = _ref11[1];
      return (0,emotion_react_browser_esm/* jsx */.Y)(react.Fragment, {
        key: name
      }, (0,emotion_react_browser_esm/* jsx */.Y)(Heading, {
        className: IconsAutokit_styles_module.iconsAutokit_title
      }, name), mapIcons(value, level + 1));
    }));
  }
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    className: IconsAutokit_styles_module.iconsAutokit
  }, mapIcons(icons, headingLevel));
};
try {
    // @ts-ignore
    IconsAutokit.displayName = "IconsAutokit";
    // @ts-ignore
    IconsAutokit.__docgenInfo = { "description": "Autokit for icons assets from `@icons` directory.", "displayName": "IconsAutokit", "props": { "headingLevel": { "defaultValue": { value: 2 }, "description": "Starting heading level.", "name": "headingLevel", "required": false, "type": { "name": "number | undefined" } }, "useBuilderMethods": { "defaultValue": null, "description": "builder methods hook", "name": "useBuilderMethods", "required": true, "type": { "name": "UseBuilderMethodsType" } }, "exceptionByPaths": { "defaultValue": { value: "[]" }, "description": "exception by path", "name": "exceptionByPaths", "required": false, "type": { "name": "string[] | undefined" } }, "iconProperties": { "defaultValue": { value: "[]" }, "description": "icon properties", "name": "iconProperties", "required": false, "type": { "name": "IIconGeneralProperty[] | undefined" } }, "propertiesForAllIcons": { "defaultValue": null, "description": "properties for all icons", "name": "propertiesForAllIcons", "required": false, "type": { "name": "{ iconCSS: CSSObject; } | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/common/IconsAutokit/index.tsx#IconsAutokit"] = { docgenInfo: IconsAutokit.__docgenInfo, name: "IconsAutokit", path: "src/autokits/common/IconsAutokit/index.tsx#IconsAutokit" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./.storybook/decorators/paddingDecorator.tsx
var paddingDecorator = __webpack_require__("./.storybook/decorators/paddingDecorator.tsx");
;// CONCATENATED MODULE: ./src/utils/autokits/useIconsWebpack.ts



var getIconsReq = function getIconsReq() {
  return __webpack_require__("./src sync recursive \\.svg$");
};
var getIconsReqKeys = function getIconsReqKeys(iconReq) {
  return iconReq.keys();
};
var getIconComponent = function getIconComponent(iconReq, name) {
  return iconReq(name)["default"];
};
var useIconsWebpack = function useIconsWebpack() {
  return {
    getIconsReq: getIconsReq,
    getIconsReqKeys: getIconsReqKeys,
    getIconComponent: getIconComponent
  };
};
;// CONCATENATED MODULE: ./src/autokits/common/IconsAutokit/IconsAutokit.stories.mdx
function IconsAutokit_stories_extends() { return IconsAutokit_stories_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, IconsAutokit_stories_extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */





const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, IconsAutokit_stories_extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Autokits / IconsAutokit",
    component: IconsAutokit,
    decorators: [paddingDecorator/* default */.A],
    parameters: {
      design: {
        type: 'figma',
        url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1491%3A0'
      }
    },
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "icons"
  }, `Icons`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "basic",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(IconsAutokit, {
    useBuilderMethods: useIconsWebpack,
    mdxType: "IconsAutokit"
  }))), (0,esm/* mdx */.yg)("p", null, `Автокит для иконок проекта. Читает содержимое поля `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `icons`), ` объекта темы.`), (0,esm/* mdx */.yg)("p", null, `Этот автокит отличается от остальных, т.к. работает с файловой структурой. Он ожидает увидеть путь до иконки в переменной окружения `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `process.env.ICONS_DIR`), ` и использует svgr-webpack для загрузки иконок, который должен быть установлен на стороне пользователя пакета.`), (0,esm/* mdx */.yg)("p", null, `Пример передачи переменной окружения через webpack:`), (0,esm/* mdx */.yg)("pre", null, (0,esm/* mdx */.yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `new webpack.EnvironmentPlugin({ ICONS_DIR: '../../images/icons' }),
`)), (0,esm/* mdx */.yg)("p", null, `💬 Вы можете использовать GDS, не используя этот автокит, webpack и svgr. Просто на сборке тогда появится warning. Вероятно у этого модуля должно быть более элегантное решение по настройке – мы открыты для pull request.`), (0,esm/* mdx */.yg)("h2", {
    "id": "props"
  }, `Props`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    of: IconsAutokit,
    mdxType: "Props"
  }));
}
;
MDXContent.isMDXComponent = true;
const basic = () => (0,esm/* mdx */.yg)(IconsAutokit, {
  useBuilderMethods: useIconsWebpack
});
basic.storyName = 'basic';
basic.parameters = {
  storySource: {
    source: '<IconsAutokit useBuilderMethods={useIconsWebpack} />'
  }
};
const componentMeta = {
  title: 'Autokits / IconsAutokit',
  parameters: {
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1491%3A0'
    }
  },
  decorators: [paddingDecorator/* default */.A],
  component: IconsAutokit,
  includeStories: ["basic"]
};
const mdxStoryNameToKey = {
  "basic": "basic"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const IconsAutokit_stories = (componentMeta);

/***/ }),

/***/ "./src/autokits/common/ShadowsAutokit/ShadowsAutokit.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  basic: () => (/* binding */ basic),
  "default": () => (/* binding */ ShadowsAutokit_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./src/components/emotion/Layout/index.tsx + 3 modules
var Layout = __webpack_require__("./src/components/emotion/Layout/index.tsx");
// EXTERNAL MODULE: ./src/helpers/emotion/typography.ts
var typography = __webpack_require__("./src/helpers/emotion/typography.ts");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
// EXTERNAL MODULE: ./src/helpers/common/Tooltip.tsx
var Tooltip = __webpack_require__("./src/helpers/common/Tooltip.tsx");
// EXTERNAL MODULE: ./src/helpers/common/copyToClipboard.ts
var copyToClipboard = __webpack_require__("./src/helpers/common/copyToClipboard.ts");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
;// CONCATENATED MODULE: ./src/autokits/common/ShadowsAutokit/Shadow.tsx



















function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}

function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}







var Shadow = function Shadow(_ref) {
  var name = _ref.name,
    value = _ref.value;
  var colors = baseTheme/* baseTheme */.$.colors;
  var buttonRef = (0,react.useRef)(null);
  return (0,emotion_react_browser_esm/* jsx */.Y)(Tooltip/* Tooltip */.m, {
    content: "Variable name is copied to the clipboard"
  }, (0,emotion_react_browser_esm/* jsx */.Y)("button", {
    ref: buttonRef,
    type: "button",
    onClick: function onClick() {
      return (0,copyToClipboard/* copyToClipboard */.l)("shadows.".concat(name), buttonRef);
    },
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)({
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'flex-end',
      width: '100%',
      height: (0,scale/* scale */.h)(28),
      padding: (0,scale/* scale */.h)(1),
      backgroundColor: colors.white,
      borderRadius: '24px 24px 24px 0px',
      boxShadow: value,
      transition: 'box-shadow ease 300ms',
      ':focus-visible': {
        outline: 'none',
        boxShadow: "0 0 0 2px ".concat(colors.grey0)
      }
    },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)(_objectSpread({
      backgroundColor: colors.white,
      color: colors.grey0,
      padding: (0,scale/* scale */.h)(1),
      borderRadius: '4px 4px 4px 0px'
    }, (0,typography/* typography */.I)('smallBold')),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }, name)));
};
try {
    // @ts-ignore
    Shadow.displayName = "Shadow";
    // @ts-ignore
    Shadow.__docgenInfo = { "description": "", "displayName": "Shadow", "props": { "name": { "defaultValue": null, "description": "Shadow variable name.", "name": "name", "required": true, "type": { "name": "string" } }, "value": { "defaultValue": null, "description": "Shadow value.", "name": "value", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/common/ShadowsAutokit/Shadow.tsx#Shadow"] = { docgenInfo: Shadow.__docgenInfo, name: "Shadow", path: "src/autokits/common/ShadowsAutokit/Shadow.tsx#Shadow" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/utils/autokits/useTheme.ts
var useTheme = __webpack_require__("./src/utils/autokits/useTheme.ts");
;// CONCATENATED MODULE: ./src/autokits/common/ShadowsAutokit/index.tsx








/**
 * Autokit for shadows tokens `theme.shadows`.
 */

var ShadowsAutokit = function ShadowsAutokit() {
  var _useAutokitsTheme = (0,useTheme/* useAutokitsTheme */.Z)(),
    shadows = _useAutokitsTheme.shadows;
  if (!shadows) return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    css: (0,typography/* typography */.I)('body')
  }, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    role: "img",
    "aria-label": "Error"
  }, "\u26D4\uFE0F"), ' ', "Shadows are not defined. Use tokens or add ", (0,emotion_react_browser_esm/* jsx */.Y)("strong", null, "shadows"), " property in theme settings manually");
  return (0,emotion_react_browser_esm/* jsx */.Y)(Layout/* Layout */.P, {
    auto: (0,scale/* scale */.h)(20),
    gap: (0,scale/* scale */.h)(8)
  }, Object.keys(shadows).map(function (name) {
    return (0,emotion_react_browser_esm/* jsx */.Y)(Layout/* Layout */.P.Item, {
      key: name
    }, (0,emotion_react_browser_esm/* jsx */.Y)(Shadow, {
      name: name,
      value: shadows[name]
    }));
  }));
};
try {
    // @ts-ignore
    ShadowsAutokit.displayName = "ShadowsAutokit";
    // @ts-ignore
    ShadowsAutokit.__docgenInfo = { "description": "Autokit for shadows tokens `theme.shadows`.", "displayName": "ShadowsAutokit", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/common/ShadowsAutokit/index.tsx#ShadowsAutokit"] = { docgenInfo: ShadowsAutokit.__docgenInfo, name: "ShadowsAutokit", path: "src/autokits/common/ShadowsAutokit/index.tsx#ShadowsAutokit" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./.storybook/decorators/paddingDecorator.tsx
var paddingDecorator = __webpack_require__("./.storybook/decorators/paddingDecorator.tsx");
;// CONCATENATED MODULE: ./src/autokits/common/ShadowsAutokit/ShadowsAutokit.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */




const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Autokits / ShadowsAutokit",
    component: ShadowsAutokit,
    decorators: [paddingDecorator/* default */.A],
    parameters: {
      design: {
        type: 'figma',
        url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1844%3A3091'
      }
    },
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "shadows"
  }, `Shadows`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "basic",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(ShadowsAutokit, {
    mdxType: "ShadowsAutokit"
  }))), (0,esm/* mdx */.yg)("p", null, `Автокит для теней проекта. Читает содержимое поля `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `shadows`), ` объекта темы.`));
}
;
MDXContent.isMDXComponent = true;
const basic = () => (0,esm/* mdx */.yg)(ShadowsAutokit, null);
basic.storyName = 'basic';
basic.parameters = {
  storySource: {
    source: '<ShadowsAutokit />'
  }
};
const componentMeta = {
  title: 'Autokits / ShadowsAutokit',
  parameters: {
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1844%3A3091'
    }
  },
  decorators: [paddingDecorator/* default */.A],
  component: ShadowsAutokit,
  includeStories: ["basic"]
};
const mdxStoryNameToKey = {
  "basic": "basic"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const ShadowsAutokit_stories = (componentMeta);

/***/ }),

/***/ "./src/autokits/common/TypographyAutokit/TypographyAutokit.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  basic: () => (/* binding */ basic),
  "default": () => (/* binding */ TypographyAutokit_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("./node_modules/core-js/modules/es.array.slice.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("./node_modules/core-js/modules/es.array.from.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.sort.js
var es_array_sort = __webpack_require__("./node_modules/core-js/modules/es.array.sort.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.parse-float.js
var es_parse_float = __webpack_require__("./node_modules/core-js/modules/es.parse-float.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.entries.js
var es_object_entries = __webpack_require__("./node_modules/core-js/modules/es.object.entries.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
// EXTERNAL MODULE: ./src/helpers/emotion/typography.ts
var typography = __webpack_require__("./src/helpers/emotion/typography.ts");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
// EXTERNAL MODULE: ./src/utils/emotion/typography.ts + 1 modules
var emotion_typography = __webpack_require__("./src/utils/emotion/typography.ts");
// EXTERNAL MODULE: ./src/utils/autokits/useTheme.ts
var useTheme = __webpack_require__("./src/utils/autokits/useTheme.ts");
;// CONCATENATED MODULE: ./src/autokits/common/TypographyAutokit/index.tsx





























function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}






/**
 * Autokit for typography tokens `theme.typography` and fonts settings `theme.global.fonts`.
 */
var TypographyAutokit = function TypographyAutokit(_ref) {
  var _theme$global;
  var _ref$text = _ref.text,
    text = _ref$text === void 0 ? 'Demo text 123' : _ref$text;
  var theme = (0,useTheme/* useAutokitsTheme */.Z)();
  var globalFontsTheme = (_theme$global = theme.global) === null || _theme$global === void 0 ? void 0 : _theme$global.fonts;
  var typographyTheme = theme.typography;
  var colors = baseTheme/* baseTheme */.$.colors;
  if (!typographyTheme) return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    css: (0,typography/* typography */.I)('body')
  }, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    role: "img",
    "aria-label": "Error"
  }, "\u26D4\uFE0F"), ' ', "Typography is not defined. Use tokens or add ", (0,emotion_react_browser_esm/* jsx */.Y)("strong", null, "typography"), " property in theme settings manually");
  var markCss = _objectSpread({
    backgroundColor: colors.grey90,
    color: colors.grey20,
    padding: (0,scale/* scale */.h)(1, true),
    borderRadius: 4,
    marginRight: (0,scale/* scale */.h)(1)
  }, (0,typography/* typography */.I)('smallBold'));
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    css: (0,typography/* typography */.I)('body')
  }, Object.keys(typographyTheme.styles).sort(function (a, b) {
    return parseFloat(typographyTheme.styles[b].desktop.fontSize) - parseFloat(typographyTheme.styles[a].desktop.fontSize);
  }).map(function (name) {
    var isFluid = true;
    var fluidSettings = globalFontsTheme === null || globalFontsTheme === void 0 ? void 0 : globalFontsTheme.fluid;
    if (fluidSettings !== undefined) {
      isFluid = Array.isArray(fluidSettings) ? !fluidSettings.includes(name) : fluidSettings;
    }
    return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
      key: name,
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)({
        display: 'flex',
        alignItems: 'flex-end',
        marginBottom: (0,scale/* scale */.h)(3)
      },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, (0,emotion_react_browser_esm/* jsx */.Y)("div", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)({
        minWidth: (0,scale/* scale */.h)(17),
        marginRight: (0,scale/* scale */.h)(2)
      },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, typographyTheme.styles[name].mobile && (0,emotion_react_browser_esm/* jsx */.Y)("span", {
      css: markCss
    }, isFluid ? 'F' : 'M'), (0,emotion_react_browser_esm/* jsx */.Y)("span", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)(_objectSpread({
        color: colors.grey20
      }, (0,typography/* typography */.I)('body')),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, name)), (0,emotion_react_browser_esm/* jsx */.Y)("div", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)(_objectSpread(_objectSpread({}, (0,emotion_typography/* typography */.I)(name, theme)), {}, {
        color: colors.black
      }),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, text));
  }), (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)({
      marginBottom: (0,scale/* scale */.h)(2)
    },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }, (0,emotion_react_browser_esm/* jsx */.Y)("p", {
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)({
      marginBottom: (0,scale/* scale */.h)(2)
    },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }, "Breakpoints: ", (0,emotion_react_browser_esm/* jsx */.Y)("strong", null, typographyTheme.breakpoints[0]), " and", ' ', (0,emotion_react_browser_esm/* jsx */.Y)("strong", null, typographyTheme.breakpoints[1])), (0,emotion_react_browser_esm/* jsx */.Y)("p", null, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    css: markCss
  }, "F"), " - \"F for fluid\", style has adaptive variation with fluid typography"), (0,emotion_react_browser_esm/* jsx */.Y)("p", null, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    css: markCss
  }, "M"), " - \"M for mobile\", style has adaptive version without fluid typography")), globalFontsTheme !== null && globalFontsTheme !== void 0 && globalFontsTheme.families ? Object.entries(globalFontsTheme.families).map(function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
      family = _ref3[0],
      familySettings = _ref3[1];
    return (0,emotion_react_browser_esm/* jsx */.Y)("dl", {
      key: family,
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)({
        marginBottom: (0,scale/* scale */.h)(2)
      },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, (0,emotion_react_browser_esm/* jsx */.Y)("dt", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)(_objectSpread({}, (0,typography/* typography */.I)('bodyBold')),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, "Font family"), (0,emotion_react_browser_esm/* jsx */.Y)("dd", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)(_objectSpread(_objectSpread({}, (0,typography/* typography */.I)('body')), {}, {
        marginLeft: (0,scale/* scale */.h)(4)
      }),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, family), (0,emotion_react_browser_esm/* jsx */.Y)("dt", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)(_objectSpread({}, (0,typography/* typography */.I)('bodyBold')),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, "Variable font"), (0,emotion_react_browser_esm/* jsx */.Y)("dd", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)(_objectSpread(_objectSpread({}, (0,typography/* typography */.I)('body')), {}, {
        marginLeft: (0,scale/* scale */.h)(4)
      }),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, familySettings.vf ? 'true' : 'false'), (0,emotion_react_browser_esm/* jsx */.Y)("dt", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)(_objectSpread({}, (0,typography/* typography */.I)('bodyBold')),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, "Font stack"), (0,emotion_react_browser_esm/* jsx */.Y)("dd", {
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,emotion_react_browser_esm/* css */.AH)(_objectSpread(_objectSpread({}, (0,typography/* typography */.I)('body')), {}, {
        marginLeft: (0,scale/* scale */.h)(4)
      }),  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }, familySettings.stack || 'sans-serif'));
  }) : (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    css: (0,typography/* typography */.I)('body')
  }, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    role: "img",
    "aria-label": "Error"
  }, "\u26D4\uFE0F"), ' ', "Specify ", (0,emotion_react_browser_esm/* jsx */.Y)("strong", null, "global.fonts.families"), " in theme settings to add fonts info in autokit."));
};
try {
    // @ts-ignore
    TypographyAutokit.displayName = "TypographyAutokit";
    // @ts-ignore
    TypographyAutokit.__docgenInfo = { "description": "Autokit for typography tokens `theme.typography` and fonts settings `theme.global.fonts`.", "displayName": "TypographyAutokit", "props": { "text": { "defaultValue": { value: "Demo text 123" }, "description": "Placeholder text.", "name": "text", "required": false, "type": { "name": "string | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/common/TypographyAutokit/index.tsx#TypographyAutokit"] = { docgenInfo: TypographyAutokit.__docgenInfo, name: "TypographyAutokit", path: "src/autokits/common/TypographyAutokit/index.tsx#TypographyAutokit" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./.storybook/decorators/paddingDecorator.tsx
var paddingDecorator = __webpack_require__("./.storybook/decorators/paddingDecorator.tsx");
;// CONCATENATED MODULE: ./src/autokits/common/TypographyAutokit/TypographyAutokit.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */




const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Autokits / TypographyAutokit",
    component: TypographyAutokit,
    decorators: [paddingDecorator/* default */.A],
    parameters: {
      design: {
        type: 'figma',
        url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1373%3A2361'
      }
    },
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "typography"
  }, `Typography`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "basic",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(TypographyAutokit, {
    mdxType: "TypographyAutokit"
  }))), (0,esm/* mdx */.yg)("p", null, `Автокит для типографики проекта. Читает содержимое поля `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `typography`), ` объекта темы.`), (0,esm/* mdx */.yg)("h2", {
    "id": "props"
  }, `Props`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    of: TypographyAutokit,
    mdxType: "Props"
  }));
}
;
MDXContent.isMDXComponent = true;
const basic = () => (0,esm/* mdx */.yg)(TypographyAutokit, null);
basic.storyName = 'basic';
basic.parameters = {
  storySource: {
    source: '<TypographyAutokit />'
  }
};
const componentMeta = {
  title: 'Autokits / TypographyAutokit',
  parameters: {
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1373%3A2361'
    }
  },
  decorators: [paddingDecorator/* default */.A],
  component: TypographyAutokit,
  includeStories: ["basic"]
};
const mdxStoryNameToKey = {
  "basic": "basic"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const TypographyAutokit_stories = (componentMeta);

/***/ }),

/***/ "./src/autokits/emotion/LayoutAutokit/LayoutAutokit.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  basic: () => (/* binding */ basic),
  "default": () => (/* binding */ LayoutAutokit_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("./node_modules/core-js/modules/es.array.slice.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("./node_modules/core-js/modules/es.array.from.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.entries.js
var es_object_entries = __webpack_require__("./node_modules/core-js/modules/es.object.entries.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.fill.js
var es_array_fill = __webpack_require__("./node_modules/core-js/modules/es.array.fill.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.index-of.js
var es_array_index_of = __webpack_require__("./node_modules/core-js/modules/es.array.index-of.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.some.js
var es_array_some = __webpack_require__("./node_modules/core-js/modules/es.array.some.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reverse.js
var es_array_reverse = __webpack_require__("./node_modules/core-js/modules/es.array.reverse.js");
// EXTERNAL MODULE: ./src/helpers/common/constants.ts
var constants = __webpack_require__("./src/helpers/common/constants.ts");
// EXTERNAL MODULE: ./src/utils/autokits/useTheme.ts
var useTheme = __webpack_require__("./src/utils/autokits/useTheme.ts");
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__("./node_modules/classnames/index.js");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/autokits/emotion/LayoutAutokit/styles.module.scss
var styles_module = __webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/autokits/emotion/LayoutAutokit/styles.module.scss");
;// CONCATENATED MODULE: ./src/autokits/emotion/LayoutAutokit/styles.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(styles_module/* default */.A, options);



/* harmony default export */ const LayoutAutokit_styles_module = (styles_module/* default */.A.locals || {});
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./src/autokits/emotion/LayoutAutokit/Item.tsx












var Item = function Item(_ref) {
  var breakpointName = _ref.breakpointName,
    breakpointValue = _ref.breakpointValue;
  var theme = (0,useTheme/* useAutokitsTheme */.Z)();
  var layout = theme.layout;
  var cols = getLayoutValue(layout.cols, breakpointName);
  var gap = getLayoutValue(layout.gap, breakpointName);
  var container = getLayoutValue(layout.container, breakpointName);
  var marginLeft = getLayoutValue(layout.marginLeft, breakpointName);
  var marginRight = getLayoutValue(layout.marginRight, breakpointName);
  var padding = getLayoutValue(layout.padding, breakpointName);
  var paddingStyles = {
    className: classnames_default()(LayoutAutokit_styles_module.layoutAutokitItemLayout_item, LayoutAutokit_styles_module.layoutAutokitItemLayout_item__padding),
    style: {
      '--layout-item-padding-width': "".concat(container !== 'none' ? (breakpointValue - container) / 2 : padding, "px")
    }
  };
  var colStyles = {
    className: classnames_default()(LayoutAutokit_styles_module.layoutAutokitItemLayout_item, LayoutAutokit_styles_module.layoutAutokitItemLayout_item__col),
    style: {
      '--layout-item-col-width': "".concat(container !== 'none' ? (container + gap) / cols - gap : (breakpointValue - padding * 2 + gap) / cols - gap, "px")
    }
  };
  var gapStyles = {
    className: classnames_default()(LayoutAutokit_styles_module.layoutAutokitItemLayout_item, LayoutAutokit_styles_module.layoutAutokitItemLayout_item__gap),
    style: {
      '--layout-item-gap-width': "".concat(gap, "px")
    }
  };
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null, (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    className: LayoutAutokit_styles_module.layoutAutokitItem_title
  }, breakpointValue, " (", breakpointName, ")"), (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    className: classnames_default()(LayoutAutokit_styles_module.layoutAutokitItem_layout, LayoutAutokit_styles_module.layoutAutokitItemLayout)
  }, (0,emotion_react_browser_esm/* jsx */.Y)("div", paddingStyles, marginLeft || padding), new Array(cols - 1).fill('').map(function (item, index) {
    return (0,emotion_react_browser_esm/* jsx */.Y)(react.Fragment, {
      key: index
    }, (0,emotion_react_browser_esm/* jsx */.Y)("div", colStyles), (0,emotion_react_browser_esm/* jsx */.Y)("div", gapStyles, gap));
  }), (0,emotion_react_browser_esm/* jsx */.Y)("div", colStyles), (0,emotion_react_browser_esm/* jsx */.Y)("div", paddingStyles, marginRight || padding)));
};
var getLayoutValue = function getLayoutValue(param, name) {
  var breakpointsAbove = constants/* BREAKPOINTS_NAMES */.Md.slice(0, constants/* BREAKPOINTS_NAMES */.Md.indexOf(name) + 1);
  var value;
  breakpointsAbove.reverse().some(function (name) {
    if (param[name] === undefined) return false;
    value = param[name];
    return true;
  });
  return value;
};
try {
    // @ts-ignore
    Item.displayName = "Item";
    // @ts-ignore
    Item.__docgenInfo = { "description": "", "displayName": "Item", "props": { "breakpointName": { "defaultValue": null, "description": "Breakpoint name.", "name": "breakpointName", "required": true, "type": { "name": "Breakpoint" } }, "breakpointValue": { "defaultValue": null, "description": "Breakpoint value.", "name": "breakpointValue", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/emotion/LayoutAutokit/Item.tsx#Item"] = { docgenInfo: Item.__docgenInfo, name: "Item", path: "src/autokits/emotion/LayoutAutokit/Item.tsx#Item" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./src/autokits/emotion/LayoutAutokit/index.tsx













function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}




/**
 * Autokit for layout tokens `theme.layout`.
 */

var LayoutAutokit = function LayoutAutokit() {
  var _useAutokitsTheme = (0,useTheme/* useAutokitsTheme */.Z)(),
    layout = _useAutokitsTheme.layout;
  if (!layout) return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    className: LayoutAutokit_styles_module.layoutAutokitError
  }, (0,emotion_react_browser_esm/* jsx */.Y)("span", {
    role: "img",
    "aria-label": "Error"
  }, "\u26D4\uFE0F"), ' ', "Layout is not defined. Use tokens or add ", (0,emotion_react_browser_esm/* jsx */.Y)("strong", null, "layout"), " property in theme settings manually");
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    className: LayoutAutokit_styles_module.layoutAutokit
  }, Object.entries(layout.breakpoints).map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
      name = _ref2[0],
      value = _ref2[1];
    return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
      key: name,
      style: {
        width: value
      }
    }, (0,emotion_react_browser_esm/* jsx */.Y)(Item, {
      breakpointName: name,
      breakpointValue: value
    }));
  }));
};
try {
    // @ts-ignore
    LayoutAutokit.displayName = "LayoutAutokit";
    // @ts-ignore
    LayoutAutokit.__docgenInfo = { "description": "Autokit for layout tokens `theme.layout`.", "displayName": "LayoutAutokit", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/emotion/LayoutAutokit/index.tsx#LayoutAutokit"] = { docgenInfo: LayoutAutokit.__docgenInfo, name: "LayoutAutokit", path: "src/autokits/emotion/LayoutAutokit/index.tsx#LayoutAutokit" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./.storybook/decorators/paddingDecorator.tsx
var paddingDecorator = __webpack_require__("./.storybook/decorators/paddingDecorator.tsx");
;// CONCATENATED MODULE: ./src/autokits/emotion/LayoutAutokit/LayoutAutokit.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */




const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Autokits / LayoutAutokit",
    component: LayoutAutokit,
    decorators: [paddingDecorator/* default */.A],
    parameters: {
      design: {
        type: 'figma',
        url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1502%3A1'
      }
    },
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "layout"
  }, `Layout`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "basic",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(LayoutAutokit, {
    mdxType: "LayoutAutokit"
  }))), (0,esm/* mdx */.yg)("p", null, `Автокит для сеток проекта. Читает содержимое поля `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `layout`), ` объекта темы.`), (0,esm/* mdx */.yg)("p", null, `💬 Автокит демонстрирует размеры 1:1, так что здесь должен быть скролл.`));
}
;
MDXContent.isMDXComponent = true;
const basic = () => (0,esm/* mdx */.yg)(LayoutAutokit, null);
basic.storyName = 'basic';
basic.parameters = {
  storySource: {
    source: '<LayoutAutokit />'
  }
};
const componentMeta = {
  title: 'Autokits / LayoutAutokit',
  parameters: {
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1502%3A1'
    }
  },
  decorators: [paddingDecorator/* default */.A],
  component: LayoutAutokit,
  includeStories: ["basic"]
};
const mdxStoryNameToKey = {
  "basic": "basic"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const LayoutAutokit_stories = (componentMeta);

/***/ }),

/***/ "./src/components/emotion/Button/Button.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  basic: () => (/* binding */ basic),
  block: () => (/* binding */ block),
  "default": () => (/* binding */ Button_stories),
  disabled: () => (/* binding */ disabled),
  externalLink: () => (/* binding */ externalLink),
  hiddenMode: () => (/* binding */ hiddenMode),
  knobs: () => (/* binding */ knobs),
  largeSize: () => (/* binding */ largeSize),
  link: () => (/* binding */ Button_stories_link),
  multilineModeBr: () => (/* binding */ multilineModeBr),
  multilineModeFixedWidth: () => (/* binding */ multilineModeFixedWidth),
  secondaryTheme: () => (/* binding */ secondaryTheme),
  smallSize: () => (/* binding */ smallSize),
  withIconAfter: () => (/* binding */ withIconAfter),
  withIconBefore: () => (/* binding */ withIconBefore)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-actions/dist/esm/index.js + 8 modules
var addon_actions_dist_esm = __webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.parse-float.js
var es_parse_float = __webpack_require__("./node_modules/core-js/modules/es.parse-float.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.ends-with.js
var es_string_ends_with = __webpack_require__("./node_modules/core-js/modules/es.string.ends-with.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js
var es_array_join = __webpack_require__("./node_modules/core-js/modules/es.array.join.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
// EXTERNAL MODULE: ./src/components/emotion/VisuallyHidden/index.tsx
var VisuallyHidden = __webpack_require__("./src/components/emotion/VisuallyHidden/index.tsx");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
// EXTERNAL MODULE: ./src/utils/emotion/useTheme.ts
var useTheme = __webpack_require__("./src/utils/emotion/useTheme.ts");
;// CONCATENATED MODULE: ./src/helpers/emotion/useComponentTheme.ts




/**
 * Custom hook returns used component and project themes based on custom theme exist check. Use it for all components defined in `ComponentsTheme`.
 */
var useComponentTheme = function useComponentTheme(name, __theme) {
  var userTheme = (0,useTheme/* useTheme */.D)();
  return (0,react.useMemo)(function () {
    var componentTheme;
    var usedTheme;
    if (userTheme.components && userTheme.components[name]) {
      usedTheme = userTheme;
      componentTheme = userTheme.components[name];
    } else {
      usedTheme = baseTheme/* baseTheme */.$;
      componentTheme = baseTheme/* baseTheme */.$.components[name];
    }
    componentTheme = __theme || componentTheme;
    return {
      componentTheme: componentTheme,
      usedTheme: usedTheme
    };
  }, [__theme, name, userTheme]);
};
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./src/utils/emotion/typography.ts + 1 modules
var typography = __webpack_require__("./src/utils/emotion/typography.ts");
;// CONCATENATED MODULE: ./src/components/emotion/Button/index.tsx

























function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
var _excluded = ["children", "theme", "size", "block", "Icon", "iconAfter", "hidden", "type", "as", "external", "__theme", "css"];
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}








var sizeDefaults = {
  height: (0,scale/* scale */.h)(6),
  padding: (0,scale/* scale */.h)(3),
  iconSize: (0,scale/* scale */.h)(3),
  iconOffset: (0,scale/* scale */.h)(1)
};

/**
 * Button component.
 *
 * Renders <button /> or <a /> (pass `href`) or any custom element (pass `as`).
 *
 * Define themes and sizes in theme object (`components.Button`) and use them as `theme` / `size` prop values.
 */
var Btn = function Btn(_ref, ref) {
  var _usedTheme$typography2;
  var children = _ref.children,
    _ref$theme = _ref.theme,
    theme = _ref$theme === void 0 ? 'primary' : _ref$theme,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$block = _ref.block,
    block = _ref$block === void 0 ? false : _ref$block,
    Icon = _ref.Icon,
    _ref$iconAfter = _ref.iconAfter,
    iconAfter = _ref$iconAfter === void 0 ? false : _ref$iconAfter,
    _ref$hidden = _ref.hidden,
    hidden = _ref$hidden === void 0 ? false : _ref$hidden,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'button' : _ref$type,
    as = _ref.as,
    _ref$external = _ref.external,
    external = _ref$external === void 0 ? false : _ref$external,
    __theme = _ref.__theme,
    css = _ref.css,
    props = _objectWithoutProperties(_ref, _excluded);
  /* Get theme objects. */
  var _useComponentTheme = useComponentTheme('Button', __theme),
    componentTheme = _useComponentTheme.componentTheme,
    usedTheme = _useComponentTheme.usedTheme;
  var buttonTheme = componentTheme;
  if (!buttonTheme.themes[theme]) console.warn("Specify \"".concat(theme, "\" theme. Default values are used instead"));
  if (!buttonTheme.sizes[size]) console.warn("Specify \"".concat(size, "\" size. Default values are used instead"));

  /* Get theme default state properties and merge them with default values. */
  var themeProperties = getThemeProperties(buttonTheme, theme, 'default');
  var sizeProperties = buttonTheme.sizes[size];
  var themeDefaults = (0,react.useMemo)(function () {
    return {
      borderWidth: themeProperties.border ? 1 : 0,
      borderStyle: 'solid',
      time: 200,
      easing: 'ease',
      color: baseTheme/* baseTheme */.$.colors.white,
      bg: baseTheme/* baseTheme */.$.colors.black
    };
  }, [themeProperties.border]);
  var tp = (0,react.useMemo)(function () {
    return _objectSpread(_objectSpread({}, themeDefaults), themeProperties);
  }, [themeDefaults, themeProperties]);
  var sp = (0,react.useMemo)(function () {
    return _objectSpread(_objectSpread({}, sizeDefaults), sizeProperties);
  }, [sizeProperties]);

  /* Define CSS rules from theme properties for default state. */
  var typographyName = sp.typography;
  var typographyCSS = (0,typography/* typography */.I)(typographyName, usedTheme);
  var pv = (0,react.useMemo)(function () {
    var _usedTheme$typography;
    return getVerticalPaddings(typographyName ? (_usedTheme$typography = usedTheme.typography) === null || _usedTheme$typography === void 0 || (_usedTheme$typography = _usedTheme$typography.styles[typographyName]) === null || _usedTheme$typography === void 0 ? void 0 : _usedTheme$typography.desktop : undefined, sp, tp, !!Icon);
  }, [Icon, sp, tp, typographyName, (_usedTheme$typography2 = usedTheme.typography) === null || _usedTheme$typography2 === void 0 ? void 0 : _usedTheme$typography2.styles]);
  var borderRadius = !tp.half ? tp.borderRadius : sp.height / 2;
  var padding = "".concat(pv, "px ").concat(sp.padding, "px");
  var transition = (0,react.useMemo)(function () {
    return getTransition(tp.time, tp.easing);
  }, [tp.easing, tp.time]);
  var defaultCSS = (0,react.useMemo)(function () {
    return _objectSpread(_objectSpread(_objectSpread({
      display: 'inline-flex',
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: tp.borderWidth,
      borderStyle: tp.borderStyle
    }, typographyCSS), {}, {
      borderRadius: borderRadius,
      padding: padding,
      transition: transition
    }, getStateCSS(tp)), sp.css);
  }, [borderRadius, padding, sp.css, tp, transition, typographyCSS]);

  /* Define CSS rules from theme properties for other states. */
  var themeHoverProperties = getThemeProperties(buttonTheme, theme, 'hover');
  var themeActiveProperties = getThemeProperties(buttonTheme, theme, 'active');
  var themeDisabledProperties = getThemeProperties(buttonTheme, theme, 'disabled');
  var themeFocusProperties = getThemeProperties(buttonTheme, theme, 'focus');
  var statesCSS = (0,react.useMemo)(function () {
    return {
      ':hover': _objectSpread(_objectSpread({}, getStateCSS(themeHoverProperties)), tp.timeIn && {
        transition: getTransition(tp.timeIn, tp.easing)
      }),
      ':active': getStateCSS(themeActiveProperties),
      ':disabled': _objectSpread(_objectSpread({}, getStateCSS(themeDisabledProperties)), {}, {
        cursor: 'not-allowed'
      }),
      ':focus': getStateCSS(themeFocusProperties)
    };
  }, [themeActiveProperties, themeDisabledProperties, themeFocusProperties, themeHoverProperties, tp.easing, tp.timeIn]);

  /* Build CSS object combined with rules from props. */
  var blockStyles = (0,react.useMemo)(function () {
    return {
      display: 'flex',
      width: '100%'
    };
  }, []);
  var hiddenRoundStyles = (0,react.useMemo)(function () {
    return {
      borderRadius: '50%',
      padding: "".concat(pv, "px ").concat((sp.height - sp.iconSize - tp.borderWidth) / 2, "px")
    };
  }, [pv, sp.height, sp.iconSize, tp.borderWidth]);

  // @ts-ignore
  var styles = (0,react.useMemo)(function () {
    return [defaultCSS, statesCSS, block && blockStyles, hidden && tp.round && hiddenRoundStyles, css];
  }, [block, blockStyles, css, defaultCSS, hidden, hiddenRoundStyles, statesCSS, tp.round]);

  /* Define CSS rules for icon. */
  var marginRule = "margin".concat(!iconAfter ? 'Right' : 'Left');
  var iconCSS = (0,react.useMemo)(function () {
    return _defineProperty(_defineProperty(_defineProperty({}, marginRule, !hidden ? sp.iconOffset : undefined), "width", sp.iconSize), "height", sp.iconSize);
  }, [hidden, marginRule, sp.iconOffset, sp.iconSize]);
  return (0,emotion_react_browser_esm/* jsx */.Y)(as || 'button', _objectSpread({
    ref: ref,
    type: !as || as === 'button' ? type : null,
    target: external ? '_blank' : null,
    rel: external ? 'nofollow noopener' : null,
    css: styles
  }, props), (0,emotion_react_browser_esm/* jsx */.Y)(react.Fragment, null, Icon && !iconAfter && (0,emotion_react_browser_esm/* jsx */.Y)(Icon, {
    css: iconCSS
  }), hidden ? (0,emotion_react_browser_esm/* jsx */.Y)(VisuallyHidden/* VisuallyHidden */.s, null, children) : children, Icon && iconAfter && (0,emotion_react_browser_esm/* jsx */.Y)(Icon, {
    css: iconCSS
  })));
};
var getStateCSS = function getStateCSS(_ref3) {
  var color = _ref3.color,
    bg = _ref3.bg,
    border = _ref3.border,
    shadow = _ref3.shadow,
    css = _ref3.css;
  return _objectSpread({
    color: color,
    fill: color,
    background: bg,
    borderColor: border,
    boxShadow: shadow
  }, css);
};
var getThemeProperties = function getThemeProperties(buttonTheme, theme, state) {
  var _buttonTheme$base;
  var themeProperties = buttonTheme.themes[theme][state];
  var baseProperties = (_buttonTheme$base = buttonTheme.base) === null || _buttonTheme$base === void 0 ? void 0 : _buttonTheme$base[state];
  return _objectSpread(_objectSpread({}, baseProperties), themeProperties);
};
var getVerticalPaddings = function getVerticalPaddings(typographyProperties, sizeProperties, themeProperties, isIcon) {
  var cssRule = sizeProperties.css;
  var fontSize = 16;
  var lineHeight = 1.4;
  if (typographyProperties) {
    fontSize = parseFloat(typographyProperties.fontSize) * 16;
    lineHeight = typographyProperties.lineHeight;
  } else if (cssRule) {
    if (cssRule.fontSize) {
      if (typeof cssRule.fontSize === 'number') {
        fontSize = cssRule.fontSize;
      } else if (typeof cssRule.fontSize === 'string') {
        if (cssRule.fontSize.endsWith('rem')) {
          fontSize = parseFloat(cssRule.fontSize) * 16;
        } else {
          fontSize = parseFloat(cssRule.fontSize);
        }
      }
    }
    if (cssRule.lineHeight && typeof cssRule.lineHeight === 'number') lineHeight = cssRule.lineHeight;
  }
  var textHeight = Math.floor(fontSize * lineHeight);
  var iconSize = sizeProperties.iconSize;
  var height = sizeProperties.height;
  var borderWidth = themeProperties.borderWidth;
  var maxHeight = Math.max(textHeight, isIcon ? iconSize : 0);
  var verticalPaddings = (height - maxHeight - borderWidth * 2) / 2;
  return verticalPaddings;
};
var getTransition = function getTransition(time, easing) {
  return ['color', 'fill', 'background-color', 'border-color', 'box-shadow'].map(function (name) {
    return "".concat(name, " ").concat(easing, " ").concat(time, "ms");
  }).join(', ');
};
var Button = /*#__PURE__*/react.forwardRef(Btn);
try {
    // @ts-ignore
    Btn.displayName = "Btn";
    // @ts-ignore
    Btn.__docgenInfo = { "description": "Button component.\n\nRenders <button /> or <a /> (pass `href`) or any custom element (pass `as`).\n\nDefine themes and sizes in theme object (`components.Button`) and use them as `theme` / `size` prop values.", "displayName": "Btn", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/Button/index.tsx#Btn"] = { docgenInfo: Btn.__docgenInfo, name: "Btn", path: "src/components/emotion/Button/index.tsx#Btn" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./.storybook/decorators/centeredDecorator.tsx



var centeredDecorator = function centeredDecorator(storyFn) {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", {
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,emotion_react_browser_esm/* css */.AH)({
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      padding: (0,scale/* scale */.h)(2)
    },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }, storyFn());
};
/* harmony default export */ const decorators_centeredDecorator = (centeredDecorator);
;// CONCATENATED MODULE: ./.storybook/docgen/Button.tsx

var ButtonTheme = function ButtonTheme() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var ButtonSizeProperties = function ButtonSizeProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var ButtonStates = function ButtonStates() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var ButtonThemeProperties = function ButtonThemeProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var ButtonStateProperties = function ButtonStateProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var ButtonProps = function ButtonProps() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["ButtonTheme", "ButtonSizeProperties", "ButtonStates", "ButtonThemeProperties", "ButtonStateProperties", "ButtonProps"]));
try {
    // @ts-ignore
    ButtonTheme.displayName = "ButtonTheme";
    // @ts-ignore
    ButtonTheme.__docgenInfo = { "description": "", "displayName": "ButtonTheme", "props": { "base": { "defaultValue": null, "description": "Common settings for all themes.", "name": "base", "required": false, "type": { "name": "ButtonStates | undefined" } }, "themes": { "defaultValue": null, "description": "Available themes. Any button can have theme from this list. You must define at least `primary` theme.", "name": "themes", "required": true, "type": { "name": "RequireAtLeastOne<Record<string, ButtonStates>, \"primary\">" } }, "sizes": { "defaultValue": null, "description": "Available sizes. Any button can have size from this list. You must define at least `md` size.", "name": "sizes", "required": true, "type": { "name": "RequireAtLeastOne<Record<string, ButtonSizeProperties>, \"md\">" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Button.tsx#ButtonTheme"] = { docgenInfo: ButtonTheme.__docgenInfo, name: "ButtonTheme", path: ".storybook/docgen/Button.tsx#ButtonTheme" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ButtonSizeProperties.displayName = "ButtonSizeProperties";
    // @ts-ignore
    ButtonSizeProperties.__docgenInfo = { "description": "", "displayName": "ButtonSizeProperties", "props": { "height": { "defaultValue": null, "description": "Height. Equals `scale(6)` by default.", "name": "height", "required": false, "type": { "name": "number | undefined" } }, "padding": { "defaultValue": null, "description": "Horizontal paddings. Equals `scale(3)` by default.", "name": "padding", "required": false, "type": { "name": "number | undefined" } }, "iconSize": { "defaultValue": null, "description": "Icon size. Equals `scale(3)` by default.", "name": "iconSize", "required": false, "type": { "name": "number | undefined" } }, "iconOffset": { "defaultValue": null, "description": "Offset between icon and text. Equals `scale(1)` by default.", "name": "iconOffset", "required": false, "type": { "name": "number | undefined" } }, "typography": { "defaultValue": null, "description": "Typography style. Can be omitted if `fontSize` and `lineHeight` properties are defined via `css` settings. Equals `'1rem'` and `1.4` by default.", "name": "typography", "required": false, "type": { "name": "string | undefined" } }, "css": { "defaultValue": null, "description": "Additional CSS.", "name": "css", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Button.tsx#ButtonSizeProperties"] = { docgenInfo: ButtonSizeProperties.__docgenInfo, name: "ButtonSizeProperties", path: ".storybook/docgen/Button.tsx#ButtonSizeProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ButtonStates.displayName = "ButtonStates";
    // @ts-ignore
    ButtonStates.__docgenInfo = { "description": "", "displayName": "ButtonStates", "props": { "default": { "defaultValue": null, "description": "", "name": "default", "required": true, "type": { "name": "ButtonThemeProperties" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "ButtonStateProperties | undefined" } }, "focus": { "defaultValue": null, "description": "", "name": "focus", "required": false, "type": { "name": "ButtonStateProperties | undefined" } }, "hover": { "defaultValue": null, "description": "", "name": "hover", "required": false, "type": { "name": "ButtonStateProperties | undefined" } }, "active": { "defaultValue": null, "description": "", "name": "active", "required": false, "type": { "name": "ButtonStateProperties | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Button.tsx#ButtonStates"] = { docgenInfo: ButtonStates.__docgenInfo, name: "ButtonStates", path: ".storybook/docgen/Button.tsx#ButtonStates" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ButtonThemeProperties.displayName = "ButtonThemeProperties";
    // @ts-ignore
    ButtonThemeProperties.__docgenInfo = { "description": "", "displayName": "ButtonThemeProperties", "props": { "borderWidth": { "defaultValue": null, "description": "Border width. Equals `1` by default if `border` property is defined.", "name": "borderWidth", "required": false, "type": { "name": "number | undefined" } }, "borderStyle": { "defaultValue": null, "description": "Border style. `'solid'` by default.", "name": "borderStyle", "required": false, "type": { "name": "string | undefined" } }, "borderRadius": { "defaultValue": null, "description": "Border radius.", "name": "borderRadius", "required": false, "type": { "name": "string | number | undefined" } }, "half": { "defaultValue": null, "description": "Half mode. Redefines `border-radius` with value equals half of button height.", "name": "half", "required": false, "type": { "name": "boolean | undefined" } }, "round": { "defaultValue": null, "description": "Round mode. Redefines `border-radius` with `'50%'` value for `hidden` mode. Doesn't affect buttons with visible text.", "name": "round", "required": false, "type": { "name": "boolean | undefined" } }, "time": { "defaultValue": null, "description": "Transition duration. Equals `200` by default.", "name": "time", "required": false, "type": { "name": "number | undefined" } }, "timeIn": { "defaultValue": null, "description": "Transition enter duration for hover state. Uses with `time` property to differ enter/exit transition durations.", "name": "timeIn", "required": false, "type": { "name": "number | undefined" } }, "easing": { "defaultValue": null, "description": "Transition easing function. Equals `'ease'` by default.", "name": "easing", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "Text and icon color.", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "bg": { "defaultValue": null, "description": "Background color.", "name": "bg", "required": false, "type": { "name": "string | undefined" } }, "border": { "defaultValue": null, "description": "Border color.", "name": "border", "required": false, "type": { "name": "string | undefined" } }, "shadow": { "defaultValue": null, "description": "Shadow. Mostly for `active` state.", "name": "shadow", "required": false, "type": { "name": "string | undefined" } }, "css": { "defaultValue": null, "description": "Additional CSS.", "name": "css", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Button.tsx#ButtonThemeProperties"] = { docgenInfo: ButtonThemeProperties.__docgenInfo, name: "ButtonThemeProperties", path: ".storybook/docgen/Button.tsx#ButtonThemeProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ButtonStateProperties.displayName = "ButtonStateProperties";
    // @ts-ignore
    ButtonStateProperties.__docgenInfo = { "description": "", "displayName": "ButtonStateProperties", "props": { "color": { "defaultValue": null, "description": "Text and icon color.", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "bg": { "defaultValue": null, "description": "Background color.", "name": "bg", "required": false, "type": { "name": "string | undefined" } }, "border": { "defaultValue": null, "description": "Border color.", "name": "border", "required": false, "type": { "name": "string | undefined" } }, "shadow": { "defaultValue": null, "description": "Shadow. Mostly for `active` state.", "name": "shadow", "required": false, "type": { "name": "string | undefined" } }, "css": { "defaultValue": null, "description": "Additional CSS.", "name": "css", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Button.tsx#ButtonStateProperties"] = { docgenInfo: ButtonStateProperties.__docgenInfo, name: "ButtonStateProperties", path: ".storybook/docgen/Button.tsx#ButtonStateProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ButtonProps.displayName = "ButtonProps";
    // @ts-ignore
    ButtonProps.__docgenInfo = { "description": "", "displayName": "ButtonProps", "props": { "as": { "defaultValue": null, "description": "Use your own React component for render. Main usage: pass `a` for external links or pass `Link` from `react-router` for routes management.", "name": "as", "required": false, "type": { "name": "\"button\" | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "\"button\" | \"submit\" | \"reset\" | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLButtonElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLButtonElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLButtonElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLButtonElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLButtonElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLButtonElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLButtonElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLButtonElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLButtonElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLButtonElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLButtonElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLButtonElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLButtonElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLButtonElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLButtonElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLButtonElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLButtonElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLButtonElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLButtonElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLButtonElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLButtonElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLButtonElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLButtonElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLButtonElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLButtonElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLButtonElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLButtonElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLButtonElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLButtonElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLButtonElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLButtonElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLButtonElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLButtonElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLButtonElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLButtonElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLButtonElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLButtonElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLButtonElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLButtonElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLButtonElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLButtonElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLButtonElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLButtonElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLButtonElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLButtonElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLButtonElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLButtonElement> | undefined" } }, "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "children": { "defaultValue": null, "description": "Button content.", "name": "children", "required": true, "type": { "name": "ReactNode" } }, "theme": { "defaultValue": null, "description": "Theme name from list of themes defined in theme object at `components.Button.themes`.", "name": "theme", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "Size name from list of sizes defined in theme object at `components.Button.sizes`.", "name": "size", "required": false, "type": { "name": "string | undefined" } }, "block": { "defaultValue": null, "description": "Block type. Use 100% of parent width.", "name": "block", "required": false, "type": { "name": "boolean | undefined" } }, "Icon": { "defaultValue": null, "description": "Icon. Accepts SVGR icon or custom JSX.", "name": "Icon", "required": false, "type": { "name": "SVGRIcon | undefined" } }, "iconAfter": { "defaultValue": null, "description": "Place icon after text.", "name": "iconAfter", "required": false, "type": { "name": "boolean | undefined" } }, "hidden": { "defaultValue": null, "description": "Visually hidden text. Keeps text accessible but visually shows only icons. Doesn't make sense without `Icon` prop.", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "external": { "defaultValue": null, "description": "Open link in another browser tab. Additionaly adds `rel=\"nofollow noopener\"`.", "name": "external", "required": false, "type": { "name": "boolean | undefined" } }, "__theme": { "defaultValue": null, "description": "Button theme object for internal testing purposes. Uses in Storybook knobs to play with theme.", "name": "__theme", "required": false, "type": { "name": "ButtonTheme | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Button.tsx#ButtonProps"] = { docgenInfo: ButtonProps.__docgenInfo, name: "ButtonProps", path: ".storybook/docgen/Button.tsx#ButtonProps" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./src/components/emotion/Button/Button.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */








const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Components / Emotion / Deprecated / Button",
    component: Button,
    decorators: [decorators_centeredDecorator],
    parameters: {
      design: {
        type: 'figma',
        url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1608%3A0'
      }
    },
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "button-"
  }, `Button 🤖`), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Knobs",
    args: {
      theme: 'primary',
      size: 'md',
      block: false,
      disabled: false,
      Icon: baseTheme/* baseTheme */.$.global.placeholder,
      iconAfter: false,
      hidden: false,
      useCustomTheme: false,
      themeObj: baseTheme/* baseTheme */.$.components.Button,
      children: 'Button'
    },
    argTypes: {
      theme: {
        control: 'radio',
        options: ['primary', 'secondary']
      },
      size: {
        control: 'radio',
        options: ['sm', 'md', 'lg']
      }
    },
    mdxType: "Story"
  }, ({
    children,
    useCustomTheme,
    themeObj,
    ...args
  }) => {
    return (0,esm/* mdx */.yg)(Button, _extends({}, args, {
      onClick: (0,addon_actions_dist_esm.action)('onClick'),
      __theme: useCustomTheme ? themeObj : undefined,
      mdxType: "Button"
    }), children);
  }), (0,esm/* mdx */.yg)("p", null, `Кнопки определяются полем `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `button`), ` в объекте темы. В целом концепт таков, что задаются глобальные настройки стилей в `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `base`), `, после чего стилистические различия диктуются сочитанием темы из `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `themes`), ` и размера из `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `sizes`), `.`), (0,esm/* mdx */.yg)("p", null, `После определения темы и размера для кнопки становятся доступны вариации, задаваемые через props: `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `block`), `, `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `disabled`), `, `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `hidden`), ` и т.д. Т.е. эти вариации доступны для `, (0,esm/* mdx */.yg)("strong", {
    parentName: "p"
  }, `любой`), ` кнопки. Детальнее доступные props разобраны в разделе `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Use cases`), `.`), (0,esm/* mdx */.yg)("p", null, `Центром истины при указании размеров является высота кнопки – она должна совпадать с определённой в Figma. Однако внутри компонент не ограничивается по высоте – для него автоматически выполняется расчёт вертикальных полей. Такой подход позволяет сделать multiline режим доступным по умолчанию.`), (0,esm/* mdx */.yg)("p", null, `Все необходимые размеры можно взять из панели `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Auto Layout`), ` в Figma, цвета берутся из палитры, типографика по имени из стилей.`), (0,esm/* mdx */.yg)("p", null, `По умолчанию компонент рендерится через элемент `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `<button />`), ` и наследует его пропсы. Вы можете изменить элемент через проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `as`), `, что позволит использовать компонент для ссылок, и предоставит возможность использовать пропсы переданного компонента.`), (0,esm/* mdx */.yg)("h2", {
    "id": "props"
  }, `Props`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    of: ButtonProps,
    mdxType: "Props"
  }), (0,esm/* mdx */.yg)("h2", {
    "id": "theme"
  }, `Theme`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    components: {
      ButtonTheme: ButtonTheme,
      ButtonStates: ButtonStates,
      ButtonThemeProperties: ButtonThemeProperties,
      ButtonStateProperties: ButtonStateProperties,
      ButtonSizeProperties: ButtonSizeProperties
    },
    mdxType: "Props"
  }), (0,esm/* mdx */.yg)("h2", {
    "id": "use-cases"
  }, `Use cases`), (0,esm/* mdx */.yg)("h3", {
    "id": "basic"
  }, `Basic`), (0,esm/* mdx */.yg)("p", null, `Кнопка без параметров рендерится с темой "primary" и размером "md".`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Basic",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    mdxType: "Button"
  }, "Button"))), (0,esm/* mdx */.yg)("h3", {
    "id": "themes"
  }, `Themes`), (0,esm/* mdx */.yg)("p", null, `Темы для кнопок определяются в объекте темы в поле `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `button.themes`), `. Присвоенные имена становятся доступны через проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `theme`), `.`), (0,esm/* mdx */.yg)("p", null, (0,esm/* mdx */.yg)("strong", {
    parentName: "p"
  }, `Рекомендуемые имена:`), ` 'primary', 'secondary' и их производные – так их делят дизайнеры. Могут использоваться общепринятые типы вроде 'link' и 'subtle'.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    id: "components-button--basic",
    mdxType: "Story"
  }), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Secondary theme",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    theme: "secondary",
    mdxType: "Button"
  }, "Button"))), (0,esm/* mdx */.yg)("h3", {
    "id": "sizes"
  }, `Sizes`), (0,esm/* mdx */.yg)("p", null, `Размеры для кнопок определяются в объекте темы в поле `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `button.sizes`), `. Присвоенные имена становятся доступны через проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `size`), `.`), (0,esm/* mdx */.yg)("p", null, (0,esm/* mdx */.yg)("strong", {
    parentName: "p"
  }, `Рекомендуемые имена:`), ` 'lg', 'md', 'sm'.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Large size",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    size: "lg",
    mdxType: "Button"
  }, "Button")), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    id: "components-button--basic",
    mdxType: "Story"
  }), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Small size",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    size: "sm",
    mdxType: "Button"
  }, "Button"))), (0,esm/* mdx */.yg)("h3", {
    "id": "block"
  }, `Block`), (0,esm/* mdx */.yg)("p", null, `По умолчанию ширина кнопки определяется её контентом. Проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `block`), ` ставит размеры по ширине контейнера.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Block",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    block: true,
    mdxType: "Button"
  }, "Button"))), (0,esm/* mdx */.yg)("h3", {
    "id": "disabled"
  }, `Disabled`), (0,esm/* mdx */.yg)("p", null, `Стилизация заблокированных кнопок может задаваться общая для всех тем через `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `global`), ` или для каждой темы отдельно в `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `themes`), `.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Disabled",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    disabled: true,
    mdxType: "Button"
  }, "Button"))), (0,esm/* mdx */.yg)("h3", {
    "id": "icons"
  }, `Icons`), (0,esm/* mdx */.yg)("p", null, `Иконки добавляются через проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Icon`), `. Иконка идёт с отступом, определённым через `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `iconOffset`), ` в настройках `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `sizes`), `.`), (0,esm/* mdx */.yg)("p", null, `По умолчанию кнопка идёт перед текстом, но её можно поставить в конец через `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `iconAfter`), `.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "With icon (before)",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    Icon: baseTheme/* baseTheme */.$.global.placeholder,
    mdxType: "Button"
  }, "Button")), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "With icon (after)",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    Icon: baseTheme/* baseTheme */.$.global.placeholder,
    iconAfter: true,
    mdxType: "Button"
  }, "Button"))), (0,esm/* mdx */.yg)("h3", {
    "id": "hidden-mode"
  }, `Hidden mode`), (0,esm/* mdx */.yg)("p", null, `Доступен режим иконочной кнопки через проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `hidden`), `.`), (0,esm/* mdx */.yg)("p", null, `♿️ Это «hidden mode», а не «icon mode», т.к. текст при этом всё равно должен указываться для доступа через AT.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Hidden mode",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    Icon: baseTheme/* baseTheme */.$.global.placeholder,
    hidden: true,
    mdxType: "Button"
  }, "Button"))), (0,esm/* mdx */.yg)("h3", {
    "id": "links"
  }, `Links`), (0,esm/* mdx */.yg)("p", null, `Чтобы использовать компонент для ссылок нужно изменить элемент рендера через проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `as`), `. После этого вам станет доступно использование пропсов `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `href`), ` в случае `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `a`), ` и `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `to`), ` в случае `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Link`), `.`), (0,esm/* mdx */.yg)("p", null, `💬 GDS не включает в себя встроенного инструмента для роутинга, так что вы можете использовать не только `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `react-router`), `, но и к примеру `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `@reach/router`), `.`), (0,esm/* mdx */.yg)("p", null, `Также ссылка может быть внешняя, т.е. открывать вкладку в новом окне. Чтобы задать подобное поведение, передайте проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `external`), `. Этот проп задаёт атрибуты `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `target="_blank"`), ` и `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `rel="nofollow noopener"`), `.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Link",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    as: "a",
    href: "http://greensight.pro",
    mdxType: "Button"
  }, "Button")), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "External link",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    as: "a",
    href: "http://greensight.pro",
    external: true,
    mdxType: "Button"
  }, "Button"))), (0,esm/* mdx */.yg)("h3", {
    "id": "multiline-mode"
  }, `Multiline mode`), (0,esm/* mdx */.yg)("p", null, `Активация многострочного режима может происходить как из-за вставки `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `<br/>`), `, так и автоматически при ограничении по ширине.`), (0,esm/* mdx */.yg)("p", null, `Иконка при этом выравнивается по центру кнопки.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Multiline mode (br)",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    mdxType: "Button"
  }, "Multiline", (0,esm/* mdx */.yg)("br", null), "button")), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Multiline mode (fixed width)",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Button, {
    css: {
      width: (0,scale/* scale */.h)(14)
    },
    mdxType: "Button"
  }, "Multiline button"))));
}
;
MDXContent.isMDXComponent = true;
const knobs = ({
  children,
  useCustomTheme,
  themeObj,
  ...args
}) => {
  return (0,esm/* mdx */.yg)(Button, _extends({}, args, {
    onClick: (0,addon_actions_dist_esm.action)('onClick'),
    __theme: useCustomTheme ? themeObj : undefined
  }), children);
};
knobs.storyName = 'Knobs';
knobs.argTypes = {
  theme: {
    control: 'radio',
    options: ['primary', 'secondary']
  },
  size: {
    control: 'radio',
    options: ['sm', 'md', 'lg']
  }
};
knobs.args = {
  theme: 'primary',
  size: 'md',
  block: false,
  disabled: false,
  Icon: baseTheme/* baseTheme */.$.global.placeholder,
  iconAfter: false,
  hidden: false,
  useCustomTheme: false,
  themeObj: baseTheme/* baseTheme */.$.components.Button,
  children: 'Button'
};
knobs.parameters = {
  storySource: {
    source: '({\n  children,\n  useCustomTheme,\n  themeObj,\n  ...args\n}) => {\n  return <Button {...args} onClick={action(\'onClick\')} __theme={useCustomTheme ? themeObj : undefined}>\n                {children}\n            </Button>;\n}'
  }
};
const basic = () => (0,esm/* mdx */.yg)(Button, null, "Button");
basic.storyName = 'Basic';
basic.parameters = {
  storySource: {
    source: '<Button>Button</Button>'
  }
};
const secondaryTheme = () => (0,esm/* mdx */.yg)(Button, {
  theme: "secondary"
}, "Button");
secondaryTheme.storyName = 'Secondary theme';
secondaryTheme.parameters = {
  storySource: {
    source: '<Button theme=\"secondary\">Button</Button>'
  }
};
const largeSize = () => (0,esm/* mdx */.yg)(Button, {
  size: "lg"
}, "Button");
largeSize.storyName = 'Large size';
largeSize.parameters = {
  storySource: {
    source: '<Button size=\"lg\">Button</Button>'
  }
};
const smallSize = () => (0,esm/* mdx */.yg)(Button, {
  size: "sm"
}, "Button");
smallSize.storyName = 'Small size';
smallSize.parameters = {
  storySource: {
    source: '<Button size=\"sm\">Button</Button>'
  }
};
const block = () => (0,esm/* mdx */.yg)(Button, {
  block: true
}, "Button");
block.storyName = 'Block';
block.parameters = {
  storySource: {
    source: '<Button block>Button</Button>'
  }
};
const disabled = () => (0,esm/* mdx */.yg)(Button, {
  disabled: true
}, "Button");
disabled.storyName = 'Disabled';
disabled.parameters = {
  storySource: {
    source: '<Button disabled>Button</Button>'
  }
};
const withIconBefore = () => (0,esm/* mdx */.yg)(Button, {
  Icon: baseTheme/* baseTheme */.$.global.placeholder
}, "Button");
withIconBefore.storyName = 'With icon (before)';
withIconBefore.parameters = {
  storySource: {
    source: '<Button Icon={baseTheme.global.placeholder}>Button</Button>'
  }
};
const withIconAfter = () => (0,esm/* mdx */.yg)(Button, {
  Icon: baseTheme/* baseTheme */.$.global.placeholder,
  iconAfter: true
}, "Button");
withIconAfter.storyName = 'With icon (after)';
withIconAfter.parameters = {
  storySource: {
    source: '<Button Icon={baseTheme.global.placeholder} iconAfter>\n            Button\n        </Button>'
  }
};
const hiddenMode = () => (0,esm/* mdx */.yg)(Button, {
  Icon: baseTheme/* baseTheme */.$.global.placeholder,
  hidden: true
}, "Button");
hiddenMode.storyName = 'Hidden mode';
hiddenMode.parameters = {
  storySource: {
    source: '<Button Icon={baseTheme.global.placeholder} hidden>\n            Button\n        </Button>'
  }
};
const Button_stories_link = () => (0,esm/* mdx */.yg)(Button, {
  as: "a",
  href: "http://greensight.pro"
}, "Button");
Button_stories_link.storyName = 'Link';
Button_stories_link.parameters = {
  storySource: {
    source: '<Button as=\"a\" href=\"http://greensight.pro\">\n            Button\n        </Button>'
  }
};
const externalLink = () => (0,esm/* mdx */.yg)(Button, {
  as: "a",
  href: "http://greensight.pro",
  external: true
}, "Button");
externalLink.storyName = 'External link';
externalLink.parameters = {
  storySource: {
    source: '<Button as=\"a\" href=\"http://greensight.pro\" external>\n            Button\n        </Button>'
  }
};
const multilineModeBr = () => (0,esm/* mdx */.yg)(Button, null, "Multiline", (0,esm/* mdx */.yg)("br", null), "button");
multilineModeBr.storyName = 'Multiline mode (br)';
multilineModeBr.parameters = {
  storySource: {
    source: '<Button>\n            Multiline\n            <br />\n            button\n        </Button>'
  }
};
const multilineModeFixedWidth = () => (0,esm/* mdx */.yg)(Button, {
  css: {
    width: (0,scale/* scale */.h)(14)
  }
}, "Multiline button");
multilineModeFixedWidth.storyName = 'Multiline mode (fixed width)';
multilineModeFixedWidth.parameters = {
  storySource: {
    source: '<Button css={{\n  width: scale(14)\n}}>Multiline button</Button>'
  }
};
const componentMeta = {
  title: 'Components / Emotion / Deprecated / Button',
  parameters: {
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS?node-id=1608%3A0'
    }
  },
  decorators: [decorators_centeredDecorator],
  component: Button,
  includeStories: ["knobs", "basic", "secondaryTheme", "largeSize", "smallSize", "block", "disabled", "withIconBefore", "withIconAfter", "hiddenMode", "link", "externalLink", "multilineModeBr", "multilineModeFixedWidth"]
};
const mdxStoryNameToKey = {
  "Knobs": "knobs",
  "Basic": "basic",
  "Secondary theme": "secondaryTheme",
  "Large size": "largeSize",
  "Small size": "smallSize",
  "Block": "block",
  "Disabled": "disabled",
  "With icon (before)": "withIconBefore",
  "With icon (after)": "withIconAfter",
  "Hidden mode": "hiddenMode",
  "Link": "link",
  "External link": "externalLink",
  "Multiline mode (br)": "multilineModeBr",
  "Multiline mode (fixed width)": "multilineModeFixedWidth"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const Button_stories = (componentMeta);

/***/ }),

/***/ "./src/components/emotion/Container/Container.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   basic: () => (/* binding */ basic),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/components/emotion/Container/index.tsx");
/* harmony import */ var _helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/helpers/common/Placeholder.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */




const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Components / Emotion / Helpers / Container",
    component: ___WEBPACK_IMPORTED_MODULE_3__/* .Container */ .m,
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "container"
  }, `Container`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Basic",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Container */ .m, {
    mdxType: "Container"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Content")))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Container`), ` – это обёртка для ограничения контента по ширине. Этот компонент стилизован через значения ширины контейнера и полей, полученных через токены и хранящихся в объекте темы.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Контейнер используется в компоненте `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Section`), `, но может использоваться и напрямую в других местах, где тег section не нужен.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 В документации используется компонент `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Placeholder`), ` чисто в демонстративных целях – визуально показать бокс контента. Это вспомогательный компонент GDS и на проекте его не будет.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "props"
  }, `Props`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Props */ .Ji, {
    of: ___WEBPACK_IMPORTED_MODULE_3__/* .Container */ .m,
    mdxType: "Props"
  }));
}
;
MDXContent.isMDXComponent = true;
const basic = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Container */ .m, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Content"));
basic.storyName = 'Basic';
basic.parameters = {
  storySource: {
    source: '<Container>\n            <Placeholder>Content</Placeholder>\n        </Container>'
  }
};
const componentMeta = {
  title: 'Components / Emotion / Helpers / Container',
  component: ___WEBPACK_IMPORTED_MODULE_3__/* .Container */ .m,
  includeStories: ["basic"]
};
const mdxStoryNameToKey = {
  "Basic": "basic"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./src/components/emotion/FutureButton/FutureButton.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  basic: () => (/* binding */ basic),
  "default": () => (/* binding */ FutureButton_stories),
  example: () => (/* binding */ example)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-actions/dist/esm/index.js + 8 modules
var addon_actions_dist_esm = __webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/ts-dedent/esm/index.js
var ts_dedent_esm = __webpack_require__("./node_modules/ts-dedent/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.bind.js
var es_function_bind = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./src/helpers/emotion/theming.ts


















function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}

var extractCSSOption = function extractCSSOption(optionized, option) {
  return optionized[option];
};
var useThemeCSSPart = function useThemeCSSPart(theme, state) {
  var actualTheme = useMemo(function () {
    return typeof theme === 'function' ? theme(state) : theme;
  }, [state, theme]);
  return useCallback(function (key, extraData) {
    var element = actualTheme[key];
    if (typeof element === 'function') return element(extraData ? _objectSpread(_objectSpread({}, state), extraData) : state);
    return element;
  }, [state, actualTheme]);
};
var useThemeCSS = function useThemeCSS(theme, state) {
  return (0,react.useMemo)(function () {
    var res = {};
    var keys = Object.keys(theme);
    keys.forEach(function (key) {
      var element = theme[key];
      if (typeof element === 'function') res[key] = element(state);else res[key] = element;
    });
    return res;
  }, [state, theme]);
};
;// CONCATENATED MODULE: ./src/components/emotion/FutureButton/index.tsx






















function FutureButton_typeof(o) {
  "@babel/helpers - typeof";

  return FutureButton_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, FutureButton_typeof(o);
}
var _excluded = ["children", "block", "size", "theme", "variant", "Icon", "iconAfter", "hidden", "type", "as", "external", "disabled", "rounded", "css", "typography", "wrap", "getTypographyCSS"],
  _excluded2 = ["theme", "variant", "size"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function FutureButton_ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function FutureButton_objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? FutureButton_ownKeys(Object(t), !0).forEach(function (r) {
      FutureButton_defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : FutureButton_ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function FutureButton_defineProperty(e, r, t) {
  return (r = FutureButton_toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function FutureButton_toPropertyKey(t) {
  var i = FutureButton_toPrimitive(t, "string");
  return "symbol" == FutureButton_typeof(i) ? i : i + "";
}
function FutureButton_toPrimitive(t, r) {
  if ("object" != FutureButton_typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != FutureButton_typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}




/**
 * Button component.
 *
 * Renders <button /> or <a /> (pass `href`) or any custom element (pass `as`).
 *
 * Usage with themes:
 * @example
 * enum Variants {
 *  primary = 'primary',
 * }
 * enum Sizes {
 *  sm = 'sm',
 * }
 * const Button = createButtonWithTheme<typeof Variants, typeof Sizes>();
 * const Test = () => (
 *  <Button
 *   as="a"
 *   href="#"
 *   variant="primary"
 *   theme={{
 *    button: {},
 *    icon: {},
 *   }}
 *  >
 *   Content
 * </Button>
 *);
 */
var BaseButton = function BaseButton(_ref, ref) {
  var children = _ref.children,
    _ref$block = _ref.block,
    block = _ref$block === void 0 ? false : _ref$block,
    size = _ref.size,
    theme = _ref.theme,
    variant = _ref.variant,
    Icon = _ref.Icon,
    _ref$iconAfter = _ref.iconAfter,
    iconAfter = _ref$iconAfter === void 0 ? false : _ref$iconAfter,
    _ref$hidden = _ref.hidden,
    hidden = _ref$hidden === void 0 ? false : _ref$hidden,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'button' : _ref$type,
    as = _ref.as,
    _ref$external = _ref.external,
    external = _ref$external === void 0 ? false : _ref$external,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$rounded = _ref.rounded,
    rounded = _ref$rounded === void 0 ? true : _ref$rounded,
    css = _ref.css,
    typography = _ref.typography,
    _ref$wrap = _ref.wrap,
    wrap = _ref$wrap === void 0 ? false : _ref$wrap,
    getTypographyCSS = _ref.getTypographyCSS,
    props = _objectWithoutProperties(_ref, _excluded);
  var hasChildren = !!children;
  var state = (0,react.useMemo)(function () {
    return {
      disabled: disabled,
      hasChildren: hasChildren,
      hidden: hidden,
      size: size,
      variant: variant,
      block: block,
      iconAfter: iconAfter,
      rounded: rounded,
      typography: typography,
      wrap: wrap
    };
  }, [disabled, hasChildren, hidden, size, variant, block, iconAfter, rounded, typography, wrap]);
  if (!theme) {
    throw new Error('[Button] theme is required');
  }

  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
  var _useThemeCSS = useThemeCSS(theme, state),
    totalCSS = _useThemeCSS.button,
    iconCSS = _useThemeCSS.icon;
  var icon = Icon ? (0,emotion_react_browser_esm/* jsx */.Y)(Icon, {
    css: iconCSS
  }) : null;
  return (0,emotion_react_browser_esm/* jsx */.Y)(as || 'button', FutureButton_objectSpread({
    ref: ref,
    type: !as || as === 'button' ? type : null,
    target: external ? '_blank' : null,
    rel: external ? 'nofollow noopener' : null,
    css: [totalCSS, typography && getTypographyCSS ? getTypographyCSS(typography) : {}, css],
    disabled: disabled
  }, props), (0,emotion_react_browser_esm/* jsx */.Y)(react.Fragment, null, icon && !iconAfter && icon, hidden ? '' : children, icon && iconAfter && icon));
};
var ButtonRef = /*#__PURE__*/(0,react.forwardRef)(BaseButton);

/**
 * Proxy component setting initial values for theme, variant, and size for button in the used project.
 */
var createButtonWithTheme = function createButtonWithTheme(defaultTheme, defaultVariant, defaultSize, getTypographyCSS) {
  // as any нужны т.к. в новых версиях ts ругается в целом на такой компонент
  var renderThemedButton = function renderThemedButton(_ref2, ref) {
    var _ref2$theme = _ref2.theme,
      theme = _ref2$theme === void 0 ? defaultTheme : _ref2$theme,
      _ref2$variant = _ref2.variant,
      variant = _ref2$variant === void 0 ? defaultVariant : _ref2$variant,
      _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? defaultSize : _ref2$size,
      props = _objectWithoutProperties(_ref2, _excluded2);
    return (0,emotion_react_browser_esm/* jsx */.Y)(ButtonRef, _extends({
      ref: ref,
      getTypographyCSS: getTypographyCSS,
      theme: theme,
      variant: variant,
      size: size
    }, props));
  };
  renderThemedButton.displayName = 'Button';
  return /*#__PURE__*/(0,react.forwardRef)(renderThemedButton);
};
try {
    // @ts-ignore
    BaseButton.displayName = "BaseButton";
    // @ts-ignore
    BaseButton.__docgenInfo = { "description": "Button component.\n\nRenders <button /> or <a /> (pass `href`) or any custom element (pass `as`).\n\nUsage with themes:", "displayName": "BaseButton", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/FutureButton/index.tsx#BaseButton"] = { docgenInfo: BaseButton.__docgenInfo, name: "BaseButton", path: "src/components/emotion/FutureButton/index.tsx#BaseButton" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    createButtonWithTheme.displayName = "createButtonWithTheme";
    // @ts-ignore
    createButtonWithTheme.__docgenInfo = { "description": "Proxy component setting initial values for theme, variant, and size for button in the used project.", "displayName": "createButtonWithTheme", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/FutureButton/index.tsx#createButtonWithTheme"] = { docgenInfo: createButtonWithTheme.__docgenInfo, name: "createButtonWithTheme", path: "src/components/emotion/FutureButton/index.tsx#createButtonWithTheme" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/helpers/emotion/typography.ts
var typography = __webpack_require__("./src/helpers/emotion/typography.ts");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
;// CONCATENATED MODULE: ./src/components/emotion/FutureButton/FutureButton.stories.mdx
function FutureButton_stories_extends() { return FutureButton_stories_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, FutureButton_stories_extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */









const makeShortcode = name => function MDXDefaultShortcode(props) {
  console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
  return (0,esm/* mdx */.yg)("div", props);
};
const Button = makeShortcode("Button");
const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, FutureButton_stories_extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Components / Emotion / Button",
    component: BaseButton,
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "button"
  }, `Button`), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Basic",
    args: {
      block: false,
      disabled: false,
      Icon: baseTheme/* baseTheme */.$.global.placeholder,
      iconAfter: false,
      hidden: false,
      theme: 'basic',
      variant: 'ghost',
      size: 'md',
      typography: 'bodyMd',
      wrap: false
    },
    argTypes: {
      theme: {
        control: 'radio',
        options: ['basic']
      },
      variant: {
        control: 'radio',
        options: ['ghost', 'primary']
      },
      size: {
        control: 'radio',
        options: ['sm', 'md', 'lg']
      },
      typography: {
        control: 'select',
        options: ['bodyMd', 'bodyLg']
      }
    },
    mdxType: "Story"
  }, ({
    theme: themeName,
    ...args
  }) => {
    const basicTheme = {
      button: state => {
        const sized = {
          sm: {
            ...(0,typography/* typography */.I)('buttonSm'),
            borderRadius: 14
          },
          md: {
            ...(0,typography/* typography */.I)('buttonMd'),
            lineHeight: 1,
            borderRadius: (0,scale/* scale */.h)(2)
          },
          lg: {
            ...(0,typography/* typography */.I)('buttonLg'),
            borderRadius: (0,scale/* scale */.h)(2)
          }
        };
        const varianted = {
          primary: {
            color: '#fff',
            background: 'grey',
            ':hover': {
              background: 'darkgrey'
            }
          },
          ghost: {
            border: '2px solid grey',
            ':hover': {
              background: '#fafafa'
            }
          }
        };
        return {
          padding: (0,scale/* scale */.h)(2),
          display: 'inline-flex',
          width: 'fit-content',
          justifyContent: 'center',
          alignItems: 'center',
          ...(state.block && {
            display: 'block',
            width: '100%'
          }),
          ...(state.rounded && {
            borderRadius: 12
          }),
          ...(state.wrap && {
            overflowWrap: 'break-word',
            wordBreak: 'break-word'
          }),
          ...extractCSSOption(sized, state.size),
          ...extractCSSOption(varianted, state.variant)
        };
      },
      icon: state => {
        const sized = {
          sm: {
            width: (0,scale/* scale */.h)(3, true),
            height: (0,scale/* scale */.h)(3, true)
          },
          md: {
            width: (0,scale/* scale */.h)(4, true),
            height: (0,scale/* scale */.h)(4, true)
          },
          lg: {
            width: (0,scale/* scale */.h)(6, true),
            height: (0,scale/* scale */.h)(6, true)
          }
        };
        const marginRule = `margin${!state.iconAfter ? 'Right' : 'Left'}`;
        const invMarginRule = `margin${state.iconAfter ? 'Right' : 'Left'}`;
        const iconCSS = {
          [marginRule]: !state.hidden ? (state.hasChildren ? 1 : -1) * (0,scale/* scale */.h)(1, true) : undefined,
          [invMarginRule]: !state.hidden ? -(0,scale/* scale */.h)(1, true) : undefined,
          ...extractCSSOption(sized, state.size),
          flexShrink: 0
        };
        return {
          ...iconCSS,
          fill: 'currentcolor'
        };
      }
    };
    const themes = {
      basic: basicTheme
    };
    const Button = createButtonWithTheme(basicTheme, 'primary', 'md', font => ({
      fontSize: 14,
      ...(font === 'bodyLg' && {
        fontSize: 21
      })
    }));
    return (0,esm/* mdx */.yg)("div", {
      style: {
        ...(args.wrap && {
          maxWidth: 100
        })
      }
    }, (0,esm/* mdx */.yg)(Button, FutureButton_stories_extends({}, args, {
      theme: themes[themeName],
      onClick: (0,addon_actions_dist_esm.action)('onClick'),
      mdxType: "Button"
    }), "I'm a button"));
  }), (0,esm/* mdx */.yg)("p", null, `Новая кнопка со статически типизированной темизацией.`), (0,esm/* mdx */.yg)(dist_esm/* Source */.kL, {
    language: "jsx",
    dark: true,
    format: true,
    code: (0,ts_dedent_esm/* default */.A)`
        enum Variants {
            primary = 'primary',
        }
        enum Sizes {
            sm = 'sm',
        }
        const basicButtonTheme = {
            button: {
                border: '1px dashed #333333',
                padding: scale(2),
                color: 'black',
                display: 'flex',
                gap: scale(1, true),
                alignItems: 'center',
                width: 'fit-content',
            },
            icon: {
                width: scale(2),
                height: scale(2),
            },
        }
        const buttonThemes = {
            basic: basicButtonTheme,
        };
        const Button = createButtonWithTheme<typeof Variants, typeof Sizes>();
        export const Page = () => (
            <Button
                as="a"
                href="#"
                size="sm"
                variant="primary"
                theme={buttonThemes.basic}
            >
                Content
            </Button>
        );`,
    mdxType: "Source"
  }), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Example",
    mdxType: "Story"
  }, () => {
    const basicButtonTheme = {
      button: {
        border: '1px dashed #333333',
        padding: (0,scale/* scale */.h)(2),
        color: 'black',
        display: 'flex',
        gap: (0,scale/* scale */.h)(1, true),
        alignItems: 'center',
        width: 'fit-content'
      },
      icon: {
        width: (0,scale/* scale */.h)(2),
        height: (0,scale/* scale */.h)(2)
      }
    };
    const buttonThemes = {
      basic: basicButtonTheme
    };
    const Button = createButtonWithTheme();
    return (0,esm/* mdx */.yg)(Button, {
      as: "a",
      href: "#",
      size: "sm",
      variant: "primary",
      theme: buttonThemes.basic,
      Icon: baseTheme/* baseTheme */.$.global.placeholder,
      onClick: e => {
        e.preventDefault();
      },
      mdxType: "Button"
    }, "Content");
  }), (0,esm/* mdx */.yg)(dist_esm/* Source */.kL, {
    language: "jsx",
    dark: true,
    format: true,
    code: (0,ts_dedent_esm/* default */.A)`
        export interface ButtonState {
            // скрыт ли текст кнопки
            hidden: boolean;
            // выключена ли кнопка
            disabled: boolean;
            // передан ли children
            hasChildren: boolean;
            // растягивать ли кнопку
            block: boolean;
            // иконка справа?
            iconAfter: boolean;
            // включено скругление иконки?
            rounded: boolean;
        }
    `,
    mdxType: "Source"
  }));
}
;
MDXContent.isMDXComponent = true;
const basic = ({
  theme: themeName,
  ...args
}) => {
  const basicTheme = {
    button: state => {
      const sized = {
        sm: {
          ...(0,typography/* typography */.I)('buttonSm'),
          borderRadius: 14
        },
        md: {
          ...(0,typography/* typography */.I)('buttonMd'),
          lineHeight: 1,
          borderRadius: (0,scale/* scale */.h)(2)
        },
        lg: {
          ...(0,typography/* typography */.I)('buttonLg'),
          borderRadius: (0,scale/* scale */.h)(2)
        }
      };
      const varianted = {
        primary: {
          color: '#fff',
          background: 'grey',
          ':hover': {
            background: 'darkgrey'
          }
        },
        ghost: {
          border: '2px solid grey',
          ':hover': {
            background: '#fafafa'
          }
        }
      };
      return {
        padding: (0,scale/* scale */.h)(2),
        display: 'inline-flex',
        width: 'fit-content',
        justifyContent: 'center',
        alignItems: 'center',
        ...(state.block && {
          display: 'block',
          width: '100%'
        }),
        ...(state.rounded && {
          borderRadius: 12
        }),
        ...(state.wrap && {
          overflowWrap: 'break-word',
          wordBreak: 'break-word'
        }),
        ...extractCSSOption(sized, state.size),
        ...extractCSSOption(varianted, state.variant)
      };
    },
    icon: state => {
      const sized = {
        sm: {
          width: (0,scale/* scale */.h)(3, true),
          height: (0,scale/* scale */.h)(3, true)
        },
        md: {
          width: (0,scale/* scale */.h)(4, true),
          height: (0,scale/* scale */.h)(4, true)
        },
        lg: {
          width: (0,scale/* scale */.h)(6, true),
          height: (0,scale/* scale */.h)(6, true)
        }
      };
      const marginRule = `margin${!state.iconAfter ? 'Right' : 'Left'}`;
      const invMarginRule = `margin${state.iconAfter ? 'Right' : 'Left'}`;
      const iconCSS = {
        [marginRule]: !state.hidden ? (state.hasChildren ? 1 : -1) * (0,scale/* scale */.h)(1, true) : undefined,
        [invMarginRule]: !state.hidden ? -(0,scale/* scale */.h)(1, true) : undefined,
        ...extractCSSOption(sized, state.size),
        flexShrink: 0
      };
      return {
        ...iconCSS,
        fill: 'currentcolor'
      };
    }
  };
  const themes = {
    basic: basicTheme
  };
  const Button = createButtonWithTheme(basicTheme, 'primary', 'md', font => ({
    fontSize: 14,
    ...(font === 'bodyLg' && {
      fontSize: 21
    })
  }));
  return (0,esm/* mdx */.yg)("div", {
    style: {
      ...(args.wrap && {
        maxWidth: 100
      })
    }
  }, (0,esm/* mdx */.yg)(Button, FutureButton_stories_extends({}, args, {
    theme: themes[themeName],
    onClick: (0,addon_actions_dist_esm.action)('onClick')
  }), "I'm a button"));
};
basic.storyName = 'Basic';
basic.argTypes = {
  theme: {
    control: 'radio',
    options: ['basic']
  },
  variant: {
    control: 'radio',
    options: ['ghost', 'primary']
  },
  size: {
    control: 'radio',
    options: ['sm', 'md', 'lg']
  },
  typography: {
    control: 'select',
    options: ['bodyMd', 'bodyLg']
  }
};
basic.args = {
  block: false,
  disabled: false,
  Icon: baseTheme/* baseTheme */.$.global.placeholder,
  iconAfter: false,
  hidden: false,
  theme: 'basic',
  variant: 'ghost',
  size: 'md',
  typography: 'bodyMd',
  wrap: false
};
basic.parameters = {
  storySource: {
    source: '({\n  theme: themeName,\n  ...args\n}) => {\n  const basicTheme = {\n    button: state => {\n      const sized = {\n        sm: {\n          ...typography(\'buttonSm\'),\n          borderRadius: 14\n        },\n        md: {\n          ...typography(\'buttonMd\'),\n          lineHeight: 1,\n          borderRadius: scale(2)\n        },\n        lg: {\n          ...typography(\'buttonLg\'),\n          borderRadius: scale(2)\n        }\n      };\n      const varianted = {\n        primary: {\n          color: \'#fff\',\n          background: \'grey\',\n          \':hover\': {\n            background: \'darkgrey\'\n          }\n        },\n        ghost: {\n          border: \'2px solid grey\',\n          \':hover\': {\n            background: \'#fafafa\'\n          }\n        }\n      };\n      return {\n        padding: scale(2),\n        display: \'inline-flex\',\n        width: \'fit-content\',\n        justifyContent: \'center\',\n        alignItems: \'center\',\n        ...(state.block && {\n          display: \'block\',\n          width: \'100%\'\n        }),\n        ...(state.rounded && {\n          borderRadius: 12\n        }),\n        ...(state.wrap && {\n          overflowWrap: \'break-word\',\n          wordBreak: \'break-word\'\n        }),\n        ...extractCSSOption(sized, state.size),\n        ...extractCSSOption(varianted, state.variant)\n      };\n    },\n    icon: state => {\n      const sized = {\n        sm: {\n          width: scale(3, true),\n          height: scale(3, true)\n        },\n        md: {\n          width: scale(4, true),\n          height: scale(4, true)\n        },\n        lg: {\n          width: scale(6, true),\n          height: scale(6, true)\n        }\n      };\n      const marginRule = `margin${!state.iconAfter ? \'Right\' : \'Left\'}`;\n      const invMarginRule = `margin${state.iconAfter ? \'Right\' : \'Left\'}`;\n      const iconCSS = {\n        [marginRule]: !state.hidden ? (state.hasChildren ? 1 : -1) * scale(1, true) : undefined,\n        [invMarginRule]: !state.hidden ? -scale(1, true) : undefined,\n        ...extractCSSOption(sized, state.size),\n        flexShrink: 0\n      };\n      return {\n        ...iconCSS,\n        fill: \'currentcolor\'\n      };\n    }\n  };\n  const themes = {\n    basic: basicTheme\n  };\n  const Button = createButtonWithTheme(basicTheme, \'primary\', \'md\', font => ({\n    fontSize: 14,\n    ...(font === \'bodyLg\' && {\n      fontSize: 21\n    })\n  }));\n  return <div style={{\n    ...(args.wrap && {\n      maxWidth: 100\n    })\n  }}>\n                <Button {...args} theme={themes[themeName]} onClick={action(\'onClick\')}>\n                    I\'m a button\n                </Button>\n            </div>;\n}'
  }
};
const example = () => {
  const basicButtonTheme = {
    button: {
      border: '1px dashed #333333',
      padding: (0,scale/* scale */.h)(2),
      color: 'black',
      display: 'flex',
      gap: (0,scale/* scale */.h)(1, true),
      alignItems: 'center',
      width: 'fit-content'
    },
    icon: {
      width: (0,scale/* scale */.h)(2),
      height: (0,scale/* scale */.h)(2)
    }
  };
  const buttonThemes = {
    basic: basicButtonTheme
  };
  const Button = createButtonWithTheme();
  return (0,esm/* mdx */.yg)(Button, {
    as: "a",
    href: "#",
    size: "sm",
    variant: "primary",
    theme: buttonThemes.basic,
    Icon: baseTheme/* baseTheme */.$.global.placeholder,
    onClick: e => {
      e.preventDefault();
    }
  }, "Content");
};
example.storyName = 'Example';
example.parameters = {
  storySource: {
    source: '() => {\n  const basicButtonTheme = {\n    button: {\n      border: \'1px dashed #333333\',\n      padding: scale(2),\n      color: \'black\',\n      display: \'flex\',\n      gap: scale(1, true),\n      alignItems: \'center\',\n      width: \'fit-content\'\n    },\n    icon: {\n      width: scale(2),\n      height: scale(2)\n    }\n  };\n  const buttonThemes = {\n    basic: basicButtonTheme\n  };\n  const Button = createButtonWithTheme();\n  return <Button as=\"a\" href=\"#\" size=\"sm\" variant=\"primary\" theme={buttonThemes.basic} Icon={baseTheme.global.placeholder} onClick={e => {\n    e.preventDefault();\n  }}>\n                Content\n            </Button>;\n}'
  }
};
const componentMeta = {
  title: 'Components / Emotion / Button',
  component: BaseButton,
  includeStories: ["basic", "example"]
};
const mdxStoryNameToKey = {
  "Basic": "basic",
  "Example": "example"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const FutureButton_stories = (componentMeta);

/***/ }),

/***/ "./src/components/emotion/Layout/Layout.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   alignment: () => (/* binding */ alignment),
/* harmony export */   areas: () => (/* binding */ areas),
/* harmony export */   autoMode: () => (/* binding */ autoMode),
/* harmony export */   basic: () => (/* binding */ basic),
/* harmony export */   customCols: () => (/* binding */ customCols),
/* harmony export */   customRows: () => (/* binding */ customRows),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   flex: () => (/* binding */ flex),
/* harmony export */   grid: () => (/* binding */ grid),
/* harmony export */   itemColRow: () => (/* binding */ itemColRow),
/* harmony export */   mediaQueries: () => (/* binding */ mediaQueries)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/components/emotion/Layout/index.tsx");
/* harmony import */ var _storybook_docgen_Layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./.storybook/docgen/Layout.tsx");
/* harmony import */ var _helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/helpers/common/Placeholder.tsx");
/* harmony import */ var _utils_common_scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/utils/common/scale.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */






const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Components / Emotion / Helpers / Layout",
    component: ___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P,
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "layout"
  }, `Layout`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Flex",
    args: {
      itemsCount: 3,
      reverse: true,
      wrap: true,
      inline: false,
      justify: 'space-between',
      align: 'center',
      direction: 'row',
      rowGap: 8,
      columnGap: 8
    },
    argTypes: {
      itemsCount: {
        name: 'Items count (demo)',
        control: {
          type: 'range',
          min: 2,
          max: 16,
          step: 1
        }
      },
      reverse: {
        name: 'Reverse order',
        control: 'boolean'
      },
      wrap: {
        name: 'Allow wrapping',
        control: 'boolean'
      },
      inline: {
        name: 'Inline display',
        control: 'boolean'
      },
      justify: {
        name: 'Alignment (horizontal)',
        options: ['', 'start', 'end', 'center', 'stretch', 'space-around', 'space-between', 'space-evenly']
      },
      align: {
        name: 'Alignment (vertical)',
        options: ['', 'start', 'end', 'center', 'stretch', 'baseline']
      },
      direction: {
        name: 'Direction',
        control: 'radio',
        options: ['column', 'row']
      }
    },
    mdxType: "Story"
  }, ({
    itemsCount,
    columnGap,
    rowGap,
    ...props
  }) => {
    const layoutProps = {
      type: 'flex',
      gap: [columnGap || 0, rowGap || 0],
      ...props
    };
    return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, _extends({}, layoutProps, {
      mdxType: "Layout"
    }), new Array(itemsCount).fill('').map((_, index) => {
      index++;
      return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
        key: index
      }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
        mdxType: "Placeholder"
      }, "Item ", index));
    }));
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Grid",
    args: {
      itemsCount: 12,
      inline: false,
      justify: 'space-between',
      align: 'center',
      direction: 'unset',
      dense: false,
      cols: 12,
      auto: 0,
      rows: 0,
      areas: [],
      autoRows: [],
      autoCols: [],
      rowGap: 8,
      columnGap: 8
    },
    argTypes: {
      itemsCount: {
        name: 'Items count (demo)',
        control: {
          type: 'range',
          min: 2,
          max: 16,
          step: 1
        }
      },
      inline: {
        name: 'Inline display',
        control: 'boolean'
      },
      justify: {
        name: 'Alignment (horizontal)',
        options: ['', 'start', 'end', 'center', 'stretch', 'space-around', 'space-between', 'space-evenly']
      },
      align: {
        name: 'Alignment (vertical)',
        options: ['', 'start', 'end', 'center', 'stretch']
      },
      direction: {
        name: 'Grid auto flow',
        control: 'radio',
        options: ['column', 'row', 'unset']
      },
      dense: {
        name: 'Grid auto flow dense',
        control: 'boolean'
      },
      auto: {
        name: 'Auto mode',
        control: {
          type: 'range',
          min: 0,
          max: 400,
          step: 8
        }
      },
      cols: {
        name: 'Columns count',
        control: {
          type: 'range',
          min: 1,
          max: 16,
          step: 1
        }
      },
      columnGap: {
        name: 'Gap (columns)',
        control: {
          type: 'range',
          min: 0,
          max: 160,
          step: 4
        }
      },
      rows: {
        name: 'Rows count',
        control: {
          type: 'range',
          min: 0,
          max: 10,
          step: 1
        }
      },
      rowGap: {
        name: 'Gap (rows)',
        control: {
          type: 'range',
          min: 0,
          max: 160,
          step: 4
        }
      },
      justify: {
        name: 'Alignment (horizontal)',
        options: ['', 'start', 'end', 'center', 'stretch', 'space-around', 'space-between', 'space-evenly']
      },
      align: {
        name: 'Alignment (vertical)',
        options: ['', 'start', 'end', 'center', 'stretch']
      }
    },
    mdxType: "Story"
  }, ({
    itemsCount,
    rowGap,
    columnGap,
    areas,
    autoCols,
    autoRows,
    auto,
    cols,
    rows,
    ...props
  }) => {
    const layoutProps = {
      type: 'grid',
      gap: [columnGap || 0, rowGap || 0],
      areas: areas.length ? areas : undefined,
      ...(!autoCols?.length && {
        cols
      }),
      rows: rows || undefined,
      autoCols: autoCols?.length ? autoCols : undefined,
      autoRows: autoRows?.length ? autoRows : undefined,
      auto,
      ...props
    };
    return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, _extends({}, layoutProps, {
      mdxType: "Layout"
    }), new Array(itemsCount).fill('').map((_, index) => {
      index++;
      return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
        key: index
      }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
        mdxType: "Placeholder"
      }, "Item ", index));
    }));
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Компонент `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout`), ` помогает строить сетки. По умолчанию он использует CSS Grid, но есть возможность использовать CSS Flex через изменение `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `type`), `. По сути это React компонент, который позволяет задать сетку, как в CSS, но через props и с упрощённым API.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Сетка всегда строится через сочетание обёртки `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout`), ` и очерёдности колонок через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout.Item`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "props"
  }, `Props`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Props */ .Ji, {
    components: {
      Layout: _storybook_docgen_Layout__WEBPACK_IMPORTED_MODULE_5__/* .LayoutProps */ .XS,
      'Layout.Item': ___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item
    },
    mdxType: "Props"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "use-cases"
  }, `Use cases`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "basic"
  }, `Basic`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В простейшем случае без указания props значения для `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `cols`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `gap`), ` возьмутся из объекта темы, раздела `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `layout`), `. В таком случае сетка будет соответствовать сетке из фрейма `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout`), ` в Figma.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Basic",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
    mdxType: "Layout"
  }, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    key: item
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item ", item)))))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "custom-cols--gap"
  }, `Custom cols & gap`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `При указании `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `cols`), ` в формате числа для гридов применится repeat, т.е. будет создано указанное количество равных по размеру колонок. Для флексов численное значение также создаст колонки равной ширины.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Также для гридов доступны записи в формате строки и массива, позволяющие задавать более сложные сетки – эти значения передаются в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `gridTemplateColumns`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Отступы между колонками можно менять через проп `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `gap`), `. Можно задавать различные горизонтальные и вертикальные отступы – для этого используется запись в формате массива, иначе значение применяется для обоих типов отступов.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Отступы между колонками должны быть кратными минимальному шагу сетки – используйте хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `scale`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 Все простые значения задают сетки без учёта адаптива, т.е. эта сетка будет применена на всех разрешениях. Для указания адаптивных сеток используйте объектную запись (о которой дальше).`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Custom Cols",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
    cols: 3,
    gap: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(2),
    mdxType: "Layout"
  }, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    key: item
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item ", item)))))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "custom-rows"
  }, `Custom Rows`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `CSS Grid делает возможным задавать two-dimensional grids, т.е. помимо колонок задавать ещё и строки. Это можно сделать через проп `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `rows`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Custom Rows",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
    cols: 2,
    rows: [2, 1, 2],
    mdxType: "Layout"
  }, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    key: item
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item ", item)))))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "auto-mode"
  }, `Auto mode`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Компонент `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout`), ` предоставляет пресет для «авторежима» – сетки с автоматическим расчётом колонок: через него можно строить адаптивные сетки без написания медиазапросов. Для этого нужно указать проп `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `auto`), ` со значением минимальной ширины колонки – число колонок будет определено автоматически, т.е. они будут тянуться по ширине, пока не появится возможность вставить ещё одну. Для гридов эта возможность реализована через связку auto-fill и minmax, для флексов через сочетание flex-basis и flex-grow.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Если вам нужно, чтобы колонки последней строки растягивались по ширине, используйте `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `type`), ` со значением `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `flex`), ` – в отличие от гридов для флексов это возможно засчёт flex-grow.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Auto mode",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
    auto: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(18),
    mdxType: "Layout"
  }, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    key: item
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item ", item)))))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "item-col--row"
  }, `Item Col & Row`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Можно задавать размеры отдельным элементам сетки через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `col`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `row`), `. Колонки работают и для флексов, строки – только для гридов.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Item Col & Row",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
    cols: 6,
    mdxType: "Layout"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    col: 2,
    row: 2
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item 1")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item 2")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item 3")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item 4")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item 5")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    col: 4
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item 6"))))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "areas"
  }, `Areas`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для гридов доступен механизм именованных зон через связку `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `areas`), ` для `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `area`), ` для `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout.Item`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Areas",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
    areas: ['item1 item2 item3', 'item1 item2 item3', 'item1 item4 item3', 'item5 item4 item3', 'item5 item6 item3', 'item5 item6 item3'],
    mdxType: "Layout"
  }, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    key: item,
    area: `item${item}`
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item ", item)))))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "media-queries"
  }, `Media Queries`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Практически все пропсы `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout`), ` принимают формат объекта с брейкпоинтами. Таким образом можно задать изменения сетки на адаптиве.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В качестве полей объекта используются имена брейкпоинтов. Для всех проектов, использующих GDS они одинаковы, меняться могут только их значения, которые тянутся из макета Figma.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `type Breakpoint = 'xxxl' | 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' | 'xxs' | 'xxxs';
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `При указании значения под именем брейкпоинта это правило применяется для разрешений, меньших следующего за ним, т.е. при реализации макета на 768 вы указываете соответсвующее этому значению имя, т.е. sm, и подставиться медиавыражение `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `< 960`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Media Queries",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
    cols: 12,
    gap: {
      xxxl: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(4),
      lg: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(3),
      sm: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(2),
      xs: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(1)
    },
    mdxType: "Layout"
  }, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    key: item,
    col: {
      xxxl: 2,
      lg: 3,
      sm: 4,
      xs: 6,
      xxs: 12
    }
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item ", item)))))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "alignment"
  }, `Alignment`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Выравнивание и для гридов и для флексов задаются через пропсы `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `justify`), ` для основной оси и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `align`), ` для побочной. Эти пропсы задают различные CSS свойства в зависимости от типа. Также упрощены значения, например, для всех доступны `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `start`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `end`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Можно задать своё выравнивание для отдельных элементов. Для этого эти пропсы указываются самим элементам.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Alignment",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
    cols: 3,
    justify: "end",
    align: "center",
    css: {
      height: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(30)
    },
    mdxType: "Layout"
  }, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
    key: item
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, {
    mdxType: "Placeholder"
  }, "Item ", item)))))));
}
;
MDXContent.isMDXComponent = true;
const flex = ({
  itemsCount,
  columnGap,
  rowGap,
  ...props
}) => {
  const layoutProps = {
    type: 'flex',
    gap: [columnGap || 0, rowGap || 0],
    ...props
  };
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, layoutProps, new Array(itemsCount).fill('').map((_, index) => {
    index++;
    return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
      key: index
    }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", index));
  }));
};
flex.storyName = 'Flex';
flex.argTypes = {
  itemsCount: {
    name: 'Items count (demo)',
    control: {
      type: 'range',
      min: 2,
      max: 16,
      step: 1
    }
  },
  reverse: {
    name: 'Reverse order',
    control: 'boolean'
  },
  wrap: {
    name: 'Allow wrapping',
    control: 'boolean'
  },
  inline: {
    name: 'Inline display',
    control: 'boolean'
  },
  justify: {
    name: 'Alignment (horizontal)',
    options: ['', 'start', 'end', 'center', 'stretch', 'space-around', 'space-between', 'space-evenly']
  },
  align: {
    name: 'Alignment (vertical)',
    options: ['', 'start', 'end', 'center', 'stretch', 'baseline']
  },
  direction: {
    name: 'Direction',
    control: 'radio',
    options: ['column', 'row']
  }
};
flex.args = {
  itemsCount: 3,
  reverse: true,
  wrap: true,
  inline: false,
  justify: 'space-between',
  align: 'center',
  direction: 'row',
  rowGap: 8,
  columnGap: 8
};
flex.parameters = {
  storySource: {
    source: '({\n  itemsCount,\n  columnGap,\n  rowGap,\n  ...props\n}) => {\n  const layoutProps = {\n    type: \'flex\',\n    gap: [columnGap || 0, rowGap || 0],\n    ...props\n  };\n  return <Layout {...layoutProps}>\n                {new Array(itemsCount).fill(\'\').map((_, index) => {\n      index++;\n      return <Layout.Item key={index}>\n                            <Placeholder>Item {index}</Placeholder>\n                        </Layout.Item>;\n    })}\n            </Layout>;\n}'
  }
};
const grid = ({
  itemsCount,
  rowGap,
  columnGap,
  areas,
  autoCols,
  autoRows,
  auto,
  cols,
  rows,
  ...props
}) => {
  const layoutProps = {
    type: 'grid',
    gap: [columnGap || 0, rowGap || 0],
    areas: areas.length ? areas : undefined,
    ...(!autoCols?.length && {
      cols
    }),
    rows: rows || undefined,
    autoCols: autoCols?.length ? autoCols : undefined,
    autoRows: autoRows?.length ? autoRows : undefined,
    auto,
    ...props
  };
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, layoutProps, new Array(itemsCount).fill('').map((_, index) => {
    index++;
    return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
      key: index
    }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", index));
  }));
};
grid.storyName = 'Grid';
grid.argTypes = {
  itemsCount: {
    name: 'Items count (demo)',
    control: {
      type: 'range',
      min: 2,
      max: 16,
      step: 1
    }
  },
  inline: {
    name: 'Inline display',
    control: 'boolean'
  },
  justify: {
    name: 'Alignment (horizontal)',
    options: ['', 'start', 'end', 'center', 'stretch', 'space-around', 'space-between', 'space-evenly']
  },
  align: {
    name: 'Alignment (vertical)',
    options: ['', 'start', 'end', 'center', 'stretch']
  },
  direction: {
    name: 'Grid auto flow',
    control: 'radio',
    options: ['column', 'row', 'unset']
  },
  dense: {
    name: 'Grid auto flow dense',
    control: 'boolean'
  },
  auto: {
    name: 'Auto mode',
    control: {
      type: 'range',
      min: 0,
      max: 400,
      step: 8
    }
  },
  cols: {
    name: 'Columns count',
    control: {
      type: 'range',
      min: 1,
      max: 16,
      step: 1
    }
  },
  columnGap: {
    name: 'Gap (columns)',
    control: {
      type: 'range',
      min: 0,
      max: 160,
      step: 4
    }
  },
  rows: {
    name: 'Rows count',
    control: {
      type: 'range',
      min: 0,
      max: 10,
      step: 1
    }
  },
  rowGap: {
    name: 'Gap (rows)',
    control: {
      type: 'range',
      min: 0,
      max: 160,
      step: 4
    }
  },
  justify: {
    name: 'Alignment (horizontal)',
    options: ['', 'start', 'end', 'center', 'stretch', 'space-around', 'space-between', 'space-evenly']
  },
  align: {
    name: 'Alignment (vertical)',
    options: ['', 'start', 'end', 'center', 'stretch']
  }
};
grid.args = {
  itemsCount: 12,
  inline: false,
  justify: 'space-between',
  align: 'center',
  direction: 'unset',
  dense: false,
  cols: 12,
  auto: 0,
  rows: 0,
  areas: [],
  autoRows: [],
  autoCols: [],
  rowGap: 8,
  columnGap: 8
};
grid.parameters = {
  storySource: {
    source: '({\n  itemsCount,\n  rowGap,\n  columnGap,\n  areas,\n  autoCols,\n  autoRows,\n  auto,\n  cols,\n  rows,\n  ...props\n}) => {\n  const layoutProps = {\n    type: \'grid\',\n    gap: [columnGap || 0, rowGap || 0],\n    areas: areas.length ? areas : undefined,\n    ...(!autoCols?.length && {\n      cols\n    }),\n    rows: rows || undefined,\n    autoCols: autoCols?.length ? autoCols : undefined,\n    autoRows: autoRows?.length ? autoRows : undefined,\n    auto,\n    ...props\n  };\n  return <Layout {...layoutProps}>\n                {new Array(itemsCount).fill(\'\').map((_, index) => {\n      index++;\n      return <Layout.Item key={index}>\n                            <Placeholder>Item {index}</Placeholder>\n                        </Layout.Item>;\n    })}\n            </Layout>;\n}'
  }
};
const basic = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, null, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  key: item
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", item))));
basic.storyName = 'Basic';
basic.parameters = {
  storySource: {
    source: '<Layout>\n            {[1, 2, 3, 4, 5, 6].map(item => <Layout.Item key={item}>\n                    <Placeholder>Item {item}</Placeholder>\n                </Layout.Item>)}\n        </Layout>'
  }
};
const customCols = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
  cols: 3,
  gap: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(2)
}, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  key: item
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", item))));
customCols.storyName = 'Custom Cols';
customCols.parameters = {
  storySource: {
    source: '<Layout cols={3} gap={scale(2)}>\n            {[1, 2, 3, 4, 5, 6].map(item => <Layout.Item key={item}>\n                    <Placeholder>Item {item}</Placeholder>\n                </Layout.Item>)}\n        </Layout>'
  }
};
const customRows = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
  cols: 2,
  rows: [2, 1, 2]
}, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  key: item
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", item))));
customRows.storyName = 'Custom Rows';
customRows.parameters = {
  storySource: {
    source: '<Layout cols={2} rows={[2, 1, 2]}>\n            {[1, 2, 3, 4, 5, 6].map(item => <Layout.Item key={item}>\n                    <Placeholder>Item {item}</Placeholder>\n                </Layout.Item>)}\n        </Layout>'
  }
};
const autoMode = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
  auto: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(18)
}, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  key: item
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", item))));
autoMode.storyName = 'Auto mode';
autoMode.parameters = {
  storySource: {
    source: '<Layout auto={scale(18)}>\n            {[1, 2, 3, 4, 5, 6].map(item => <Layout.Item key={item}>\n                    <Placeholder>Item {item}</Placeholder>\n                </Layout.Item>)}\n        </Layout>'
  }
};
const itemColRow = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
  cols: 6
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  col: 2,
  row: 2
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item 1")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item 2")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item 3")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item 4")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item 5")), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  col: 4
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item 6")));
itemColRow.storyName = 'Item Col & Row';
itemColRow.parameters = {
  storySource: {
    source: '<Layout cols={6}>\n            <Layout.Item col={2} row={2}>\n                <Placeholder>Item 1</Placeholder>\n            </Layout.Item>\n            <Layout.Item>\n                <Placeholder>Item 2</Placeholder>\n            </Layout.Item>\n            <Layout.Item>\n                <Placeholder>Item 3</Placeholder>\n            </Layout.Item>\n            <Layout.Item>\n                <Placeholder>Item 4</Placeholder>\n            </Layout.Item>\n            <Layout.Item>\n                <Placeholder>Item 5</Placeholder>\n            </Layout.Item>\n            <Layout.Item col={4}>\n                <Placeholder>Item 6</Placeholder>\n            </Layout.Item>\n        </Layout>'
  }
};
const areas = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
  areas: ['item1 item2 item3', 'item1 item2 item3', 'item1 item4 item3', 'item5 item4 item3', 'item5 item6 item3', 'item5 item6 item3']
}, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  key: item,
  area: `item${item}`
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", item))));
areas.storyName = 'Areas';
areas.parameters = {
  storySource: {
    source: '<Layout areas={[\'item1 item2 item3\', \'item1 item2 item3\', \'item1 item4 item3\', \'item5 item4 item3\', \'item5 item6 item3\', \'item5 item6 item3\']}>\n            {[1, 2, 3, 4, 5, 6].map(item => <Layout.Item key={item} area={`item${item}`}>\n                    <Placeholder>Item {item}</Placeholder>\n                </Layout.Item>)}\n        </Layout>'
  }
};
const mediaQueries = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
  cols: 12,
  gap: {
    xxxl: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(4),
    lg: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(3),
    sm: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(2),
    xs: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(1)
  }
}, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  key: item,
  col: {
    xxxl: 2,
    lg: 3,
    sm: 4,
    xs: 6,
    xxs: 12
  }
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", item))));
mediaQueries.storyName = 'Media Queries';
mediaQueries.parameters = {
  storySource: {
    source: '<Layout cols={12} gap={{\n  xxxl: scale(4),\n  lg: scale(3),\n  sm: scale(2),\n  xs: scale(1)\n}}>\n            {[1, 2, 3, 4, 5, 6].map(item => <Layout.Item key={item} col={{\n    xxxl: 2,\n    lg: 3,\n    sm: 4,\n    xs: 6,\n    xxs: 12\n  }}>\n                    <Placeholder>Item {item}</Placeholder>\n                </Layout.Item>)}\n        </Layout>'
  }
};
const alignment = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P, {
  cols: 3,
  justify: "end",
  align: "center",
  css: {
    height: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(30)
  }
}, [1, 2, 3, 4, 5, 6].map(item => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P.Item, {
  key: item
}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_helpers_common_Placeholder__WEBPACK_IMPORTED_MODULE_4__/* .Placeholder */ .O, null, "Item ", item))));
alignment.storyName = 'Alignment';
alignment.parameters = {
  storySource: {
    source: '<Layout cols={3} justify=\"end\" align=\"center\" css={{\n  height: scale(30)\n}}>\n            {[1, 2, 3, 4, 5, 6].map(item => <Layout.Item key={item}>\n                    <Placeholder>Item {item}</Placeholder>\n                </Layout.Item>)}\n        </Layout>'
  }
};
const componentMeta = {
  title: 'Components / Emotion / Helpers / Layout',
  component: ___WEBPACK_IMPORTED_MODULE_3__/* .Layout */ .P,
  includeStories: ["flex", "grid", "basic", "customCols", "customRows", "autoMode", "itemColRow", "areas", "mediaQueries", "alignment"]
};
const mdxStoryNameToKey = {
  "Flex": "flex",
  "Grid": "grid",
  "Basic": "basic",
  "Custom Cols": "customCols",
  "Custom Rows": "customRows",
  "Auto mode": "autoMode",
  "Item Col & Row": "itemColRow",
  "Areas": "areas",
  "Media Queries": "mediaQueries",
  "Alignment": "alignment"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./src/components/emotion/Section/Section.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  backgrounds: () => (/* binding */ backgrounds),
  container: () => (/* binding */ container),
  "default": () => (/* binding */ Section_stories),
  knobs: () => (/* binding */ knobs),
  marginsPaddings: () => (/* binding */ marginsPaddings)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.bind.js
var es_function_bind = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./src/helpers/emotion/useCSSProperty.ts + 1 modules
var useCSSProperty = __webpack_require__("./src/helpers/emotion/useCSSProperty.ts");
// EXTERNAL MODULE: ./src/components/emotion/Container/index.tsx
var Container = __webpack_require__("./src/components/emotion/Container/index.tsx");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./src/components/emotion/Section/index.tsx





var _excluded = ["children", "container", "mb", "pv", "pt", "pb", "bg", "css"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}




/**
 * Component for creating page sections.
 */
var Section = function Section(_ref) {
  var children = _ref.children,
    _ref$container = _ref.container,
    container = _ref$container === void 0 ? true : _ref$container,
    mb = _ref.mb,
    pvProp = _ref.pv,
    ptProp = _ref.pt,
    pbProp = _ref.pb,
    bg = _ref.bg,
    css = _ref.css,
    props = _objectWithoutProperties(_ref, _excluded);
  var background = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'background',
    props: {
      bg: bg
    }
  });
  var marginBottom = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'marginBottom',
    props: {
      mb: mb
    }
  });
  var paddingTop = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'paddingTop',
    props: {
      pv: pvProp,
      pt: ptProp
    },
    transform: function transform(_ref2) {
      var pv = _ref2.pv,
        pt = _ref2.pt;
      return pv !== null && pv !== void 0 ? pv : pt;
    }
  });
  var paddingBottom = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'paddingBottom',
    props: {
      pv: pvProp,
      pb: pbProp
    },
    transform: function transform(_ref3) {
      var pv = _ref3.pv,
        pb = _ref3.pb;
      return pv !== null && pv !== void 0 ? pv : pb;
    }
  });
  var sectionCss = (0,react.useMemo)(function () {
    return [background, marginBottom, paddingBottom, paddingTop, css];
  }, [background, marginBottom, paddingBottom, paddingTop, css]);
  return (0,emotion_react_browser_esm/* jsx */.Y)("section", _extends({
    css: sectionCss
  }, props), container ? (0,emotion_react_browser_esm/* jsx */.Y)(Container/* Container */.m, null, children) : children);
};
try {
    // @ts-ignore
    Section.displayName = "Section";
    // @ts-ignore
    Section.__docgenInfo = { "description": "Component for creating page sections.", "displayName": "Section", "props": { "container": { "defaultValue": { value: true }, "description": "Wrap content in container.", "name": "container", "required": false, "type": { "name": "boolean | undefined" } }, "mb": { "defaultValue": null, "description": "Bottom offset.", "name": "mb", "required": false, "type": { "name": "AllowMedia<number> | undefined" } }, "pv": { "defaultValue": null, "description": "Vertical paddings.", "name": "pv", "required": false, "type": { "name": "AllowMedia<number> | undefined" } }, "pt": { "defaultValue": null, "description": "Top padding.", "name": "pt", "required": false, "type": { "name": "AllowMedia<number> | undefined" } }, "pb": { "defaultValue": null, "description": "Bottom padding.", "name": "pb", "required": false, "type": { "name": "AllowMedia<number> | undefined" } }, "bg": { "defaultValue": null, "description": "Background color.", "name": "bg", "required": false, "type": { "name": "AllowMedia<string> | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/Section/index.tsx#Section"] = { docgenInfo: Section.__docgenInfo, name: "Section", path: "src/components/emotion/Section/index.tsx#Section" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/helpers/common/Placeholder.tsx
var Placeholder = __webpack_require__("./src/helpers/common/Placeholder.tsx");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
;// CONCATENATED MODULE: ./src/components/emotion/Section/Section.stories.mdx
function Section_stories_extends() { return Section_stories_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, Section_stories_extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */






const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, Section_stories_extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Components / Emotion / Helpers / Section",
    component: Section,
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "section"
  }, `Section`), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Knobs",
    args: {
      container: true,
      mb: 0,
      pt: 0,
      pb: 0,
      bg: '#fff'
    },
    argTypes: {
      mb: {
        control: {
          type: 'number',
          min: 0,
          max: 160,
          step: 4
        }
      },
      pt: {
        control: {
          type: 'number',
          min: 0,
          max: 160,
          step: 4
        }
      },
      pb: {
        control: {
          type: 'number',
          min: 0,
          max: 160,
          step: 4
        }
      },
      bg: {
        control: 'color'
      }
    },
    mdxType: "Story"
  }, args => (0,esm/* mdx */.yg)(Section, Section_stories_extends({}, args, {
    mdxType: "Section"
  }), (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Here goes section content"))), (0,esm/* mdx */.yg)("p", null, `Обычно при разметке основного контента страницы он делится на разделы через тег section. Для упрощения этого процесса предусмотрен компонент `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Section`), `.`), (0,esm/* mdx */.yg)("p", null, `💬 В документации используется компонент `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Placeholder`), ` чисто в демонстративных целях – визуально показать бокс контента. Это вспомогательный компонент GDS и на проекте его не будет.`), (0,esm/* mdx */.yg)("h2", {
    "id": "props"
  }, `Props`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    of: Section,
    mdxType: "Props"
  }), (0,esm/* mdx */.yg)("h2", {
    "id": "use-cases"
  }, `Use cases`), (0,esm/* mdx */.yg)("h3", {
    "id": "container"
  }, `Container`), (0,esm/* mdx */.yg)("p", null, `Внутри каждого раздела может быть или не быть контейнер.`), (0,esm/* mdx */.yg)("p", null, `Величина контейнера, поля и отступы читаются из поля `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `container`), ` объекта темы.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Container",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(react.Fragment, null, (0,esm/* mdx */.yg)(Section, {
    mb: (0,scale/* scale */.h)(2),
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Section with container")), (0,esm/* mdx */.yg)(Section, {
    container: false,
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Section without container"))))), (0,esm/* mdx */.yg)("h3", {
    "id": "margins--paddings"
  }, `Margins & Paddings`), (0,esm/* mdx */.yg)("p", null, `В качестве спейсингов обычно используются либо нижние отступы, либо вертикальные поля. Для них предусмотрены пропсы `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `mb`), `, `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `pt`), `, `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `pb`), ` и `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `pv`), `. `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `pv`), ` выступает в качестве шортката для указания равных вертикальных полей.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Margins & Paddings",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(react.Fragment, null, (0,esm/* mdx */.yg)(Section, {
    mb: (0,scale/* scale */.h)(2),
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Section with margin")), (0,esm/* mdx */.yg)(Section, {
    mb: (0,scale/* scale */.h)(2),
    pv: (0,scale/* scale */.h)(2),
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Section with margin and equal paddings")), (0,esm/* mdx */.yg)(Section, {
    pt: (0,scale/* scale */.h)(4),
    pb: (0,scale/* scale */.h)(2),
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Section with different paddings"))))), (0,esm/* mdx */.yg)("h3", {
    "id": "backgrounds"
  }, `Backgrounds`), (0,esm/* mdx */.yg)("p", null, `Типовой кейс – использование разделов с фоном. Для фона предусмотрен проп `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `bg`), `.`), (0,esm/* mdx */.yg)("p", null, `⏱ Использовать изображения в качестве фона не рекомендуется, т.к. они не поддаются оптимизации – используйте компонент `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Picture`), ` с абсолютно спозиционированным изображением.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Backgrounds",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(react.Fragment, null, (0,esm/* mdx */.yg)(Section, {
    mb: (0,scale/* scale */.h)(2),
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Simple section")), (0,esm/* mdx */.yg)(Section, {
    mb: (0,scale/* scale */.h)(2),
    pv: (0,scale/* scale */.h)(2),
    bg: baseTheme/* baseTheme */.$.colors.grey20,
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Section with background")), (0,esm/* mdx */.yg)(Section, {
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Simple section"))))));
}
;
MDXContent.isMDXComponent = true;
const knobs = args => (0,esm/* mdx */.yg)(Section, args, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Here goes section content"));
knobs.storyName = 'Knobs';
knobs.argTypes = {
  mb: {
    control: {
      type: 'number',
      min: 0,
      max: 160,
      step: 4
    }
  },
  pt: {
    control: {
      type: 'number',
      min: 0,
      max: 160,
      step: 4
    }
  },
  pb: {
    control: {
      type: 'number',
      min: 0,
      max: 160,
      step: 4
    }
  },
  bg: {
    control: 'color'
  }
};
knobs.args = {
  container: true,
  mb: 0,
  pt: 0,
  pb: 0,
  bg: '#fff'
};
knobs.parameters = {
  storySource: {
    source: 'args => <Section {...args}>\n            <Placeholder>Here goes section content</Placeholder>\n        </Section>'
  }
};
const container = () => (0,esm/* mdx */.yg)(react.Fragment, null, (0,esm/* mdx */.yg)(Section, {
  mb: (0,scale/* scale */.h)(2)
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Section with container")), (0,esm/* mdx */.yg)(Section, {
  container: false
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Section without container")));
container.storyName = 'Container';
container.parameters = {
  storySource: {
    source: '<>\n            <Section mb={scale(2)}>\n                <Placeholder>Section with container</Placeholder>\n            </Section>\n            <Section container={false}>\n                <Placeholder>Section without container</Placeholder>\n            </Section>\n        </>'
  }
};
const marginsPaddings = () => (0,esm/* mdx */.yg)(react.Fragment, null, (0,esm/* mdx */.yg)(Section, {
  mb: (0,scale/* scale */.h)(2)
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Section with margin")), (0,esm/* mdx */.yg)(Section, {
  mb: (0,scale/* scale */.h)(2),
  pv: (0,scale/* scale */.h)(2)
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Section with margin and equal paddings")), (0,esm/* mdx */.yg)(Section, {
  pt: (0,scale/* scale */.h)(4),
  pb: (0,scale/* scale */.h)(2)
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Section with different paddings")));
marginsPaddings.storyName = 'Margins & Paddings';
marginsPaddings.parameters = {
  storySource: {
    source: '<>\n            <Section mb={scale(2)}>\n                <Placeholder>Section with margin</Placeholder>\n            </Section>\n            <Section mb={scale(2)} pv={scale(2)}>\n                <Placeholder>Section with margin and equal paddings</Placeholder>\n            </Section>\n            <Section pt={scale(4)} pb={scale(2)}>\n                <Placeholder>Section with different paddings</Placeholder>\n            </Section>\n        </>'
  }
};
const backgrounds = () => (0,esm/* mdx */.yg)(react.Fragment, null, (0,esm/* mdx */.yg)(Section, {
  mb: (0,scale/* scale */.h)(2)
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Simple section")), (0,esm/* mdx */.yg)(Section, {
  mb: (0,scale/* scale */.h)(2),
  pv: (0,scale/* scale */.h)(2),
  bg: baseTheme/* baseTheme */.$.colors.grey20
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Section with background")), (0,esm/* mdx */.yg)(Section, null, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Simple section")));
backgrounds.storyName = 'Backgrounds';
backgrounds.parameters = {
  storySource: {
    source: '<>\n            <Section mb={scale(2)}>\n                <Placeholder>Simple section</Placeholder>\n            </Section>\n            <Section mb={scale(2)} pv={scale(2)} bg={baseTheme.colors.grey20}>\n                <Placeholder>Section with background</Placeholder>\n            </Section>\n            <Section>\n                <Placeholder>Simple section</Placeholder>\n            </Section>\n        </>'
  }
};
const componentMeta = {
  title: 'Components / Emotion / Helpers / Section',
  component: Section,
  includeStories: ["knobs", "container", "marginsPaddings", "backgrounds"]
};
const mdxStoryNameToKey = {
  "Knobs": "knobs",
  "Container": "container",
  "Margins & Paddings": "marginsPaddings",
  "Backgrounds": "backgrounds"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const Section_stories = (componentMeta);

/***/ }),

/***/ "./src/components/emotion/VisuallyHidden/VisuallyHidden.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   basic: () => (/* binding */ basic),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/components/emotion/VisuallyHidden/index.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */



const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Components / Emotion / Helpers / VisuallyHidden",
    component: ___WEBPACK_IMPORTED_MODULE_3__/* .VisuallyHidden */ .s,
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "visuallyhidden"
  }, `VisuallyHidden`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Preview */ .lN, {
    mdxType: "Preview"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Story */ .gG, {
    name: "Basic",
    mdxType: "Story"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .VisuallyHidden */ .s, {
    mdxType: "VisuallyHidden"
  }, "I'm watching you", ' ', (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("span", {
    role: "img",
    "aria-label": "Eyes Emoji"
  }, "\uD83D\uDC40")))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Компонент для `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `визуального`), ` скрытия текста.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Это паттерн, позволяющий оставить контент доступным для AT, но скрыть визуально.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `♿️ Не используйте для этих целей `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `display: none`), ` или `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `visibility: hidden`), `, т.к. эти правила делают контент полностью недоступным.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Примеры:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Заголовки должны иметь древовидную структуру и всегда должен присутствовать `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `h1`), `, но в макетах либо нет заголовков, либо они пропускаются.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `label`), ` или `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `legend`), ` должны ассоциироваться с `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `input`), ` или `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `fieldset`), ` соответственно, но визуально на дизайне они не показаны.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `CTA кнопки имеют краткие наименование вроде "Купить". Зрячим пользователям предмет покупки понятен из контекста, а у пользователя скринридера этого контекста нет. В этом случае можно добавить визуально скрытое имя товара после слова "Купить".`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Прочие случаи с отсутствием контекста, в которых пользователю AT требуется дополнительная информация. Например добавление сопроводительной информации в элементы навигации, такие как хлебные крошки и пагинация.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🏆 Разделы страницы зачастую идут без заголовков, но пользователям скринридеров удобно ориентироваться по странице через дерево заголовков. Так что рекомендуется оставлять в таких случаях скрытые визуально заголовки.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🏆 В стили добавлено правило `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `white-space: nowrap`), `, чтобы избежать проблемы с неозвучиванием пробелов: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Beware smushed off-screen accessible text`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `📚 Подробнее про паттерн: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://webaim.org/techniques/css/invisiblecontent/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Invisible Content Just for Screen Reader Users`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "props"
  }, `Props`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Props */ .Ji, {
    of: ___WEBPACK_IMPORTED_MODULE_3__/* .VisuallyHidden */ .s,
    mdxType: "Props"
  }));
}
;
MDXContent.isMDXComponent = true;
const basic = () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(___WEBPACK_IMPORTED_MODULE_3__/* .VisuallyHidden */ .s, null, "I'm watching you", ' ', (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("span", {
  role: "img",
  "aria-label": "Eyes Emoji"
}, "\uD83D\uDC40"));
basic.storyName = 'Basic';
basic.parameters = {
  storySource: {
    source: '<VisuallyHidden>\n            I&apos;m watching you{\' \'}\n            <span role=\"img\" aria-label=\"Eyes Emoji\">\n                👀\n            </span>\n        </VisuallyHidden>'
  }
};
const componentMeta = {
  title: 'Components / Emotion / Helpers / VisuallyHidden',
  component: ___WEBPACK_IMPORTED_MODULE_3__/* .VisuallyHidden */ .s,
  includeStories: ["basic"]
};
const mdxStoryNameToKey = {
  "Basic": "basic"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./src/components/scss/Container/Container.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  basic: () => (/* binding */ basic),
  "default": () => (/* binding */ Container_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./.storybook/docgen/ContainerScss.tsx

var ContainerProps = function ContainerProps() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["ContainerProps"]));
try {
    // @ts-ignore
    ContainerProps.displayName = "ContainerProps";
    // @ts-ignore
    ContainerProps.__docgenInfo = { "description": "", "displayName": "ContainerProps", "props": { "children": { "defaultValue": null, "description": "Container content.", "name": "children", "required": true, "type": { "name": "ReactNode" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/ContainerScss.tsx#ContainerProps"] = { docgenInfo: ContainerProps.__docgenInfo, name: "ContainerProps", path: ".storybook/docgen/ContainerScss.tsx#ContainerProps" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/components/scss/Container/index.tsx
var Container = __webpack_require__("./src/components/scss/Container/index.tsx");
// EXTERNAL MODULE: ./src/helpers/common/Placeholder.tsx
var Placeholder = __webpack_require__("./src/helpers/common/Placeholder.tsx");
;// CONCATENATED MODULE: ./src/components/scss/Container/Container.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */





const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Components / Scss / Helpers / Container",
    component: Container/* Container */.m,
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "container"
  }, `Container`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Basic",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(Container/* Container */.m, {
    mdxType: "Container"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Content")))), (0,esm/* mdx */.yg)("p", null, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Container`), ` – это обёртка для ограничения контента по ширине. Этот компонент стилизован через значения ширины контейнера и полей, полученных через токены и хранящихся в объекте темы.`), (0,esm/* mdx */.yg)("p", null, `Контейнер используется в компоненте `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Section`), `, но может использоваться и напрямую в других местах, где тег section не нужен.`), (0,esm/* mdx */.yg)("p", null, `💬 В документации используется компонент `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Placeholder`), ` чисто в демонстративных целях – визуально показать бокс контента. Это вспомогательный компонент GDS и на проекте его не будет.`), (0,esm/* mdx */.yg)("h2", {
    "id": "props"
  }, `Props`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    components: {
      Container: ContainerProps
    },
    mdxType: "Props"
  }));
}
;
MDXContent.isMDXComponent = true;
const basic = () => (0,esm/* mdx */.yg)(Container/* Container */.m, null, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Content"));
basic.storyName = 'Basic';
basic.parameters = {
  storySource: {
    source: '<Container>\n            <Placeholder>Content</Placeholder>\n        </Container>'
  }
};
const componentMeta = {
  title: 'Components / Scss / Helpers / Container',
  component: Container/* Container */.m,
  includeStories: ["basic"]
};
const mdxStoryNameToKey = {
  "Basic": "basic"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const Container_stories = (componentMeta);

/***/ }),

/***/ "./src/components/scss/FlexLayout/FlexLayout.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ FlexLayout_stories),
  flexLayout: () => (/* binding */ flexLayout)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.bind.js
var es_function_bind = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce.js
var es_array_reduce = __webpack_require__("./node_modules/core-js/modules/es.array.reduce.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__("./node_modules/classnames/index.js");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./src/helpers/scss/useCSSProperty.ts
var useCSSProperty = __webpack_require__("./src/helpers/scss/useCSSProperty.ts");
// EXTERNAL MODULE: ./src/helpers/scss/useGenerateProperty.ts
var useGenerateProperty = __webpack_require__("./src/helpers/scss/useGenerateProperty.ts");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.is-integer.js
var es_number_is_integer = __webpack_require__("./node_modules/core-js/modules/es.number.is-integer.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
;// CONCATENATED MODULE: ./src/components/scss/FlexLayout/helpers.ts




var gapTransform = function gapTransform(gapParam) {
  if (Array.isArray(gapParam)) return "".concat(gapParam[0], "px ").concat(gapParam[1], "px");
  return Number.isInteger(gapParam) ? "".concat(gapParam, "px") : gapParam;
};
// EXTERNAL MODULE: ./src/utils/scss/useTheme.ts
var useTheme = __webpack_require__("./src/utils/scss/useTheme.ts");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./src/components/scss/FlexLayout/index.tsx







var _excluded = ["as", "gap", "justify", "align", "className", "children", "wrap"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}









var DEFAULT_COMPONENT = 'div';
/**
 * Flex layout component
 */
var FlexComponent = function FlexComponent(_ref, ref) {
  var ComponentProp = _ref.as,
    _ref$gap = _ref.gap,
    gap = _ref$gap === void 0 ? (0,scale/* scale */.h)(3) : _ref$gap,
    justify = _ref.justify,
    align = _ref.align,
    className = _ref.className,
    children = _ref.children,
    wrap = _ref.wrap,
    props = _objectWithoutProperties(_ref, _excluded);
  var Component = ComponentProp || DEFAULT_COMPONENT;
  var _useScssTheme = (0,useTheme/* useScssTheme */.W)(),
    styles = _useScssTheme.components.flexLayout.index;
  var flexGap = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: gap,
    transform: gapTransform
  });
  var justifyContent = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: justify
  });
  var alignItems = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: align
  });
  var wrapValue = (0,react.useMemo)(function () {
    if (typeof wrap === 'boolean') return wrap ? 'wrap' : 'nowrap';
    if (!wrap) return;
    return Object.keys(wrap).reduce(function (acc, key) {
      var value = wrap[key];
      acc[key] = value ? 'wrap' : 'nowrap';
      return acc;
    }, {});
  }, [wrap]);
  var flexWrap = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: wrapValue
  });
  var propArray = (0,react.useMemo)(function () {
    var properties = [];
    if (flexGap) properties.push({
      name: 'gap',
      value: flexGap
    });
    if (justifyContent) properties.push({
      name: 'justify',
      value: justifyContent
    });
    if (alignItems) properties.push({
      name: 'align',
      value: alignItems
    });
    if (flexWrap) properties.push({
      name: 'wrap',
      value: flexWrap
    });
    return properties;
  }, [alignItems, flexGap, flexWrap, justifyContent]);
  var _useGenerateProperty = (0,useGenerateProperty/* useGenerateProperty */.e)({
      props: propArray,
      name: 'flexLayout',
      styles: styles
    }),
    mediaStyles = _useGenerateProperty.mediaStyles,
    vars = _useGenerateProperty.vars;
  return (0,emotion_react_browser_esm/* jsx */.Y)(Component, _extends({
    ref: ref,
    className: classnames_default()(styles.flexLayout, mediaStyles, className),
    style: vars
  }, props), children);
};
var FlexLayout = /*#__PURE__*/(0,react.forwardRef)(FlexComponent);

try {
    // @ts-ignore
    __function.__docgenInfo = { "description": "Flex layout item component", "displayName": "FlexLayoutItem", "props": { "as": { "defaultValue": { value: "\"div\"" }, "description": "Element", "name": "as", "required": false, "type": { "name": "ElementType | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "children": { "defaultValue": null, "description": "Item content.", "name": "children", "required": false, "type": { "name": "ReactNode" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "justify": { "defaultValue": null, "description": "Main axis self alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis self alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "order": { "defaultValue": null, "description": "Order.", "name": "order", "required": false, "type": { "name": "AllowMedia<number> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/scss/FlexLayout/index.tsx#FlexLayoutItem"] = { docgenInfo: __function.__docgenInfo, name: "FlexLayoutItem", path: "src/components/scss/FlexLayout/index.tsx#FlexLayoutItem" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./src/components/scss/FlexLayout/components/Item/helpers.ts


var orderTransform = function orderTransform(orderParam) {
  if (Number.isInteger(orderParam)) return "".concat(orderParam);
  return orderParam;
};
;// CONCATENATED MODULE: ./src/components/scss/FlexLayout/components/Item/index.tsx





var Item_excluded = ["as", "justify", "align", "order", "className", "children"];
function Item_extends() {
  return Item_extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, Item_extends.apply(null, arguments);
}
function Item_objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = Item_objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function Item_objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}







var Item_DEFAULT_COMPONENT = 'div';

/**
 * Flex layout item component
 */
var FlexLayoutItem = function FlexLayoutItem(_ref) {
  var ComponentProp = _ref.as,
    justify = _ref.justify,
    align = _ref.align,
    order = _ref.order,
    className = _ref.className,
    children = _ref.children,
    props = Item_objectWithoutProperties(_ref, Item_excluded);
  var Component = ComponentProp || Item_DEFAULT_COMPONENT;
  var _useScssTheme = (0,useTheme/* useScssTheme */.W)(),
    styles = _useScssTheme.components.flexLayout.item;
  var justifySelf = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: justify
  });
  var alignSelf = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: align
  });
  var flexOrder = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: order,
    transform: orderTransform
  });
  var propArray = (0,react.useMemo)(function () {
    var properties = [];
    if (justifySelf) {
      properties.push({
        name: 'justify',
        value: justifySelf
      });
    }
    if (alignSelf) {
      properties.push({
        name: 'align',
        value: alignSelf
      });
    }
    if (flexOrder) {
      properties.push({
        name: 'order',
        value: flexOrder
      });
    }
    return properties;
  }, [alignSelf, justifySelf, flexOrder]);
  var _useGenerateProperty = (0,useGenerateProperty/* useGenerateProperty */.e)({
      props: propArray,
      name: 'flexLayoutItem',
      styles: styles
    }),
    mediaStyles = _useGenerateProperty.mediaStyles,
    vars = _useGenerateProperty.vars;
  return (0,emotion_react_browser_esm/* jsx */.Y)(Component, Item_extends({
    className: classnames_default()(styles.flexLayoutItem, mediaStyles, className),
    style: vars
  }, props), children);
};
try {
    // @ts-ignore
    FlexLayoutItem.displayName = "FlexLayoutItem";
    // @ts-ignore
    FlexLayoutItem.__docgenInfo = { "description": "Flex layout item component", "displayName": "FlexLayoutItem", "props": { "as": { "defaultValue": { value: "\"div\"" }, "description": "Element", "name": "as", "required": false, "type": { "name": "ElementType | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "children": { "defaultValue": null, "description": "Item content.", "name": "children", "required": false, "type": { "name": "ReactNode" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "justify": { "defaultValue": null, "description": "Main axis self alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis self alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "order": { "defaultValue": null, "description": "Order.", "name": "order", "required": false, "type": { "name": "AllowMedia<number> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/scss/FlexLayout/components/Item/index.tsx#FlexLayoutItem"] = { docgenInfo: FlexLayoutItem.__docgenInfo, name: "FlexLayoutItem", path: "src/components/scss/FlexLayout/components/Item/index.tsx#FlexLayoutItem" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/helpers/common/Placeholder.tsx
var Placeholder = __webpack_require__("./src/helpers/common/Placeholder.tsx");
;// CONCATENATED MODULE: ./.storybook/docgen/FlexLayout.tsx

var FlexLayoutProps = function FlexLayoutProps() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var FlexLayoutItemProps = function FlexLayoutItemProps() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["FlexLayoutProps", "FlexLayoutItemProps"]));
try {
    // @ts-ignore
    FlexLayoutProps.displayName = "FlexLayoutProps";
    // @ts-ignore
    FlexLayoutProps.__docgenInfo = { "description": "", "displayName": "FlexLayoutProps", "props": { "as": { "defaultValue": { value: "\"div\"" }, "description": "Element", "name": "as", "required": false, "type": { "name": "\"div\" | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "gap": { "defaultValue": null, "description": "gap settings", "name": "gap", "required": false, "type": { "name": "AllowMedia<ValueType> | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "wrap": { "defaultValue": null, "description": "Multiline mode.", "name": "wrap", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "children": { "defaultValue": null, "description": "children", "name": "children", "required": true, "type": { "name": "ReactNode" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "justify": { "defaultValue": null, "description": "Main axis alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/FlexLayout.tsx#FlexLayoutProps"] = { docgenInfo: FlexLayoutProps.__docgenInfo, name: "FlexLayoutProps", path: ".storybook/docgen/FlexLayout.tsx#FlexLayoutProps" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    FlexLayoutItemProps.displayName = "FlexLayoutItemProps";
    // @ts-ignore
    FlexLayoutItemProps.__docgenInfo = { "description": "", "displayName": "FlexLayoutItemProps", "props": { "as": { "defaultValue": { value: "\"div\"" }, "description": "Element", "name": "as", "required": false, "type": { "name": "\"div\" | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "children": { "defaultValue": null, "description": "Item content.", "name": "children", "required": false, "type": { "name": "ReactNode" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "justify": { "defaultValue": null, "description": "Main axis self alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis self alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "order": { "defaultValue": null, "description": "Order.", "name": "order", "required": false, "type": { "name": "AllowMedia<number> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/FlexLayout.tsx#FlexLayoutItemProps"] = { docgenInfo: FlexLayoutItemProps.__docgenInfo, name: "FlexLayoutItemProps", path: ".storybook/docgen/FlexLayout.tsx#FlexLayoutItemProps" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./src/components/scss/FlexLayout/FlexLayout.stories.mdx
function FlexLayout_stories_extends() { return FlexLayout_stories_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, FlexLayout_stories_extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */






const makeShortcode = name => function MDXDefaultShortcode(props) {
  console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
  return (0,esm/* mdx */.yg)("div", props);
};
const Story = makeShortcode("Story");
const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, FlexLayout_stories_extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Components / Scss / Helpers / FlexLayout",
    component: FlexLayout,
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "flexlayout"
  }, `FlexLayout`), (0,esm/* mdx */.yg)("p", null, `Компонент FlexLayout помогает строить сетки. Используется стандартный flex. По сути это React компонент, который позволяет задать сетку через props и с упрощённым API.`), (0,esm/* mdx */.yg)(Story, {
    name: "FlexLayout",
    args: {
      itemsCount: 5,
      cols: 3,
      gap: 8
    },
    argTypes: {
      itemsCount: {
        name: 'Items count (demo)',
        control: {
          type: 'range',
          min: 2,
          max: 16,
          step: 1
        }
      },
      gap: {
        name: 'gap',
        control: {
          type: 'range',
          min: 0,
          max: 48,
          step: 1
        }
      },
      wrap: {
        name: 'wrap',
        control: 'boolean'
      }
    },
    mdxType: "Story"
  }, ({
    itemsCount,
    ...props
  }) => {
    return (0,esm/* mdx */.yg)(FlexLayout, FlexLayout_stories_extends({}, props, {
      mdxType: "FlexLayout"
    }), new Array(itemsCount).fill('').map((_, index) => {
      index++;
      return (0,esm/* mdx */.yg)(FlexLayoutItem, {
        key: index,
        order: index === 2 ? -1 : undefined,
        mdxType: "FlexLayoutItem"
      }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
        mdxType: "Placeholder"
      }, "Item ", index));
    }));
  }), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    components: {
      FlexLayout: FlexLayoutProps,
      FlexLayoutItem: FlexLayoutItemProps
    },
    mdxType: "Props"
  }));
}
;
MDXContent.isMDXComponent = true;
const flexLayout = ({
  itemsCount,
  ...props
}) => {
  return (0,esm/* mdx */.yg)(FlexLayout, props, new Array(itemsCount).fill('').map((_, index) => {
    index++;
    return (0,esm/* mdx */.yg)(FlexLayoutItem, {
      key: index,
      order: index === 2 ? -1 : undefined
    }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Item ", index));
  }));
};
flexLayout.storyName = 'FlexLayout';
flexLayout.argTypes = {
  itemsCount: {
    name: 'Items count (demo)',
    control: {
      type: 'range',
      min: 2,
      max: 16,
      step: 1
    }
  },
  gap: {
    name: 'gap',
    control: {
      type: 'range',
      min: 0,
      max: 48,
      step: 1
    }
  },
  wrap: {
    name: 'wrap',
    control: 'boolean'
  }
};
flexLayout.args = {
  itemsCount: 5,
  cols: 3,
  gap: 8
};
flexLayout.parameters = {
  storySource: {
    source: '({\n  itemsCount,\n  ...props\n}) => {\n  return <FlexLayout {...props}>\n                {new Array(itemsCount).fill(\'\').map((_, index) => {\n      index++;\n      return <FlexLayoutItem key={index} order={index === 2 ? -1 : undefined}>\n                            <Placeholder>Item {index}</Placeholder>\n                        </FlexLayoutItem>;\n    })}\n            </FlexLayout>;\n}'
  }
};
const componentMeta = {
  title: 'Components / Scss / Helpers / FlexLayout',
  component: FlexLayout,
  includeStories: ["flexLayout"]
};
const mdxStoryNameToKey = {
  "FlexLayout": "flexLayout"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const FlexLayout_stories = (componentMeta);

/***/ }),

/***/ "./src/components/scss/GridLayout/GridLayout.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ GridLayout_stories),
  gridLayout: () => (/* binding */ gridLayout)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.bind.js
var es_function_bind = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__("./node_modules/classnames/index.js");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./src/helpers/scss/useCSSProperty.ts
var useCSSProperty = __webpack_require__("./src/helpers/scss/useCSSProperty.ts");
// EXTERNAL MODULE: ./src/helpers/scss/useGenerateProperty.ts
var useGenerateProperty = __webpack_require__("./src/helpers/scss/useGenerateProperty.ts");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js
var es_array_join = __webpack_require__("./node_modules/core-js/modules/es.array.join.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.is-integer.js
var es_number_is_integer = __webpack_require__("./node_modules/core-js/modules/es.number.is-integer.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
;// CONCATENATED MODULE: ./src/components/scss/GridLayout/helpers.ts






var colsTransform = function colsTransform(colsParam) {
  if (Array.isArray(colsParam)) return colsParam.map(function (val) {
    return Number.isInteger(val) ? "".concat(val, "fr") : val;
  }).join(' ');
  if (Number.isInteger(colsParam)) return "repeat(".concat(colsParam, ", 1fr)");
  return colsParam;
};
var rowsTransform = function rowsTransform(rowsParam) {
  if (Array.isArray(rowsParam)) return rowsParam.map(function (val) {
    return Number.isInteger(val) ? "".concat(val, "fr") : val;
  }).join(' ');
  if (Number.isInteger(rowsParam)) return "repeat(".concat(rowsParam, ", 1fr)");
  return rowsParam;
};
var gapTransform = function gapTransform(gapParam) {
  if (Array.isArray(gapParam)) return "".concat(gapParam[0], "px ").concat(gapParam[1], "px");
  return Number.isInteger(gapParam) ? "".concat(gapParam, "px") : gapParam;
};
// EXTERNAL MODULE: ./src/utils/scss/useTheme.ts
var useTheme = __webpack_require__("./src/utils/scss/useTheme.ts");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./src/components/scss/GridLayout/index.tsx





var _excluded = ["as", "cols", "gap", "rows", "justify", "align", "className", "children"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}








var DEFAULT_COMPONENT = 'div';

/**
 * Grid layout component
 */
var GridComponent = function GridComponent(_ref, ref) {
  var ComponentProp = _ref.as,
    _ref$cols = _ref.cols,
    cols = _ref$cols === void 0 ? 12 : _ref$cols,
    _ref$gap = _ref.gap,
    gap = _ref$gap === void 0 ? (0,scale/* scale */.h)(3) : _ref$gap,
    rows = _ref.rows,
    justify = _ref.justify,
    align = _ref.align,
    className = _ref.className,
    children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded);
  var Component = ComponentProp || DEFAULT_COMPONENT;
  var _useScssTheme = (0,useTheme/* useScssTheme */.W)(),
    styles = _useScssTheme.components.gridLayout.index;
  var gridTemplateColumns = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: cols,
    transform: colsTransform
  });
  var gridTemplateRows = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: rows,
    transform: rowsTransform
  });
  var gridGap = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: gap,
    transform: gapTransform
  });
  var justifyContent = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: justify
  });
  var alignItems = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: align
  });
  var propArray = (0,react.useMemo)(function () {
    var properties = [];
    if (gridTemplateColumns) properties.push({
      name: 'cols',
      value: gridTemplateColumns
    });
    if (gridTemplateRows) properties.push({
      name: 'rows',
      value: gridTemplateRows
    });
    if (gridGap) properties.push({
      name: 'gap',
      value: gridGap
    });
    if (justifyContent) properties.push({
      name: 'justify',
      value: justifyContent
    });
    if (alignItems) properties.push({
      name: 'align',
      value: alignItems
    });
    return properties;
  }, [alignItems, gridGap, gridTemplateColumns, gridTemplateRows, justifyContent]);
  var _useGenerateProperty = (0,useGenerateProperty/* useGenerateProperty */.e)({
      name: 'gridLayout',
      props: propArray,
      styles: styles
    }),
    mediaStyles = _useGenerateProperty.mediaStyles,
    vars = _useGenerateProperty.vars;
  return (0,emotion_react_browser_esm/* jsx */.Y)(Component, _extends({
    ref: ref,
    className: classnames_default()(styles.gridLayout, mediaStyles, className),
    style: vars
  }, props), children);
};
var GridLayout = /*#__PURE__*/(0,react.forwardRef)(GridComponent);

;// CONCATENATED MODULE: ./src/components/scss/GridLayout/components/Item/helpers.ts




var colTransform = function colTransform(colParam) {
  if (Array.isArray(colParam)) return "".concat(colParam[0], " / ").concat(colParam[1]);
  if (Number.isInteger(colParam)) return "span ".concat(colParam);
  return colParam;
};
var rowTransform = function rowTransform(rowParam) {
  if (Array.isArray(rowParam)) return "".concat(rowParam[0], " / ").concat(rowParam[1]);
  if (Number.isInteger(rowParam)) return "span ".concat(rowParam);
  return rowParam;
};
var orderTransform = function orderTransform(orderParam) {
  if (Number.isInteger(orderParam)) return "".concat(orderParam);
  return orderParam;
};
;// CONCATENATED MODULE: ./src/components/scss/GridLayout/components/Item/index.tsx





var Item_excluded = ["as", "col", "row", "justify", "align", "order", "className", "children"];
function Item_extends() {
  return Item_extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, Item_extends.apply(null, arguments);
}
function Item_objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = Item_objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function Item_objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}







var Item_DEFAULT_COMPONENT = 'div';
/**
 * Grid layout item component
 */
var GridLayoutItem = function GridLayoutItem(_ref) {
  var ComponentProp = _ref.as,
    col = _ref.col,
    row = _ref.row,
    justify = _ref.justify,
    align = _ref.align,
    order = _ref.order,
    className = _ref.className,
    children = _ref.children,
    props = Item_objectWithoutProperties(_ref, Item_excluded);
  var Component = ComponentProp || Item_DEFAULT_COMPONENT;
  var _useScssTheme = (0,useTheme/* useScssTheme */.W)(),
    styles = _useScssTheme.components.gridLayout.item;
  var gridColumn = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: col,
    transform: colTransform
  });
  var gridRow = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: row,
    transform: rowTransform
  });
  var justifySelf = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: justify
  });
  var alignSelf = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: align
  });
  var gridOrder = (0,useCSSProperty/* useCSSProperty */.Y)({
    value: order,
    transform: orderTransform
  });
  var propArray = (0,react.useMemo)(function () {
    var properties = [];
    if (gridColumn) {
      properties.push({
        name: 'col',
        value: gridColumn
      });
    }
    if (gridRow) {
      properties.push({
        name: 'row',
        value: gridRow
      });
    }
    if (justifySelf) {
      properties.push({
        name: 'justify',
        value: justifySelf
      });
    }
    if (alignSelf) {
      properties.push({
        name: 'align',
        value: alignSelf
      });
    }
    if (gridOrder) {
      properties.push({
        name: 'order',
        value: gridOrder
      });
    }
    return properties;
  }, [alignSelf, gridColumn, gridRow, justifySelf, gridOrder]);
  var _useGenerateProperty = (0,useGenerateProperty/* useGenerateProperty */.e)({
      props: propArray,
      name: 'gridLayoutItem',
      styles: styles
    }),
    mediaStyles = _useGenerateProperty.mediaStyles,
    vars = _useGenerateProperty.vars;
  return (0,emotion_react_browser_esm/* jsx */.Y)(Component, Item_extends({
    className: classnames_default()(styles.gridLayoutItem, mediaStyles, className),
    style: vars
  }, props), children);
};

try {
    // @ts-ignore
    __function.__docgenInfo = { "description": "Grid layout item component", "displayName": "GridLayoutItem", "props": { "as": { "defaultValue": { value: "\"div\"" }, "description": "Element", "name": "as", "required": false, "type": { "name": "ElementType | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "children": { "defaultValue": null, "description": "Item content.", "name": "children", "required": false, "type": { "name": "ReactNode" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "justify": { "defaultValue": null, "description": "Main axis self alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis self alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "row": { "defaultValue": null, "description": "Row settings.", "name": "row", "required": false, "type": { "name": "AllowMedia<ValueType> | undefined" } }, "col": { "defaultValue": null, "description": "Column settings.", "name": "col", "required": false, "type": { "name": "AllowMedia<ValueType> | undefined" } }, "order": { "defaultValue": null, "description": "Order.", "name": "order", "required": false, "type": { "name": "AllowMedia<number> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/scss/GridLayout/components/Item/index.tsx#GridLayoutItem"] = { docgenInfo: __function.__docgenInfo, name: "GridLayoutItem", path: "src/components/scss/GridLayout/components/Item/index.tsx#GridLayoutItem" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/helpers/common/Placeholder.tsx
var Placeholder = __webpack_require__("./src/helpers/common/Placeholder.tsx");
;// CONCATENATED MODULE: ./.storybook/docgen/GridLayout.tsx

var GridLayoutProps = function GridLayoutProps() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var GridLayoutItemProps = function GridLayoutItemProps() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["GridLayoutProps", "GridLayoutItemProps"]));
try {
    // @ts-ignore
    GridLayoutProps.displayName = "GridLayoutProps";
    // @ts-ignore
    GridLayoutProps.__docgenInfo = { "description": "", "displayName": "GridLayoutProps", "props": { "as": { "defaultValue": { value: "\"div\"" }, "description": "Element", "name": "as", "required": false, "type": { "name": "\"div\" | undefined" } }, "cols": { "defaultValue": null, "description": "Columns settings.", "name": "cols", "required": false, "type": { "name": "AllowMedia<ValueType> | undefined" } }, "gap": { "defaultValue": null, "description": "Gaps settings.", "name": "gap", "required": false, "type": { "name": "AllowMedia<ValueType> | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "rows settings", "name": "rows", "required": false, "type": { "name": "AllowMedia<ValueType> | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "justify": { "defaultValue": null, "description": "Main axis alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/GridLayout.tsx#GridLayoutProps"] = { docgenInfo: GridLayoutProps.__docgenInfo, name: "GridLayoutProps", path: ".storybook/docgen/GridLayout.tsx#GridLayoutProps" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GridLayoutItemProps.displayName = "GridLayoutItemProps";
    // @ts-ignore
    GridLayoutItemProps.__docgenInfo = { "description": "", "displayName": "GridLayoutItemProps", "props": { "as": { "defaultValue": { value: "\"div\"" }, "description": "Element", "name": "as", "required": false, "type": { "name": "\"div\" | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "children": { "defaultValue": null, "description": "Item content.", "name": "children", "required": false, "type": { "name": "ReactNode" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "justify": { "defaultValue": null, "description": "Main axis self alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis self alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<DirectionType> | undefined" } }, "row": { "defaultValue": null, "description": "Row settings.", "name": "row", "required": false, "type": { "name": "AllowMedia<ValueType> | undefined" } }, "col": { "defaultValue": null, "description": "Column settings.", "name": "col", "required": false, "type": { "name": "AllowMedia<ValueType> | undefined" } }, "order": { "defaultValue": null, "description": "Order.", "name": "order", "required": false, "type": { "name": "AllowMedia<number> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/GridLayout.tsx#GridLayoutItemProps"] = { docgenInfo: GridLayoutItemProps.__docgenInfo, name: "GridLayoutItemProps", path: ".storybook/docgen/GridLayout.tsx#GridLayoutItemProps" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./src/components/scss/GridLayout/GridLayout.stories.mdx
function GridLayout_stories_extends() { return GridLayout_stories_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, GridLayout_stories_extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */







const makeShortcode = name => function MDXDefaultShortcode(props) {
  console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
  return (0,esm/* mdx */.yg)("div", props);
};
const Story = makeShortcode("Story");
const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, GridLayout_stories_extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Components / Scss / Helpers / GridLayout",
    component: GridLayout,
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "gridlayout"
  }, `GridLayout`), (0,esm/* mdx */.yg)("p", null, `Компонент GridLayout помогает строить сетки. Используется стандартный grid. По сути это React компонент, который позволяет задать сетку через props и с упрощённым API.`), (0,esm/* mdx */.yg)(Story, {
    name: "GridLayout",
    args: {
      itemsCount: 5,
      cols: 3,
      gap: 8
    },
    argTypes: {
      itemsCount: {
        name: 'Items count (demo)',
        control: {
          type: 'range',
          min: 2,
          max: 16,
          step: 1
        }
      },
      cols: {
        name: 'cols',
        control: {
          type: 'range',
          min: 2,
          max: 16,
          step: 1
        }
      },
      gap: {
        name: 'gap',
        control: {
          type: 'range',
          min: 0,
          max: 48,
          step: 1
        }
      }
    },
    mdxType: "Story"
  }, ({
    itemsCount,
    ...props
  }) => {
    return (0,esm/* mdx */.yg)(GridLayout, GridLayout_stories_extends({}, props, {
      mdxType: "GridLayout"
    }), new Array(itemsCount).fill('').map((_, index) => {
      index++;
      return (0,esm/* mdx */.yg)(GridLayoutItem, {
        key: index,
        mdxType: "GridLayoutItem"
      }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
        mdxType: "Placeholder"
      }, "Item ", index));
    }));
  }), (0,esm/* mdx */.yg)("h2", {
    "id": "props"
  }, `Props`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    components: {
      GridLayout: GridLayoutProps,
      GridLayoutItem: GridLayoutItemProps
    },
    mdxType: "Props"
  }));
}
;
MDXContent.isMDXComponent = true;
const gridLayout = ({
  itemsCount,
  ...props
}) => {
  return (0,esm/* mdx */.yg)(GridLayout, props, new Array(itemsCount).fill('').map((_, index) => {
    index++;
    return (0,esm/* mdx */.yg)(GridLayoutItem, {
      key: index
    }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Item ", index));
  }));
};
gridLayout.storyName = 'GridLayout';
gridLayout.argTypes = {
  itemsCount: {
    name: 'Items count (demo)',
    control: {
      type: 'range',
      min: 2,
      max: 16,
      step: 1
    }
  },
  cols: {
    name: 'cols',
    control: {
      type: 'range',
      min: 2,
      max: 16,
      step: 1
    }
  },
  gap: {
    name: 'gap',
    control: {
      type: 'range',
      min: 0,
      max: 48,
      step: 1
    }
  }
};
gridLayout.args = {
  itemsCount: 5,
  cols: 3,
  gap: 8
};
gridLayout.parameters = {
  storySource: {
    source: '({\n  itemsCount,\n  ...props\n}) => {\n  return <GridLayout {...props}>\n                {new Array(itemsCount).fill(\'\').map((_, index) => {\n      index++;\n      return <GridLayoutItem key={index}>\n                            <Placeholder>Item {index}</Placeholder>\n                        </GridLayoutItem>;\n    })}\n            </GridLayout>;\n}'
  }
};
const componentMeta = {
  title: 'Components / Scss / Helpers / GridLayout',
  component: GridLayout,
  includeStories: ["gridLayout"]
};
const mdxStoryNameToKey = {
  "GridLayout": "gridLayout"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const GridLayout_stories = (componentMeta);

/***/ }),

/***/ "./src/components/scss/Section/Section.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  container: () => (/* binding */ container),
  "default": () => (/* binding */ Section_stories),
  knobs: () => (/* binding */ knobs)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.bind.js
var es_function_bind = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./src/components/scss/Container/index.tsx
var Container = __webpack_require__("./src/components/scss/Container/index.tsx");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./src/components/scss/Section/index.tsx





var _excluded = ["container", "containerClassName", "children"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}



/**
 * Component for creating page sections.
 */

var Section = /*#__PURE__*/(0,react.forwardRef)(function (_ref, ref) {
  var _ref$container = _ref.container,
    container = _ref$container === void 0 ? true : _ref$container,
    containerClassName = _ref.containerClassName,
    children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded);
  return (0,emotion_react_browser_esm/* jsx */.Y)("section", _extends({
    ref: ref
  }, props), container ? (0,emotion_react_browser_esm/* jsx */.Y)(Container/* Container */.m, {
    className: containerClassName
  }, children) : children);
});

try {
    // @ts-ignore
    ForwardRefExoticComponent.__docgenInfo = { "description": "Component for creating page sections.", "displayName": "Section", "props": { "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "container": { "defaultValue": { value: true }, "description": "Wrap content in container.", "name": "container", "required": false, "type": { "name": "boolean | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "containerClassName": { "defaultValue": null, "description": "Container className", "name": "containerClassName", "required": false, "type": { "name": "string | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/scss/Section/index.tsx#Section"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: "Section", path: "src/components/scss/Section/index.tsx#Section" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/helpers/common/Placeholder.tsx
var Placeholder = __webpack_require__("./src/helpers/common/Placeholder.tsx");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
;// CONCATENATED MODULE: ./.storybook/docgen/SectionScss.tsx

var SectionProps = function SectionProps() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["SectionProps"]));
try {
    // @ts-ignore
    SectionProps.displayName = "SectionProps";
    // @ts-ignore
    SectionProps.__docgenInfo = { "description": "", "displayName": "SectionProps", "props": { "container": { "defaultValue": null, "description": "Wrap content in container.", "name": "container", "required": false, "type": { "name": "boolean | undefined" } }, "containerClassName": { "defaultValue": null, "description": "Container className", "name": "containerClassName", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/SectionScss.tsx#SectionProps"] = { docgenInfo: SectionProps.__docgenInfo, name: "SectionProps", path: ".storybook/docgen/SectionScss.tsx#SectionProps" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./src/components/scss/Section/Section.stories.mdx
function Section_stories_extends() { return Section_stories_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, Section_stories_extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */






const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, Section_stories_extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Components / Scss / Helpers / Section",
    component: Section,
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "section"
  }, `Section`), (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Knobs",
    args: {
      container: true
    },
    mdxType: "Story"
  }, args => (0,esm/* mdx */.yg)(Section, Section_stories_extends({}, args, {
    mdxType: "Section"
  }), (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Here goes section content"))), (0,esm/* mdx */.yg)("p", null, `Обычно при разметке основного контента страницы он делится на разделы через тег section. Для упрощения этого процесса предусмотрен компонент `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Section`), `.`), (0,esm/* mdx */.yg)("p", null, `💬 В документации используется компонент `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Placeholder`), ` чисто в демонстративных целях – визуально показать бокс контента. Это вспомогательный компонент GDS и на проекте его не будет.`), (0,esm/* mdx */.yg)("h2", {
    "id": "props"
  }, `Props`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    components: {
      Section: SectionProps
    },
    mdxType: "Props"
  }), (0,esm/* mdx */.yg)("h2", {
    "id": "use-cases"
  }, `Use cases`), (0,esm/* mdx */.yg)("h3", {
    "id": "container"
  }, `Container`), (0,esm/* mdx */.yg)("p", null, `Внутри каждого раздела может быть или не быть контейнер.`), (0,esm/* mdx */.yg)("p", null, `Величина контейнера, поля и отступы собираются с помощью миксина `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `@container`), `.`), (0,esm/* mdx */.yg)(dist_esm/* Preview */.lN, {
    mdxType: "Preview"
  }, (0,esm/* mdx */.yg)(dist_esm/* Story */.gG, {
    name: "Container",
    mdxType: "Story"
  }, (0,esm/* mdx */.yg)(react.Fragment, null, (0,esm/* mdx */.yg)(Section, {
    style: {
      marginBottom: (0,scale/* scale */.h)(2)
    },
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Section with container")), (0,esm/* mdx */.yg)(Section, {
    container: false,
    mdxType: "Section"
  }, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, {
    mdxType: "Placeholder"
  }, "Section without container"))))));
}
;
MDXContent.isMDXComponent = true;
const knobs = args => (0,esm/* mdx */.yg)(Section, args, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Here goes section content"));
knobs.storyName = 'Knobs';
knobs.args = {
  container: true
};
knobs.parameters = {
  storySource: {
    source: 'args => <Section {...args}>\n            <Placeholder>Here goes section content</Placeholder>\n        </Section>'
  }
};
const container = () => (0,esm/* mdx */.yg)(react.Fragment, null, (0,esm/* mdx */.yg)(Section, {
  style: {
    marginBottom: (0,scale/* scale */.h)(2)
  }
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Section with container")), (0,esm/* mdx */.yg)(Section, {
  container: false
}, (0,esm/* mdx */.yg)(Placeholder/* Placeholder */.O, null, "Section without container")));
container.storyName = 'Container';
container.parameters = {
  storySource: {
    source: '<>\n            <Section style={{\n    marginBottom: scale(2)\n  }}>\n                <Placeholder>Section with container</Placeholder>\n            </Section>\n            <Section container={false}>\n                <Placeholder>Section without container</Placeholder>\n            </Section>\n        </>'
  }
};
const componentMeta = {
  title: 'Components / Scss / Helpers / Section',
  component: Section,
  includeStories: ["knobs", "container"]
};
const mdxStoryNameToKey = {
  "Knobs": "knobs",
  "Container": "container"
};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const Section_stories = (componentMeta);

/***/ }),

/***/ "./stories/design/button.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Design / Button",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "button-"
  }, `Button 🧱🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Дизайнер рисует кнопки проекта на фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Button`), ` на странице `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Ui-kit`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Должно быть отрисовано:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Все темы в различных состояниях`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Размеры под основную тему`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/buttons/frame.png",
    alt: "\u0424\u0440\u0435\u0439\u043C Button",
    width: "700"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Фрейм Button`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все остальные вариации будут созданы на фронтенде автоматически: блочные кнопки, иконочные, многострочные, сочетания каждой темы с размерами и т.д. Они доступны для демонстрации через автокит (смотрите автокит `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Button`), `).`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/buttons/result.png",
    alt: "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0432\u0430\u0440\u0438\u0430\u0446\u0438\u0438",
    width: "700"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Доступные вариации`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Ничто не мешает отрисовать и другие вариации. Например, блочную и многострочную, чтобы использовать их в макетах.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Также отдельно нужно отрисовать круглую иконочную кнопку, если для вариации без текста нужно применить полное скругление.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "themes"
  }, `Themes`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Тема`), ` — это единое стилистическое решение в нескольких состояниях.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🏆 `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `primary`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `secondary`), ` – хорошие названия для тем.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Всего доступно 5 состояний:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `default`), ` – обычное`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `hover`), ` – при наведении`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `active`), ` – при нажатии`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `disabled`), ` – заблокировано`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `focus`), ` – фокус с клавиатуры`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Обязательными для определения дизайнером являются 3 из них: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `default`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `hover`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `disabled`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Состояние `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `active`), ` по умолчанию совпадает с `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `hover`), `, а `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `focus`), ` наследует состояние фокуса всего проекта (обычно прямоугольный бокс).`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "sizes"
  }, `Sizes`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Дизайнер рисует размеры на примере основной темы. Эти размеры будут применены ко всем темам. Обычно их три, где средняя является основной, но технических ограничений на количество нет.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🏆 `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `lg`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `md`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `sm`), ` – хорошие названия для размеров.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `При изменении размера в кнопке могут меняться следующие стили:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Типографика`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Высота`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Горизонтальные поля`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Размер иконки`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Отступ между иконкой и текстом`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Кнопки делаются в Auto Layout.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Поскольку Auto Layout может автоматически менять ширину, в кнопку лучше сразу положить иконку слева и справа от текста и скрыть. Это позволит гибко использовать компонентный подход.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Иконки и текст выравниваются по вертикальному центру, тексту задаётся стиль из типографики.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В настройках задаётся фиксированная высота, горизонтальные отступы и отступ между внутренними элементами.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/buttons/auto-layout.png",
    alt: "\u041F\u0430\u043D\u0435\u043B\u044C Auto Layout \u0432 Figma",
    width: "400"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Панель Auto Layout в Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Блочные кнопки делаются по старому принципу без Auto Layout.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для задания типографики используются стили из фрейма `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Typography`), `. Обычно это отдельные переменные под каждый размер без `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), ` версии (т.е. статичные).`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `На примере GDS:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `buttonLg`), ` – большая`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `buttonMd`), ` – средняя`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `buttonSm`), ` – малая`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Design / Button',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/design/colors.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Design / Colors",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "colors-"
  }, `Colors ✨🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `На фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Colors`), ` определяются цвета проекта, получаемые из построенных палитр.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Структура фрейма Colors`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `На фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Colors`), ` может быть любое разумное количество цветов. Дизайнер предполагает, где в проекте используется цвет, добавляет фрейм и дает название переменной.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Название переменной пишется текстом на цвете. В слоях ничего не переименовывается.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Цвета группируются визуально по принципу «Нейтральные» и «Функциональные»:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/colors/neutrals.png",
    alt: "\u041D\u0435\u0439\u0442\u0440\u0430\u043B\u044C\u043D\u044B\u0435 \u0446\u0432\u0435\u0442\u0430"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Нейтральные цвета`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/colors/functional.png",
    alt: "\u0424\u0443\u043D\u043A\u0446\u0438\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u0435 \u0446\u0432\u0435\u0442\u0430"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Функциональные цвета`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🏆 У цвета есть поле описания. Оно опционально, но его можно заполнить, чтобы предоставить контекст использования переменных другим дизайнерам/разработчикам.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Функциональные цвета можно разбить на группы:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `основные`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `функции`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `уникальные`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Основные цвета`), ` строятся на основании определённых ранее палитр. Это большинство цветов проекта, всё остальное – это уже исключения.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Цвета функций`), ` – это error, success и warning. Это всегда красный, зелёный и жёлтый соответственно. Особенность этих переменных в том, что они ассоциируются с определёнными цветами (красный, зелёный и жёлтый), что делает их исключениями – они могут браться не из палитры. Однако если в палитре присутствует оттенок из этих трёх цветов, цвет функции лучше подбирать из палитры.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/colors/functions.png",
    alt: "\u0426\u0432\u0435\u0442\u0430 \u0444\u0443\u043D\u043A\u0446\u0438\u0439",
    width: "550"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Цвета функций`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Единственным обязательным цветом является error, т.к. на всех проектах есть валидация, а соответственно сообщения об ошибках. Это справедливо даже в тех случаях, когда ошибки не отражены в макетах.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Уникальные цвета`), ` – это прочие цвета-исключения. Например, разноцветные шильдики, не несущие за собой определённый цвет.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/colors/tags.png",
    alt: "\u0426\u0432\u0435\u0442\u0430 \u0448\u0438\u043B\u044C\u0434\u0438\u043A\u043E\u0432",
    width: "650"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Цвета шильдиков`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `После определения цветов на фреймах они становятся автоматически доступны разработчикам в виде переменных, а дизайнеры выделяют их в стили Figma. В итоге оба отдела общаются на одном языке, а изменение дизайнером стиля приводит к мгновенному изменению этого цвета на проекте (после выкачивания токенов).`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/colors/figma-styles.png",
    alt: "\u0421\u0442\u0438\u043B\u0438 \u0446\u0432\u0435\u0442\u043E\u0432 \u0432 Figma",
    width: "250"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Стили цветов в Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "gradients"
  }, `Gradients`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `GDS предоставляет поддержку трех видов градиентов:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Линейный (Linear)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Радиальный (Radial)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Угловой (Angular)`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Линейный и угловой градиенты имеют полную поддержку. Радиальные градиенты имеют ограничение в виде угла наклона градиента, так как `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `radial-gradient`), ` не позволяет задавать этот параметр напрямую. В результате, градиенты должны реализовываться строго под углом `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `0deg`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Важно отметить, что все остальные типы градиентов в файле `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `token.json`), ` будут иметь пустое значение.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "variables-names"
  }, `Variables names`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Задача дизайнера не только подобрать цвета, но и присвоить им переменные. Это делается во фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Colors`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Правила:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переменные используют формат `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "li",
    "href": "https://ru.wikipedia.org/wiki/CamelCase",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `lowerCamelCase`), `: первое слово переменной начинается со строчной, каждое последующее — с прописной. Несколько слов пишутся слитно без пробела, дефиса или нижнего подчеркивания.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Мы не используем транслитерацию — все слова пишутся на английском.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Идеальные имена функциональных переменных не используют в обозначениях названия цветов и не содержат привязки к семантике, т.к. в первом случае название может потерять смысл при изменении значения, а во втором – при добавлении новой функции к тому же цвету.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ h2Grey`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ paragraphBlue70`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ Black_button`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ titlePromo`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ link`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ dark`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для группы нейтральных цветов всё проще – нейминги строятся на градации тонов (соответствую значениям из палитры).В нейтральных переменных в нейминге нужно придерживаться градации тонов: grey0, grey20, grey40... При этом не стоит выносить сразу все – это создаёт проблему с переизбытком цветов, которую мы как раз пытаемся решить.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Системные цвета `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `black`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `white`), ` заносятся в нейтральные оттенки всегда и не участвуют в палитрах.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Также в нейтральных цветах могут быть полупрозрачные вариации, построенные на цветах палитры с применённым альфа-каналом. Примером может служить подложка у попапов – переменная `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `fade`), ` в GDS.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Крайне не рекомендуется изменять имена переменных после первого экспорта токенов. Подобное изменение повлечёт за собой необходимость разработчику вручную править все вхождения этих переменных. Если имя всё-таки нужно изменить, об этом стоит уведомить разработчика.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Design / Colors',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/design/icons.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Design / Icons",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "icons-"
  }, `Icons ✨🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все используемые на проекте иконки выносятся на фрейм `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Icons`), ` и разбиваются по группам. Эти иконки становятся доступны дизайнерам через стили и разработчикам, т.к. они автоматически выкачиваются на проект.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Иконки экспортируются в квадратах указанных размеров.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Каждая иконка состоит из векторных слоев и обёртки-компонента.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/icons/structure.png",
    alt: "\u0421\u0442\u0440\u0443\u043A\u0442\u0443\u0440\u0430 \u0444\u0440\u0435\u0439\u043C\u0430 Icons",
    width: "300"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Структура фрейма Icons`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Иконки должны быть сделаны с использованием параметра fill. Мы не используем аутлайновые иконки с параметром stroke, т.к. смешение двух видов иконок приводит к невозможности гибкой стилизации на разработке.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Строковые слои можно объединить в Union Selection и не применять к ним Outline Stroke или Flatten. Union на экспорте обеспечит иконке правильную заливку, оставляя оригинал иконки внутри себя:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/icons/union.png",
    alt: "\u041E\u0431\u044A\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u0435 \u0441\u043B\u043E\u0451\u0432 \u0447\u0435\u0440\u0435\u0437 Union",
    width: "300"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Объединение слоёв через Union`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `При дальнейшем редактировании к оригиналу всегда можно вернуться и что-либо подправить. Это работает только для областей с одним цветом заливки.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "sizes"
  }, `Sizes`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Иконка должна заключаться в строгий квадрат — это гарантирует правильное отображение иконки в макетах и на разработке.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Размеры квадратов всегда соответствуют системе спейсингов.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/spacings/scale.png",
    alt: "\u0428\u043A\u0430\u043B\u044B minor \u0438 major",
    width: "800"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Шкалы minor и major`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🏆 Практически в любой системе можно обойтись максимум тремя размерами иконок.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Иконки рисуются на базе 24px квадрата и имеют форму прямоугольника или круга:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/icons/forms.png",
    alt: "\u0424\u043E\u0440\u043C\u044B \u0438\u043A\u043E\u043D\u043E\u043A",
    width: "400"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Формы иконок`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Строго соблюдать сетку выше не следует, нужно больше ориентироваться на визуальную оценку. Сетка лишь даёт подсказку.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "variables-names"
  }, `Variables names`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Задача дизайнера не только отрисовать иконки, но и присвоить им переменные.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Правила:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переменные используют формат `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "li",
    "href": "https://ru.wikipedia.org/wiki/CamelCase",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `lowerCamelCase`), `: первое слово переменной начинается со строчной, каждое последующее — с прописной. Несколько слов пишутся слитно без пробела, дефиса или нижнего подчеркивания.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Мы не используем транслитерацию — все слова пишутся на английском.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/icons/names.png",
    alt: "\u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u043D\u0435\u0439\u043C\u0438\u043D\u0433\u0430",
    width: "600"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Система нейминга`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ idea`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ strelkaGalkaRight`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ lamp`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ closed`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ shevronRight или shevron/right`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "grouping"
  }, `Grouping`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Иконки разбиваются на группы в зависимости от места, где будут использоваться.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В GDS использованы группы `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `small`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `medium`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `large`), `, которые соответствуют квадратам 16, 24 и 32px. Это просто пример, ничто не мешает дизайнеру создать группу `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `catalog`), `, в которой будут лежать иконки для каталога.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/icons/groups.png",
    alt: "\u0412\u044B\u0434\u0435\u043B\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F",
    width: "400"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Выделение групп`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "recommendations"
  }, `Recommendations`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Заносить в кит максимальное кол-во используемых иконок. Это значительно ускоряет процесс разработки.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Хорошо когда в ките одинаковая логика иконок: стиль, толщина линий, цвета, размеры, расположение, скругление углов.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Одноцветные иконки состоят из одного слоя, если это возможно.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Границы объектов привязываются к пиксельной сетке.`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Design / Icons',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/design/layout.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Design / Layout",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "layout-"
  }, `Layout ✨🧱🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Фрейм `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Layout`), ` определяет основную сетку и брейкпоинты проекта.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/frame.png",
    alt: "\u0424\u0440\u0435\u0439\u043C Layout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Фрейм Layout`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Проект содержит 9 брейкпоинтов, на которых возможны изменения в сетке. Кол-во брейкпоинтов не означает необходимость отрисовки макетов под каждый – они определяют набор точек, на которых разработчик может осуществить переход.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `На каждом брейкпоинте определяется:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `значение брейкпоинта`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `число колонок`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `отступы между колонками`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `ширина контейнера`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `выравнивание контейнера`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `поля`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Количество брейкпоинтов менять нельзя, т.к. дизайнер не задаёт имена переменных, и они зашиваются со стороны системы в расчёте на то, что их будет ровно 9.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `При токенизации значения берутся из фактического размера прямоугольников и фреймов, так что дизайнер следит, чтобы границы фреймов соответствовали значению брейкпоинта.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/breakpoint-good.png",
    alt: "\u041F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E: \u0440\u0430\u0437\u043C\u0435\u0440 \u0444\u0440\u0435\u0439\u043C\u0430 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u0440\u0435\u0439\u043A\u043F\u043E\u0438\u043D\u0442\u0443"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Правильно: размер фрейма соответствует брейкпоинту`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/breakpoint-bad.png",
    alt: "\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E: \u0440\u0430\u0437\u043C\u0435\u0440 \u0444\u0440\u0435\u0439\u043C\u0430 \u0431\u043E\u043B\u044C\u0448\u0435 \u0431\u0440\u0435\u0439\u043A\u043F\u043E\u0438\u043D\u0442\u0430"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Неправильно: размер фрейма больше брейкпоинта`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Стили сетки в Figma должны соответствовать тому, что нарисовано на брейкпоинте:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/breakpoint-grid.png",
    alt: "\u0417\u0430\u0434\u0430\u043D\u043D\u044B\u0439 \u0441\u0442\u0438\u043B\u044C \u0434\u043B\u044F \u0441\u0435\u0442\u043A\u0438"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Заданный стиль для сетки`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "container-usage"
  }, `Container usage`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Самый большой брейкпоинт определяет его поведение на больших разрешениях. На примере GDS, контейнер фиксируется по ширине и выравнивается по центру.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Наличие контейнера определяется по значению `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `auto`), ` у элемента `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `padding`), `. Контейнер можно центрировать или выравнять по левому краю. Без указания `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `auto`), ` макет становится полностью резиновый.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/container-center.png",
    alt: "\u0426\u0435\u043D\u0442\u0440\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0439 \u043A\u043E\u043D\u0442\u0435\u0439\u043D\u0435\u0440"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Центрированный контейнер`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/container-left.png",
    alt: "\u0411\u043E\u043A\u043E\u0432\u043E\u0439 \u043A\u043E\u043D\u0442\u0435\u0439\u043D\u0435\u0440"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Боковой контейнер`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/container-none.png",
    alt: "\u0411\u0435\u0437 \u043A\u043E\u043D\u0442\u0435\u0439\u043D\u0435\u0440\u0430"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Без контейнера`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "subgrids"
  }, `Subgrids`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Система позволяет строить сетку внутри колонок. Нарисуем нестандартный блок:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/uncommon-grid-1.png",
    alt: "\u0428\u0430\u0433 1"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Шаг 1`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `На первый взгляд, он не попадает в сетку, но рассмотрим его внимательнее — левая колонка занимает ровно 1/5 от ширины блока:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/uncommon-grid-2.png",
    alt: "\u0428\u0430\u0433 2"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Шаг 2`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Если разбить этот контейнер на две части, справа получится 4/5:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/uncommon-grid-3.png",
    alt: "\u0428\u0430\u0433 3"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Шаг 3`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В правой части можно создать фрейм и задать ему свою систему колонок. Например, 6:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/uncommon-grid-4.png",
    alt: "\u0428\u0430\u0433 4"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Шаг 4`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `По этим колонкам можно построить дополнительные блоки:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/layout/uncommon-grid-5.png",
    alt: "\u0428\u0430\u0433 5"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Шаг 5`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Таким образом мы получаем нестандартный блок, который разработчик сможет с лёгкостью воспроизвести в коде.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Design / Layout',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/design/shadows.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Design / Shadows",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "shadows-"
  }, `Shadows ✨🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Тени проекта определяются на фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Shadows`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/shadows/structure.png",
    alt: "\u0421\u0442\u0440\u0443\u043A\u0442\u0443\u0440\u0430 \u0444\u0440\u0435\u0439\u043C\u0430 Shadows",
    width: "600"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Структура фрейма Shadows`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Внутри фрейма может быть любое разумное количество теней.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/shadows/frame.png",
    alt: "\u0424\u0440\u0435\u0439\u043C Shadows",
    width: "600"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Фрейм Shadows`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Дизайнер предполагает, где в проекте используется тень, добавляет фрейм и присваивает название переменной.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Название переменной пишется текстом на блоке. В слоях ничего не переименовывается.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Тени заносятся в стили эффектов Figma.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/shadows/styles.png",
    alt: "\u0421\u0442\u0438\u043B\u0438 Figma",
    width: "250"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Стили Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "variables-names"
  }, `Variables names`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Задача дизайнера не только подобрать тени, но и присвоить им переменные.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Правила:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переменные используют формат `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "li",
    "href": "https://ru.wikipedia.org/wiki/CamelCase",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `lowerCamelCase`), `: первое слово переменной начинается со строчной, каждое последующее — с прописной. Несколько слов пишутся слитно без пробела, дефиса или нижнего подчеркивания.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Мы не используем транслитерацию — все слова пишутся на английском.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ shadow1`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ SmallShadow`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ super-inside-btn`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ big`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ small`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ inner`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Design / Shadows',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/design/spacings.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Design / Spacings",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "spacings-️"
  }, `Spacings ⚙️`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Мы применили нелинейную шкалу для отступов и убрали ограничения по набору значений.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/spacings/scale.png",
    alt: "\u0428\u043A\u0430\u043B\u044B minor \u0438 major",
    width: "800"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Шкалы minor и major`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Шкала состоит из двух участков — `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `minor`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `major`), `. Минорная шкала имеет кратность 4px, мажорная — 8px. Мажорная шкала не ограничена в значениях, минорная определена только до 40px.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Общее правило:`), ` обычно используется `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `major`), `, но на значениях, меньших 40px может применяться `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `minor`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `На этапе разработки определённые дизайнером значения заменятся на использование хелпера `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `scale`), `, в который передаётся множитель, а второй аргумент `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `true`), ` активирует минорную шкалу.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Примеры:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `4px – `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(1, true)`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `16px – `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(2)`), ` или `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(4, true)`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `40px – `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(5)`), ` или `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(10, true)`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `64px – `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(8)`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `96px – `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(12)`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В случае, если клиент приходит со своим дизайном, базовый шаг сетки может быть равен 10. В таком случае хелпер можно переопределить с новым значением, а минорный шаг станет равен 5. Логика всей системы при этом остаётся прежней.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "vertical-rhytm"
  }, `Vertical rhytm`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все отступы внутри макета определяются конечными отступами от блоков.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/spacings/product-card.jpg",
    alt: "\u041E\u0442\u0441\u0442\u0443\u043F\u044B \u043D\u0430 \u043F\u0440\u0438\u043C\u0435\u0440\u0435 \u043A\u0430\u0440\u0442\u043E\u0447\u043A\u0438 \u0442\u043E\u0432\u0430\u0440\u0430",
    width: "400"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Отступы на примере карточки товара`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Базовые линии текста могут не попадать в вертикальную сетку макета — это нормально. Важно сохранять отступы между элементами, кратными 4 или 8:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/spacings/text.png",
    alt: "\u0412\u044B\u0440\u0430\u0432\u043D\u0438\u0432\u0430\u043D\u0438\u0435 \u0442\u0435\u043A\u0441\u0442\u0430 \u0432 Figma",
    width: "400"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Выравнивание текста в Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "recommendations"
  }, `Recommendations`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Соблюдайте единство в отступах в одинаковых местах.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Не изменяйте вручную высоту текстовых блоков — это затруднит работу разработчика.`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Design / Spacings',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/design/typography.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Design / Typography",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "typography-️"
  }, `Typography ✨⚙️🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Фрейм `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Typography`), ` Figma хранит данные о типографике проекта. Они могут быть синхронизированы с разработкой через дизайн-токены. Решение диктует строгость в использовании стилей, экономит время разработки и упрощает корректировку значений.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/typography/frame.png",
    alt: "\u0424\u0440\u0435\u0439\u043C Typography",
    width: "600"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Фрейм Typography`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Дизайнер подбирает типографику и меняет параметры по предложенному шаблону. Новые переменные добавляются в конец списка, соблюдая оригинальную вложенность и именование слоев. Из подобранных значений дизайнер создает текстовые стили Figma и использует их на проекте.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "frame-structure"
  }, `Frame structure`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Синим цветом обозначены слои, в которые дизайнер вносит изменения.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/typography/structure.png",
    alt: "\u0421\u0442\u0440\u0443\u043A\u0442\u0443\u0440\u0430 \u0444\u0440\u0435\u0439\u043C\u0430 Typography",
    width: "600"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Структура фрейма Typography`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `description`), ` – вспомогательный фрейм для подписей, он не экспортируется.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `breakpoints`), ` задаёт точки, которым соответствуют стили из фреймов `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `desktop`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Названия переменных во фреймах `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `desktop`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), ` должны совпадать. Допускается, что во фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), ` отсутствуют переменные,
которые есть в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `desktop`), ` – это делает размер фиксированным.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "fluid-typography"
  }, `Fluid typography`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `По умолчанию для текста на проектах применяется плавное изменение размера кегля между двумя определёнными брейкпоинтами. Вне этого диапазона размер фиксируется, чтобы избежать чрезмерного уменьшения/увеличения.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Брейкпоинты указываются во фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `breakpoints`), `. Для GDS это `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `1440`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `768`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Число брейкпоинтов более 2 не поддерживается.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `При разрешении экрана 1920`), ` пользователю отобразятся размеры из набора фрейма `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `desktop`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `При разрешении экрана 375`), ` пользователю отобразятся размеры из набора фрейма `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `При разрешении экрана 960 или 1280`), ` пользователю отобразятся автоматически подобранные значения в интервале между `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `768`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `1440`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 Если вам по какой-то причине не нужно плавное изменение шрифта, то его можно отключить на разработке либо полностью, либо для отдельных стилей. Уведомите об этом разработчика.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "variables-names"
  }, `Variables names`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/typography/variables.png",
    alt: "\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u044F \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0445",
    width: "450"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Наименования переменных`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для проекта нам требуется минимальный набор типографических переменных:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `h1, h2, h3, h4, h5, h6`), ` — стили заголовков`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `subheading`), ` — подзаголовки`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `body`), ` — основной текст`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `small`), ` — мелкие тексты`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `caption`), ` — подписи`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `button`), ` — тексты на кнопках`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Задача дизайнера не только определить стили типографики, но и присвоить им переменные.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Правила:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переменные используют формат `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "li",
    "href": "https://ru.wikipedia.org/wiki/CamelCase",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `lowerCamelCase`), `: первое слово переменной начинается со строчной, каждое последующее — с прописной. Несколько слов пишутся слитно без пробела, дефиса или нижнего подчеркивания.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Мы не используем транслитерацию — все слова пишутся на английском.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "similar-styles"
  }, `Similar styles`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для одной функции могут использоваться несколько похожих стилей, незначительно отличающихся друг от друга. Допускается записывать их на одной строке:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/typography/multiple-styles.png",
    alt: "\u041D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0441\u0442\u0438\u043B\u0435\u0439 \u0434\u043B\u044F \u043E\u0434\u043D\u043E\u0439 \u0444\u0443\u043D\u043A\u0446\u0438\u0438",
    width: "500"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Несколько стилей для одной функции`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для таких дополнительных стилей нужно соблюдать логику и принципы именования слоев:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️body`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ small`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⛔️ caption`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ bodyBold`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ smallBold`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `✅ captionUppercase`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "recommendations"
  }, `Recommendations`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Указывайте line-height в процентах. Это позволит одинаково выставлять значения для разных кеглей и не менять значение при смене кегля. Разумно использовать значение, кратное десяти или пяти: 120%, 130%, 140%, 150% и т.д.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Не используйте более двух разных нестандартных шрифтов в проекте, если это ничем не оправдано. Скорость загрузки страницы увеличивается пропорционально количеству начертаний.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Предоставляйте разработчикам вариативную версию шрифта, если она имеется. На текущий момент поддержки вариативных шрифтов в Figma нет, но его можно вставить вместо обычной версии на этапе разработки, что значительно понизит общий вес загружаемых ассетов.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Подбирайте фоллбеки для нестандартных шрифтов. Фоллбек — системный шрифт, который видит пользователь, пока не загрузится нестандартный шрифт. Для уменьшения визуального скачка подбирайте похожий по параметрам шрифт из системных.`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Design / Typography',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/emotion/colors.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Emotion / Colors",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "colors-"
  }, `Colors ✨🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Это финальные переменные, на которые заводятся стили. Вы должны для всех цветов проекта использовать только эти переменные.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Если вы используете токены, то не должны сами добавлять переменные. Если появилась такая необходимость, то вероятнее всего, что это ошибка макета. Обсуждайте такие моменты с ведущим дизайнером проекта.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "usage"
  }, `Usage`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Нужно задать цвет фона для некоторого элемента. В макете у этого элемента указан стиль:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/colors/style.png",
    alt: "\u0421\u0442\u0438\u043B\u044C \u0446\u0432\u0435\u0442\u0430 \u0432 Figma",
    width: "300"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Стиль цвета в Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Вы знаете имя стиля и можете обратиться к соответствующей переменной темы:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { useTheme } from '@greensight/gds';

const Example = () => {
    const { colors } = useTheme();
    return <div css={{ backgroundColor: colors.brand }}>Example</div>;
};
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ В идеале имена стилей должны совпадать с именами переменных на фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Colors`), `. Если это не так, то обратитесь к дизайнеру. В противном случае придётся каждый раз искать соответствия между стилями и переменными.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 Дизайнеры могут группировать стили для собственного удобства. Это выражается слешами в названиях – их просто игнорируйте.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Emotion / Colors',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/emotion/global.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  __page: () => (/* binding */ __page),
  "default": () => (/* binding */ global_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./.storybook/docgen/Global.tsx

var GlobalTheme = function GlobalTheme() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var BaseProperties = function BaseProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var BodyProperties = function BodyProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var FocusProperties = function FocusProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var SelectionProperties = function SelectionProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var FontsProperties = function FontsProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var FontFamilyProperties = function FontFamilyProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["GlobalTheme", "BaseProperties", "BodyProperties", "FocusProperties", "SelectionProperties", "FontsProperties", "FontFamilyProperties"]));
try {
    // @ts-ignore
    GlobalTheme.displayName = "GlobalTheme";
    // @ts-ignore
    GlobalTheme.__docgenInfo = { "description": "", "displayName": "GlobalTheme", "props": { "placeholder": { "defaultValue": null, "description": "Custom placeholder icon for autokits. Icon must be in `SVGR` format (React component).", "name": "placeholder", "required": false, "type": { "name": "SVGRIcon | undefined" } }, "base": { "defaultValue": null, "description": "Global styles.", "name": "base", "required": false, "type": { "name": "BaseProperties | undefined" } }, "fonts": { "defaultValue": null, "description": "Fonts settings.", "name": "fonts", "required": false, "type": { "name": "FontsProperties | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Global.tsx#GlobalTheme"] = { docgenInfo: GlobalTheme.__docgenInfo, name: "GlobalTheme", path: ".storybook/docgen/Global.tsx#GlobalTheme" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    BaseProperties.displayName = "BaseProperties";
    // @ts-ignore
    BaseProperties.__docgenInfo = { "description": "", "displayName": "BaseProperties", "props": { "body": { "defaultValue": null, "description": "Body styles.", "name": "body", "required": false, "type": { "name": "BodyProperties | undefined" } }, "focus": { "defaultValue": null, "description": "Focus styles. GDS uses outline styles with `focus-visible` polyfill.", "name": "focus", "required": false, "type": { "name": "FocusProperties | undefined" } }, "selection": { "defaultValue": null, "description": "Selection styles.", "name": "selection", "required": false, "type": { "name": "SelectionProperties | undefined" } }, "css": { "defaultValue": null, "description": "Additional CSS.", "name": "css", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Global.tsx#BaseProperties"] = { docgenInfo: BaseProperties.__docgenInfo, name: "BaseProperties", path: ".storybook/docgen/Global.tsx#BaseProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    BodyProperties.displayName = "BodyProperties";
    // @ts-ignore
    BodyProperties.__docgenInfo = { "description": "", "displayName": "BodyProperties", "props": { "typography": { "defaultValue": null, "description": "Typography style.", "name": "typography", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "Text color.", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "bg": { "defaultValue": null, "description": "Background color.", "name": "bg", "required": false, "type": { "name": "string | undefined" } }, "css": { "defaultValue": null, "description": "Additional CSS.", "name": "css", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Global.tsx#BodyProperties"] = { docgenInfo: BodyProperties.__docgenInfo, name: "BodyProperties", path: ".storybook/docgen/Global.tsx#BodyProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    FocusProperties.displayName = "FocusProperties";
    // @ts-ignore
    FocusProperties.__docgenInfo = { "description": "", "displayName": "FocusProperties", "props": { "width": { "defaultValue": null, "description": "Outline width.", "name": "width", "required": false, "type": { "name": "number | undefined" } }, "color": { "defaultValue": null, "description": "Outline color.", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "offset": { "defaultValue": null, "description": "Outline offset.", "name": "offset", "required": false, "type": { "name": "number | undefined" } }, "css": { "defaultValue": null, "description": "Additional CSS.", "name": "css", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Global.tsx#FocusProperties"] = { docgenInfo: FocusProperties.__docgenInfo, name: "FocusProperties", path: ".storybook/docgen/Global.tsx#FocusProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SelectionProperties.displayName = "SelectionProperties";
    // @ts-ignore
    SelectionProperties.__docgenInfo = { "description": "", "displayName": "SelectionProperties", "props": { "color": { "defaultValue": null, "description": "Text color.", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "bg": { "defaultValue": null, "description": "Background color.", "name": "bg", "required": false, "type": { "name": "string | undefined" } }, "css": { "defaultValue": null, "description": "Additional CSS.", "name": "css", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Global.tsx#SelectionProperties"] = { docgenInfo: SelectionProperties.__docgenInfo, name: "SelectionProperties", path: ".storybook/docgen/Global.tsx#SelectionProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    FontsProperties.displayName = "FontsProperties";
    // @ts-ignore
    FontsProperties.__docgenInfo = { "description": "", "displayName": "FontsProperties", "props": { "families": { "defaultValue": null, "description": "Font families settings. Used in `Typography` autokit and `typography` helper.", "name": "families", "required": false, "type": { "name": "Record<string, FontFamilyProperties> | undefined" } }, "fluid": { "defaultValue": null, "description": "Fluid typography settings. Active by default. Pass `false` to disable completely or array of fonts to disable.", "name": "fluid", "required": false, "type": { "name": "boolean | string[] | undefined" } }, "fontFace": { "defaultValue": null, "description": "`@font-face` definitions.", "name": "fontFace", "required": false, "type": { "name": "CSSObject[] | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Global.tsx#FontsProperties"] = { docgenInfo: FontsProperties.__docgenInfo, name: "FontsProperties", path: ".storybook/docgen/Global.tsx#FontsProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    FontFamilyProperties.displayName = "FontFamilyProperties";
    // @ts-ignore
    FontFamilyProperties.__docgenInfo = { "description": "", "displayName": "FontFamilyProperties", "props": { "stack": { "defaultValue": null, "description": "Fallback fonts for specified font family.", "name": "stack", "required": false, "type": { "name": "string | undefined" } }, "vf": { "defaultValue": null, "description": "Variable font.", "name": "vf", "required": false, "type": { "name": "boolean | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Global.tsx#FontFamilyProperties"] = { docgenInfo: FontFamilyProperties.__docgenInfo, name: "FontFamilyProperties", path: ".storybook/docgen/Global.tsx#FontFamilyProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./stories/dev/emotion/global.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */



const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Dev / Emotion / Global",
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "global"
  }, `Global`), (0,esm/* mdx */.yg)("p", null, `Добавление глобальных стилей производится через `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), `. Этот компонент помимо своей основной функции производит вставку `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Global`), ` из `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `emotion`), `, через который определяются глобальные стили проекта. GDS идёт со встроенными стилями, которые параметризируются через тему, и поддерживает добавление собственных стилей.`), (0,esm/* mdx */.yg)("p", null, `Встроенное содержимое:`), (0,esm/* mdx */.yg)("ol", null, (0,esm/* mdx */.yg)("li", {
    parentName: "ol"
  }, `Стили нормализации через `, (0,esm/* mdx */.yg)("a", {
    parentName: "li",
    "href": "https://necolas.github.io/normalize.css/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `normalize.css`)), (0,esm/* mdx */.yg)("li", {
    parentName: "ol"
  }, `Определения шрифтов`), (0,esm/* mdx */.yg)("li", {
    parentName: "ol"
  }, `Базовые стили`)), (0,esm/* mdx */.yg)("p", null, `Помимо этого вы можете передать любой CSS, который должен быть применён глобально.`), (0,esm/* mdx */.yg)("h2", {
    "id": "theme"
  }, `Theme`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    components: {
      GlobalTheme: GlobalTheme,
      BaseProperties: BaseProperties,
      BodyProperties: BodyProperties,
      FocusProperties: FocusProperties,
      SelectionProperties: SelectionProperties,
      FontsProperties: FontsProperties,
      FontFamilyProperties: FontFamilyProperties
    },
    mdxType: "Props"
  }), (0,esm/* mdx */.yg)("h2", {
    "id": "base"
  }, `Base`), (0,esm/* mdx */.yg)("p", null, `Глобальные стили проекта могут быть заданы через `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `global.base`), `. `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), ` вставляет базовые переопределения стилей для тегов и некоторые из них доступны для параметризации: стили выделения, фокуса и основная типографика/цвета (body).`), (0,esm/* mdx */.yg)("h2", {
    "id": "fonts"
  }, `Fonts`), (0,esm/* mdx */.yg)("p", null, `Для подключения шрифтов нужно прописать глобальные `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `@font-face`), ` декларации. Для этого предназначено поле `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `global.fonts.fontFace`), `.`), (0,esm/* mdx */.yg)("p", null, `В `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `global.fonts.families`), ` можно указывается использование вариативного шрифта и фолбеки – эти значения используются в хелпере `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `typography`), ` и автоките `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Typography`), `.`), (0,esm/* mdx */.yg)("p", null, `❗️ Хелпер `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `typography`), ` для вариативных шрифтов ожидает увидеть название в формете `, (0,esm/* mdx */.yg)("strong", {
    parentName: "p"
  }, `"name VF"`), `.`), (0,esm/* mdx */.yg)("p", null, `В `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `global.fonts.fluid`), ` можно отключить флюидную типографику для всех стилей или для отдельных`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Emotion / Global',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const global_stories = (componentMeta);

/***/ }),

/***/ "./stories/dev/emotion/layout.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
/* harmony import */ var _storybook_docgen_Layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./.storybook/docgen/Layout.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */



const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Emotion / Layout",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "layout-"
  }, `Layout ✨🧱🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для упрощения работы с сетками GDS предоставляет несколько компонентов:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Layout`), ` – компонент для построения сеток на гридах и флексах`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Section`), ` – компонент для вставки раздела в основное тело страницы`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Container`), ` – компонент для добавления обёртки в контейнер`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Подробнее об этих компонентах смотри в их документации.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Со стороны Figma задаются настройки типовой сетки и брейкпоинты проекта. Настройки сетки используются прежде всего внутри этих вспомогательных компонентов в качестве дефолтных. Переменные брейкпоинтов будут полезны для переходов по Media и написания адаптивных стилей.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "theme"
  }, `Theme`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Props */ .Ji, {
    of: _storybook_docgen_Layout__WEBPACK_IMPORTED_MODULE_3__/* .LayoutTheme */ .gh,
    mdxType: "Props"
  }));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Emotion / Layout',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/emotion/shadows.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Emotion / Shadows",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "shadows-"
  }, `Shadows ✨🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В переменных теней хрянятся значения для передачи в CSS правило `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `box-shadow`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Если вы используете токены, то не должны сами добавлять переменные. Если появилась такая необходимость, то вероятнее всего, что это ошибка макета. Обсуждайте такие моменты с ведущим дизайнером проекта.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "usage"
  }, `Usage`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Нужно задать тень для некоторого элемента. В макете у этого элемента указан стиль:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/shadows/style.png",
    alt: "\u0421\u0442\u0438\u043B\u044C \u0442\u0435\u043D\u0438 \u0432 Figma",
    width: "300"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Стиль тени в Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Вы знаете имя стиля и можете обратиться к соответствующей переменной темы:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { useTheme } from '@greensight/gds';

const Example = () => {
    const { shadows } = useTheme();
    return <div css={{ boxShadow: shadows.inner }}>Example</div>;
};
`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Emotion / Shadows',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/emotion/theming-experimental.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */



const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Emotion / Theming2.0",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "theming"
  }, `Theming`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Новвоведение версии 3.0.0-beta`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Разработан новый экспериментальный подход к темизации компонентов.
Идея подхода базируется на пяти понятиях: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `состояние`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `подкомпонент`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `тема`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `вариант`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `размер`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Подкомпонент`), ` - составная часть компонента. Для компонента "кнопка" это - текст и иконка. Для селекта это - поле для ввода, стрелка, список опций, группа опций, опция`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Состояние`), ` - набор параметров, определяющих внешний вид компонента. Например, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `block`), ` - растягивать ли компонент до ширины родителя, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `rounded`), ` - скруглять ли углы, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `hasError`), ` - имеется ли ошибка в компоненте, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `disabled`), ` - выключен ли для редактирования компонент, и т.д.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Тема`), ` - словарик, где ключ - это название подкомпонента, а значение - функция, принимающая на вход `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `состояние`), `, и возвращающая CSSObject`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Пример:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `export const basicTheme: MyComponentTheme = {
    subComponentA: (state) => {
        if (state.disabled) return { background: 'grey', cursor: 'not-allowed' };

        return {
            background: 'green',
            cursor: 'pointer',
        };
    },
};
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Вариант`), ` - цветовая вариация компонента. Например, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `primary`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `secondary`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `danger`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `ghost`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Размер`), ` - вариация размера компонента. Например, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `sm`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `md`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `lg`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "какие-проблемы-решает-новый-подход"
  }, `Какие проблемы решает новый подход`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Становится возможным явное разделение представления и логики компонента. Можно выделить нестилизованные компоненты, и сделать полноценную UI-библиотеку на базе GDS.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Появляется возможность создавать разные темы для одного компонента. Полезно для проектов, где есть публичный и административный раздел, с отличающимися по виду компонентами.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Открывается возможность переиспользовать стили для разных подкомпонентов в разных темах`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Появляется возможность описывать различные параметры состояния компонента, и менять в соответствие с ними внешний вид подкомпонентов. Каждый компонент и его состояние уникальны, предыдущий же подход не учитывал это наблюдение.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "правила-предъявляемые-к-темам-и-компонентам"
  }, `Правила, предъявляемые к темам и компонентам`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Компонент `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `не должен`), ` внутри себя определять какие-либо стили, которые нельзя переопределить через тему`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Компонент `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `должен`), ` иметь конечный набор подкомпонентов, и параметров, описывающих его состояние`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Темы компонентов `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `должны`), ` именоваться согласно разделу, в котором они расположены`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Каждая тема компонента `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `должна`), ` поддерживать `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `варианты`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `размеры`), ` компонента, или, по крайней мере, иметь fallback облик для неподдерживаемых `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `вариантов`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `размеров`), `.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "инструкция-по-переводу-компонента-на-новую-темизацию"
  }, `Инструкция по переводу компонента на новую темизацию:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", {
    parentName: "li"
  }, `Удалить из кода компонента и всех его подкомпонентов стили, имеющие в себе:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    parentName: "li"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `scale(), typography(), color`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `медиа-запросы`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `условные выражения вида`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", {
    parentName: "li"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `...(condition && {
    cssProperty: 'someValue'
})
`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", {
    parentName: "li"
  }, `Создать интерфейс, описывающий все параметры состояния компонента, пример:`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `export interface ButtonState {
    // скрыт ли текст кнопки
    hidden: boolean;
    // выключена ли кнопка
    disabled: boolean;
    // передан ли children
    hasChildren: boolean;
    // растягивать ли кнопку
    block: boolean;
    // иконка справа?
    iconAfter: boolean;
    // включено скругление иконки?
    rounded: boolean;
}
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 3
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Создать вспомогательный тип для объединения размера, варианта и состояния:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `export type ButtonStateFull<V extends EnumLike, S extends EnumLike> = BaseThemeState<V, S> & ButtonState;
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 4
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Создать интерфейс темы, в котором определятся все подкомпоненты:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `export interface ButtonTheme<V extends EnumLike, S extends EnumLike> {
    button: StyleDefinition<ButtonStateFull<V, S>>;
    icon: StyleDefinition<ButtonStateFull<V, S>>;
}
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 5
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Создать интерфейс пропов компонента:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `export interface ButtonProps<V extends EnumLike, S extends EnumLike>
    extends Partial<BaseThemeState<V, S, ButtonTheme<V, S>>>, // важный момент
        Partial<ButtonState> { // важный момент
    children?: ReactNode;
    Icon?: SVGRIcon | FC<any>;
    external?: boolean;
    // ...etc
}
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 6
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Изменить определение самого компонента для работы с generic `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `вариантом`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `размером`), `:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `export const BaseButton = <V extends EnumLike, S extends EnumLike>(
    {
        children,
        block = false,
        theme, // theme, variant, size будут
        size, // будет типизированы дальше, поэтому не имеют значения по-умолчанию
        variant,
        Icon,
        iconAfter = false, // важно дать значения по-умолчанию для параметров состояния,
        hidden = false, // чтобы избежать null check внутри темы
        type = 'button',
        external = false,
        disabled = false,
        rounded = true,
        css,
        ...props
    }: ButtonProps<V, S>,
    ref: Ref<HTMLButtonElement>,
) => {
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Внутри же компонента необходимо создать объект состояния:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `const state = useMemo<ButtonStateFull<V, S>>(
    () => ({
        disabled,
        hasChildren,
        hidden,
        size,
        variant,
        block,
        iconAfter,
        rounded,
    }),
    [block, disabled, hasChildren, hidden, iconAfter, size, variant, rounded],
);

if (!theme) {
    throw new Error('[Button] theme is required');
}

const { button: totalCSS, icon: iconCSS } = useThemeCSS(theme!, state);
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 7
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `При необходимости использования `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `ref`), ` обернуть в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `forwardRef`), `:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `const ButtonRef = forwardRef(BaseButton) as typeof BaseButton;
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 8
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Создать функцию, которая насыщает generic'и компонента `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `вариантами`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `размерами`), `, определяя тип для темы и статически типизируя `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `варианты`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `размеры`), `:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `export const createButtonWithTheme = <V extends EnumLike, S extends EnumLike>(
    defaultTheme: ButtonTheme<V, S>, // тема по-умолчанию
    defaultVariant: V | keyof V, // вариант по-умолчанию
    defaultSize: S | keyof S, // размер по-умолчанию
) => {
    type ButtonReturn = ReturnType<typeof ButtonRef>;

    const ThemedButton = (({ theme = defaultTheme, variant = defaultVariant, size = defaultSize, ...props }, ref) => (
        <ButtonRef ref={ref} theme={theme} variant={variant} size={size} {...props} />
    )) as (props: ButtonProps<V, S>, ref: Ref<HTMLButtonElement>) => ButtonReturn;

    (ThemedButton as any).displayName = 'Button';

    return forwardRef(ThemedButton) as typeof ThemedButton;
};
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 9
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Создаем (или меняем) структуру папок компонента`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre"
  }, `components/
    ComponentName/
        themes/
            basic.ts
        index.ts
        types.ts
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Содержимое basic.ts:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { ButtonTheme, OptionizedCSS, colors, extractCSSOption, scale, typography } from '@scripts/gds';

import { createButtonWithTheme } from '../path/to/my/component';

// Конечный набор вариантов компонента
export enum ButtonVariant {
    primary = 'primary',
    secondary = 'secondary',
    outline = 'outline',
    fill = 'fill',
    ghost = 'ghost',
    dangerous = 'dangerous',
}

// Конечный набор размеров компонента
export enum ButtonSize {
    sm = 'sm',
    md = 'md',
}

// Определяем тему
const basicTheme: ButtonTheme<typeof ButtonVariant, typeof ButtonSize> = {
    button: state => {
        const sized: OptionizedCSS<typeof ButtonSize> = {
            sm: {
                padding: \`\${scale(1, true) + 0.5}px \${scale(1)}px\`,
                ...(typography('button') as any),
            },
            md: {
                // other dimensions..
            },
        };

        const varianted: OptionizedCSS<typeof ButtonVariant> = {
            primary: {
                backgroundColor: colors.primary,
                color: colors.white,
                ':hover': {
                    backgroundColor: colors.primaryHover,
                },
                ...(state.disabled && {
                    backgroundColor: colors.grey200,
                    color: colors.grey800,
                }),
            },
            secondary: {
                // other colors...
            },
        };

        return {
            /// common styles...
            ...extractCSSOption(sized, state.size),
            ...extractCSSOption(varianted, state.variant),
        };
    },
    icon: state => {
        /// return styles..
    },
};

export const BUTTON_THEMES = {
    basic: basicTheme,
    // можно расширять для других разделов. можно выносить файл с темой в отдельный файл и переиспользовать
    custom: {
        ...basicTheme,
        icon: (state) => {
            const css = basicTheme.icon(state);

            return {
                ...css,
                background: 'red', // перезаписываем лишь одно свойство для одного компонента из темы basic
            };
        },
    }
}
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 10
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Осталось объявить в удобном файле итоговый компонент.
Для компонентов внутри проекта, рекомендуется объявлять компонент в файле самого компонента(components/ComponentName/index.tsx), импортируя темы, варианты и размеры (в примере - BUTTON_THEMES, ButtonVariant и ButtonSize)
Для компонентов, объявленных в GDS, рекомендуется перенести scripts/themes/`, `[componentName]`, `.ts в components/ComponentName/themes/, и объявлять компонент в components/ComponentName/index.tsx`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `export const Button = createButtonWithTheme<typeof ButtonVariant, typeof ButtonSize>(
    BUTTON_THEMES.basic,
    ButtonVariant.primary,
    ButtonSize.md
);
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", {
    "start": 11
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Теперь в файле scripts/gds.ts необходимо создать константу для работы с медиа запросами`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import {
    // ...
    createMediaQueries,
} from '@greensight/gds';

import tokens from '../../public/tokens.json';

const {
    layout: { breakpoints },
} = tokens;

export const MEDIA_QUERIES = createMediaQueries(breakpoints);
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Готово! Теперь у вас есть компонент кнопки`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Можете начинать использовать:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `<FutureButton variant="primary" size="sm">
    Я новая кнопка
</FutureButton>
\`\`\`../../../.storybook/docgen/Theme
`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Emotion / Theming2.0',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/emotion/theming.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  __page: () => (/* binding */ __page),
  "default": () => (/* binding */ theming_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./.storybook/docgen/Theme.tsx

var Theme = function Theme() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var Tokens = function Tokens() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var ComponentsTheme = function ComponentsTheme() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["Theme", "Tokens", "ComponentsTheme"]));
try {
    // @ts-ignore
    Theme.displayName = "Theme";
    // @ts-ignore
    Theme.__docgenInfo = { "description": "", "displayName": "Theme", "props": { "global": { "defaultValue": null, "description": "Global theme settings.", "name": "global", "required": false, "type": { "name": "GlobalTheme | undefined" } }, "components": { "defaultValue": null, "description": "Components theme settings.", "name": "components", "required": false, "type": { "name": "ComponentsTheme | undefined" } }, "palettes": { "defaultValue": null, "description": "Palettes theme settings. You can get these settings via tokens from `Palettes` frame.", "name": "palettes", "required": false, "type": { "name": "PalettesTheme | undefined" } }, "colors": { "defaultValue": null, "description": "Colors theme settings. You can get these settings via tokens from `Colors` frame.", "name": "colors", "required": false, "type": { "name": "ColorsTheme | undefined" } }, "shadows": { "defaultValue": null, "description": "Shadows theme settings. You can get these settings via tokens from `Shadows` frame.", "name": "shadows", "required": false, "type": { "name": "ShadowsTheme | undefined" } }, "typography": { "defaultValue": null, "description": "Typography theme settings. You can get these settings via tokens from `Typography` frame.", "name": "typography", "required": false, "type": { "name": "TypographyTheme | undefined" } }, "layout": { "defaultValue": null, "description": "Layout theme settings. You can get these settings via tokens from `Layout` frame.", "name": "layout", "required": false, "type": { "name": "LayoutTheme | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Theme.tsx#Theme"] = { docgenInfo: Theme.__docgenInfo, name: "Theme", path: ".storybook/docgen/Theme.tsx#Theme" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    Tokens.displayName = "Tokens";
    // @ts-ignore
    Tokens.__docgenInfo = { "description": "", "displayName": "Tokens", "props": { "palettes": { "defaultValue": null, "description": "Palettes theme settings. You can get these settings via tokens from `Palettes` frame.", "name": "palettes", "required": false, "type": { "name": "PalettesTheme | undefined" } }, "colors": { "defaultValue": null, "description": "Colors theme settings. You can get these settings via tokens from `Colors` frame.", "name": "colors", "required": false, "type": { "name": "ColorsTheme | undefined" } }, "shadows": { "defaultValue": null, "description": "Shadows theme settings. You can get these settings via tokens from `Shadows` frame.", "name": "shadows", "required": false, "type": { "name": "ShadowsTheme | undefined" } }, "typography": { "defaultValue": null, "description": "Typography theme settings. You can get these settings via tokens from `Typography` frame.", "name": "typography", "required": false, "type": { "name": "TypographyTheme | undefined" } }, "layout": { "defaultValue": null, "description": "Layout theme settings. You can get these settings via tokens from `Layout` frame.", "name": "layout", "required": false, "type": { "name": "LayoutTheme | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Theme.tsx#Tokens"] = { docgenInfo: Tokens.__docgenInfo, name: "Tokens", path: ".storybook/docgen/Theme.tsx#Tokens" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ComponentsTheme.displayName = "ComponentsTheme";
    // @ts-ignore
    ComponentsTheme.__docgenInfo = { "description": "", "displayName": "ComponentsTheme", "props": { "Button": { "defaultValue": null, "description": "`Button` component theme settings.", "name": "Button", "required": false, "type": { "name": "ButtonTheme | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Theme.tsx#ComponentsTheme"] = { docgenInfo: ComponentsTheme.__docgenInfo, name: "ComponentsTheme", path: ".storybook/docgen/Theme.tsx#ComponentsTheme" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./stories/dev/emotion/theming.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */



const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Dev / Emotion / Theming",
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "theming"
  }, `Theming`), (0,esm/* mdx */.yg)("p", null, `GDS - это мультибрендовая дизайн-система. Для достижения мультибрендовости применяется темизация. Элементы GDS ожидают увидеть тему определённого формата, читая из неё значения. Ваша задача - соблюсти этот договор.`), (0,esm/* mdx */.yg)("p", null, `Тема передаётся в GDS через `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), `. Можно указать базовую тему или кастомную. Базовая определена внутри GDS и по определению соблюдает формат - эта тема используется внутри самого GDS. Кастомная тема создаётся через хелпер `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `createTheme`), `.`), (0,esm/* mdx */.yg)("p", null, `В `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `createTheme`), ` передаются полученные токены через поле `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `tokens`), ` (если они есть) и через `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `settings`), ` идут все остальные настройки. `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `settings`), ` наследует `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `tokens`), `, т.е. это все настройки, которые можно получить из токенов, + уникальные.`), (0,esm/* mdx */.yg)("p", null, `💬 Хелпер производит глубокий мерж токенов и настроек, так что вы можете дорабатывать в `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `settings`), ` содержимое `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `tokens`), `, например добавить новый цвет в `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `colors`), `.`), (0,esm/* mdx */.yg)("h2", {
    "id": "theme"
  }, `Theme`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    components: {
      Theme: Theme,
      Tokens: Tokens,
      ComponentsTheme: ComponentsTheme
    },
    mdxType: "Props"
  }), (0,esm/* mdx */.yg)("p", null, `Интерфейсы различных разделов темы смотрите в соответствующих разделах `, (0,esm/* mdx */.yg)("strong", {
    parentName: "p"
  }, `Dev`), `, компонентов - в `, (0,esm/* mdx */.yg)("strong", {
    parentName: "p"
  }, `Components`), `.`), (0,esm/* mdx */.yg)("h2", {
    "id": "custom-theme-example"
  }, `Custom theme example`), (0,esm/* mdx */.yg)("p", null, `Допустим, токены уже синхронизированы и нам нужно применить их значения и создать компонент кнопки – как задать тему?`), (0,esm/* mdx */.yg)("p", null, `Сначала создадим тему, указав в ней наши токены:`), (0,esm/* mdx */.yg)("pre", null, (0,esm/* mdx */.yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { createTheme } from '@greensight/gds';

import tokens from '../../../public/tokens.json';

const theme = createTheme({
    tokens,
});

export default theme;
`)), (0,esm/* mdx */.yg)("p", null, `Без указания `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `settings`), ` тема уже должна работать, и вы увидите автокиты, заполненные значениями из токенов.`), (0,esm/* mdx */.yg)("p", null, `Далее укажем Global настройки, которые не регулируются через токены: передадим свою placeholder-иконку, пропишем базовые стили и подключим шрифты:`), (0,esm/* mdx */.yg)("pre", null, (0,esm/* mdx */.yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { createTheme } from '@greensight/gds';

import tokens from '../../../public/tokens.json';
import PlaceholderIcon from '../images/icons/tokens/medium/placeholder.svg';

const { colors } = tokens;

const theme = createTheme({
    tokens,
    settings: {
        global: {
            placeholder: PlaceholderIcon,
            base: {
                body: {
                    typography: 'body',
                    color: colors.black,
                    bg: colors.white,
                },
                focus: {
                    width: 2,
                    color: colors.brand,
                    offset: 2,
                },
                selection: {
                    color: colors.white,
                    bg: colors.brand,
                },
            },
            fonts: {
                fontFace: {
                    'PT Root UI': [
                        {
                            woff2: 'fonts/PTRootUI-Regular.woff2',
                            woff: 'fonts/PTRootUI-Regular.woff',
                        },
                        {
                            woff2: 'fonts/PTRootUI-Medium.woff2',
                            woff: 'fonts/PTRootUI-Medium.woff',
                            weight: 500,
                        },
                        {
                            woff2: 'fonts/PTRootUI-Bold.woff2',
                            woff: 'fonts/PTRootUI-Bold.woff',
                            weight: 700,
                        },
                        {
                            vf: 'fonts/PTRootUI-VF.woff2',
                            weight: '300 700',
                        },
                    ],
                },
                stacks: {
                    'PT Root UI':
                        '-apple-system, BlinkMacSystemFont, "Segoe UI", "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "Helvetica Neue", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                },
            },
        },
    },
});

export default theme;
`)), (0,esm/* mdx */.yg)("p", null, `💬 Обратите внимание, что мы обратились к полям токенов, чтобы получить переменные цветов.`), (0,esm/* mdx */.yg)("p", null, `И наконец добавим кнопку. Для примера будет достаточно одной темы и одного размера:`), (0,esm/* mdx */.yg)("pre", null, (0,esm/* mdx */.yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { createTheme, scale } from '@greensight/gds';

import tokens from '../../../public/tokens.json';
import PlaceholderIcon from '../images/icons/tokens/medium/placeholder.svg';

const { colors, shadows } = tokens;

const theme = createTheme({
    tokens,
    settings: {
        global: {
            placeholder: PlaceholderIcon,
            base: {
                body: {
                    typography: 'body',
                    color: colors.black,
                    bg: colors.white,
                },
                focus: {
                    width: 2,
                    color: colors.brand,
                    offset: 2,
                },
                selection: {
                    color: colors.white,
                    bg: colors.brand,
                },
            },
            fonts: {
                fontFace: {
                    'PT Root UI': [
                        {
                            woff2: 'fonts/PTRootUI-Regular.woff2',
                            woff: 'fonts/PTRootUI-Regular.woff',
                        },
                        {
                            woff2: 'fonts/PTRootUI-Medium.woff2',
                            woff: 'fonts/PTRootUI-Medium.woff',
                            weight: 500,
                        },
                        {
                            woff2: 'fonts/PTRootUI-Bold.woff2',
                            woff: 'fonts/PTRootUI-Bold.woff',
                            weight: 700,
                        },
                        {
                            vf: 'fonts/PTRootUI-VF.woff2',
                            weight: '300 700',
                        },
                    ],
                },
                stacks: {
                    'PT Root UI':
                        '-apple-system, BlinkMacSystemFont, "Segoe UI", "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "Helvetica Neue", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                },
            },
        },
        components: {
            Button: {
                sizes: {
                    md: {
                        height: scale(6),
                        padding: scale(3),
                        iconSize: scale(3),
                        iconOffset: scale(1),
                        typography: 'buttonMd',
                    },
                },
                themes: {
                    primary: {
                        default: {
                            color: colors.white,
                            bg: colors.brand,
                        },
                        hover: {
                            bg: colors.brandHover,
                        },
                        active: {
                            border: 'transparent',
                            shadow: shadows.inner,
                        },
                        disabled: {
                            bg: colors.grey70,
                            color: colors.grey40,
                        },
                    },
                },
            },
        },
    },
});

export default theme;
`)), (0,esm/* mdx */.yg)("p", null, `Поздравляю, у вас есть кнопка! Доступные вариации должны отразиться в автоките`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Emotion / Theming',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const theming_stories = (componentMeta);

/***/ }),

/***/ "./stories/dev/emotion/typography.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  __page: () => (/* binding */ __page),
  "default": () => (/* binding */ typography_stories)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-docs/dist/esm/index.js
var dist_esm = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./.storybook/docgen/Typography.tsx

var TypographyTheme = function TypographyTheme() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var TypographyProperties = function TypographyProperties() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var TypographyStyle = function TypographyStyle() {
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["TypographyTheme", "TypographyProperties", "TypographyStyle"]));
try {
    // @ts-ignore
    TypographyTheme.displayName = "TypographyTheme";
    // @ts-ignore
    TypographyTheme.__docgenInfo = { "description": "", "displayName": "TypographyTheme", "props": { "breakpoints": { "defaultValue": null, "description": "Breakpoint for desktop and mobile styles. Accept 2 numbers in format: [desktop, mobile].", "name": "breakpoints", "required": true, "type": { "name": "number[]" } }, "styles": { "defaultValue": null, "description": "Named typography styles.", "name": "styles", "required": true, "type": { "name": "Record<string, TypographyStyle>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Typography.tsx#TypographyTheme"] = { docgenInfo: TypographyTheme.__docgenInfo, name: "TypographyTheme", path: ".storybook/docgen/Typography.tsx#TypographyTheme" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TypographyProperties.displayName = "TypographyProperties";
    // @ts-ignore
    TypographyProperties.__docgenInfo = { "description": "", "displayName": "TypographyProperties", "props": { "fontFamily": { "defaultValue": null, "description": "`font-family` CSS property specifies a font family name. Specify only main font (Example: `'PT Root UI'`). Fallback fonts are defined separately in `global.fonts.stacks` setting.", "name": "fontFamily", "required": true, "type": { "name": "string" } }, "fontWeight": { "defaultValue": null, "description": "`font-weight` CSS property specifies the weight of the font. Specify value in numbers (Example: `400`).", "name": "fontWeight", "required": true, "type": { "name": "number" } }, "fontSize": { "defaultValue": null, "description": "`font-size` CSS property (rem) sets the size of the font. Specify value in rems (Example: `'1rem'`).", "name": "fontSize", "required": true, "type": { "name": "string" } }, "lineHeight": { "defaultValue": null, "description": "`line-height` CSS property (\u043C\u043D\u043E\u0436\u0438\u0442\u0435\u043B\u044C) sets the amount of space used for lines. Specify value in numbers (Example: `1.5`).", "name": "lineHeight", "required": true, "type": { "name": "number" } }, "letterSpacing": { "defaultValue": null, "description": "`letter-spacing` sets the spacing behavior between text characters. Specify value in ems (Example: `'0.002em'`).", "name": "letterSpacing", "required": false, "type": { "name": "string | undefined" } }, "fontStyle": { "defaultValue": null, "description": "`fontStyle` CSS property sets whether a font should be styled with a italic face.", "name": "fontStyle", "required": false, "type": { "name": "\"italic\" | undefined" } }, "textTransform": { "defaultValue": null, "description": "`text-transform` CSS property specifies how to capitalize an element's text.", "name": "textTransform", "required": false, "type": { "name": "\"uppercase\" | \"lowercase\" | \"capitalize\" | undefined" } }, "textDecoration": { "defaultValue": null, "description": "`text-decoration` CSS property sets the appearance of decorative lines on text.", "name": "textDecoration", "required": false, "type": { "name": "\"underline\" | \"line-through\" | undefined" } }, "fontVariantNumeric": { "defaultValue": null, "description": "`font-variant-numeric` CSS property controls the usage of alternate glyphs for numbers.", "name": "fontVariantNumeric", "required": false, "type": { "name": "string | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Typography.tsx#TypographyProperties"] = { docgenInfo: TypographyProperties.__docgenInfo, name: "TypographyProperties", path: ".storybook/docgen/Typography.tsx#TypographyProperties" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TypographyStyle.displayName = "TypographyStyle";
    // @ts-ignore
    TypographyStyle.__docgenInfo = { "description": "", "displayName": "TypographyStyle", "props": { "desktop": { "defaultValue": null, "description": "Desktop typography properties.", "name": "desktop", "required": true, "type": { "name": "TypographyProperties" } }, "mobile": { "defaultValue": null, "description": "Mobile typography properties.", "name": "mobile", "required": false, "type": { "name": "TypographyProperties | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Typography.tsx#TypographyStyle"] = { docgenInfo: TypographyStyle.__docgenInfo, name: "TypographyStyle", path: ".storybook/docgen/Typography.tsx#TypographyStyle" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./stories/dev/emotion/typography.stories.mdx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */



const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,esm/* mdx */.yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,esm/* mdx */.yg)(dist_esm/* Meta */.W8, {
    title: "Dev / Emotion / Typography",
    mdxType: "Meta"
  }), (0,esm/* mdx */.yg)("h1", {
    "id": "typography-️"
  }, `Typography ✨⚙️🤖`), (0,esm/* mdx */.yg)("p", null, `Дизайнер определяет все используемые вариации типографики в Figma на фрейме `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `Typography`), `, выделяет под них стили и применяет на проекте. Стили разделены на 2 размера: `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `desktop`), ` и `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), `, при этом `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), ` может отсутствовать. Также дизайнер определяет значения брейкпоинтов для `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `desktop`), ` и `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), `.`), (0,esm/* mdx */.yg)("img", {
    src: "images/typography/style-properties.png",
    alt: "\u041F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B \u0441\u0442\u0438\u043B\u044F Figma",
    width: "500"
  }), (0,esm/* mdx */.yg)("p", null, (0,esm/* mdx */.yg)("em", {
    parentName: "p"
  }, `Параметры стиля Figma`)), (0,esm/* mdx */.yg)("p", null, `Все эти параметры загружаются на проект в формате токенов. В дальнейшем мы работаем на уровне имён стилей, передавая их в хелпер `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `typography`), `, который вернёт весь необходимый CSS.`), (0,esm/* mdx */.yg)("p", null, `❗️ Чтобы использовать веб-шрифты, их нужно сначала подключить через `, (0,esm/* mdx */.yg)("strong", {
    parentName: "p"
  }, `@font-face`), `. Это делается в глобальных стилях – смотрите документацию `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), `.`), (0,esm/* mdx */.yg)("h2", {
    "id": "theme"
  }, `Theme`), (0,esm/* mdx */.yg)(dist_esm/* Props */.Ji, {
    components: {
      TypographyTheme: TypographyTheme,
      TypographyStyle: TypographyStyle,
      TypographyProperties: TypographyProperties
    },
    mdxType: "Props"
  }), (0,esm/* mdx */.yg)("h2", {
    "id": "fluid-typography"
  }, `Fluid typography`), (0,esm/* mdx */.yg)("p", null, `По умолчанию для стилей, имеющих `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), ` версию, применяется плавное изменение размера шрифта между двумя точками, указанными в поле `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `breakpoints`), `. Вне этого диапазона размер фиксируется, чтобы избежать чрезмерного уменьшения/увеличения. Такой подход известен, как `, (0,esm/* mdx */.yg)("strong", {
    parentName: "p"
  }, `fluid typography with locks`), `.`), (0,esm/* mdx */.yg)("img", {
    src: "images/typography/fluid-typography.png",
    alt: "\u0424\u043E\u0440\u043C\u0443\u043B\u0430 fluid typography",
    width: "600"
  }), (0,esm/* mdx */.yg)("p", null, (0,esm/* mdx */.yg)("em", {
    parentName: "p"
  }, `Формула fluid typography`)), (0,esm/* mdx */.yg)("p", null, `Значение в больших скобках – это коэффициент. Когда он равен 0 (current vw = minimum vw), размер приравнивается к минимальному, когда он равен 1 (current vw = maximum vw) – к максимальному. Промежуточные значения получаются указанием в current vw значения в 100vw. В minimum vw при этом указывается размер шрифта в rem, чтобы происходил скейлинг от величины дефолтного шрифта в браузере пользователя.`), (0,esm/* mdx */.yg)("p", null, `📚 Подробнее подход разобран в статье: `, (0,esm/* mdx */.yg)("a", {
    parentName: "p",
    "href": "https://blog.logrocket.com/the-elements-of-responsive-typography/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `The elements of responsive typography`)), (0,esm/* mdx */.yg)("p", null, `Дизайнер может попросить отключить флюидную типографику для проекта или отдельных стилей. Это можно сделать через поле `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `global.fonts.fluid`), ` объекта темы.`), (0,esm/* mdx */.yg)("h2", {
    "id": "variable-fonts"
  }, `Variable fonts`), (0,esm/* mdx */.yg)("p", null, `⏱ Используйте вариативные шрифты, чтобы значительно снизить размер загружаемых шрифтов. Такой шрифт позволяет использовать один файл, весом сравнимый с одним начертанием, вместо множества ассетов под каждую вариацию `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `font-weight`), `.`), (0,esm/* mdx */.yg)("p", null, `Также вариативные шрифты открывают невозможные ранее возможности в виде анимированного изменения жирности и параметризации специфичых характеристик шрифта. Однако поддержка этих возможностей на наших проектах ограничена, т.к. у Figma нет поддержки вариативных шрифтов и количество кириллических шрифтов сильно ограничено.`), (0,esm/* mdx */.yg)("p", null, `Хелпер `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `typography`), ` поддерживает вариативные шрифты. Если в определении шрифта в глобальных стилях указана опция `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `vf`), `, то он попробует загрузить вариативную вариацию вместо обычной. Детали подключения описаны в документации `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), `.`), (0,esm/* mdx */.yg)("p", null, `📚 Ликбез по вариативным шрифтам: `, (0,esm/* mdx */.yg)("a", {
    parentName: "p",
    "href": "https://24ways.org/2019/an-introduction-to-variable-fonts/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `An introduction to variable fonts`)), (0,esm/* mdx */.yg)("h2", {
    "id": "font-stacks"
  }, `Font stacks`), (0,esm/* mdx */.yg)("p", null, `По умолчанию для всех шрифтов в правило `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `font-family`), ` добавляется `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `sans-serif`), ` в качестве фолбека. Его можно и нужно переопределять, т.к. фолбеки будут отображаться во время загрузки шрифта и нужно максимально сократить ощущение визуального скачка при смене шрифта (FOUT).`), (0,esm/* mdx */.yg)("p", null, `⏱ Скачок происходит из-за того, что мы делаем текст сразу доступным пользователю, что критично для пользователей на медленном интернете, т.к. они пришли на ваш сайт прежде всего за контентом, а веб-шрифт может занять приличное время для загрузки. Такой режим отображения текста активируется через `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `font-display: swap`), `.`), (0,esm/* mdx */.yg)("p", null, `Для указания своих фолбеков используйте поле `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `global.fonts.stacks`), ` объекта темы.`), (0,esm/* mdx */.yg)("p", null, `Для подбора можно попробовать использовать `, (0,esm/* mdx */.yg)("a", {
    parentName: "p",
    "href": "https://meowni.ca/font-style-matcher/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Font style matcher`), `.`), (0,esm/* mdx */.yg)("h2", {
    "id": "usage"
  }, `Usage`), (0,esm/* mdx */.yg)("p", null, `Работа с текстом производится через хелпер `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `typography`), `.`), (0,esm/* mdx */.yg)("p", null, `Чтобы пользоваться хелпером на проекте, необходимо привязать к нему свой объект темы. Для этого создайте свой скрипт `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `typography`), `, который в дальнейшем будете вызывать вместо прямого вызова хелпера из пакета GDS:`), (0,esm/* mdx */.yg)("pre", null, (0,esm/* mdx */.yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { typography as gdsTypography } from '@greensight/gds';

import theme from './theme';

const typography = (name) => gdsTypography(name, theme);

export default typography;
`)), (0,esm/* mdx */.yg)("p", null, `Теперь, допустим, вам нужно задать стили типографики для некоторого текста. В макете у этого текста указан стиль:`), (0,esm/* mdx */.yg)("img", {
    src: "images/typography/style.png",
    alt: "\u0421\u0442\u0438\u043B\u044C Figma",
    width: "300"
  }), (0,esm/* mdx */.yg)("p", null, (0,esm/* mdx */.yg)("em", {
    parentName: "p"
  }, `Стиль Figma`)), (0,esm/* mdx */.yg)("p", null, `Вы знаете имя стиля и можете передать его в хелпер `, (0,esm/* mdx */.yg)("inlineCode", {
    parentName: "p"
  }, `typography`), `:`), (0,esm/* mdx */.yg)("pre", null, (0,esm/* mdx */.yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import typography from '@scripts/typography';

const Example = () => <div css={typography('subheading')}>Example</div>;
`)), (0,esm/* mdx */.yg)("p", null, `Теперь у текста проставлены все токенизируемые параметры, изменения на адаптиве, флюидная типографика и вариативные шрифты`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Emotion / Typography',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,esm/* mdx */.yg)(dist_esm/* AddContext */.hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,esm/* mdx */.yg)(MDXContent, null))
};
/* harmony default export */ const typography_stories = (componentMeta);

/***/ }),

/***/ "./stories/dev/icons.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Icons",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "icons-"
  }, `Icons ✨🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "design-tokens"
  }, `Design tokens`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Иконки токенизируются, но не как переменные в объекте темы, а файлы. Дизайнер определяет используемые иконки в Figma, используя удобное ему разбиение по группам. Имена формируются из разбиений по слешам, что позволяет группировать их в меню Figma и пользоваться быстрым доступом. При выкачивании токенов файлы иконок загружаются на проект в директорию, указанную в параметре конфига `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `iconsDir`), ` (по умолчанию: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `src/client/images/icons/tokens`), `). Из категорий формируются дерево директорий.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все иконки используют fill, чтобы была возможность универсально стилизовать иконки со стороны компонентов (иначе возник бы конфликт со stroke – невозможно автоматически определить тип иконки). В Figma при указывании fill он прописывается в иконку в качестве атрибута, что блокирует возможность переопределить цвет заливки программно. Поэтому на этапе скачивания из разметки удаляются все fill – все иконки становятся чёрными и перекрашиваются со стороны приложения.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Из многоцветных иконок также удалится fill, так что такие иконки нужно переносить руками.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Директория с токенами при скачивании не пересоздаётся каждый раз с нуля, а дозаписывается, поэтому при удалении иконок или изменении структуры иконок (редкий кейс) могут оставаться неактуальные файлы/директории. Если вы заметили, что это ваш случай, то просто удалите директорию токенов и перекачайте токены заново.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Токены хранятся в отдельной директории внутри директории с иконками, так что у вас есть возможность добавлять свои собственные иконки (и даже директории) – просто вставьте их вне директории токенов. Однако в большинстве случаев, если иконка используется в макетах, то она должна быть и в ките – просите дизайнера добавить.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Директория с токенами не должна правиться вручную. Ваши изменения перезапишутся на следующей синхронизации. Если вам нужно внести правки в разметке иконки, то скопируйте её и поместите вне этой директории.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "sizes"
  }, `Sizes`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Иконки рисуются и импортируются в квадратах с полями – такой подход стандартизирует размеры иконок на проекте и делает их взаимозаменяемыми. Как правило на проекте используется 1-3 размера. При этом дизайнеры зачастую (но не всегда) строят свои категории на основании размеров, так что в таких случаях вы получите директории иконок, сформированные по размеру.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Перенос размеров на фронт с одной стороны создаёт лишние иконки, которые можно было бы получить методом скейлинга, но с другой налаживает сообщение между отделами: выбор иконки в макете показывает её полное имя со слешами, что соответствует 1:1 хранению иконки в вашей файловой системе. В данной ситуации дублирование иконок является несущественным, т.к. без использования спрайта они в любом случае будут вставлены инлайном в код и экономии вы не получите.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "usage"
  }, `Usage`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Рекомендованным методом работы с иконками является `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://www.smooth-code.com/open-source/svgr/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `svgr`), `: инструмент, конвертирующий svg-файлы в react-компоненты. С ним вы получаете комфортный подход к работе со стороны приложения и производительное/доступное решение на выходе (в html вставится inline svg). GDS использует `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `svgr`), ` внутри, на стороне приложения нужно добавить его поддержку через лоадер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://github.com/smooth-code/svgr/tree/master/packages/webpack",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `@svgr/webpack`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для использования иконки на проекте она должна быть импортирована и вставлена, как React компонент:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import CheckCircle from '@icons/tokens/medium/checkCircle.svg';

const Example = () => (
    <div>
        <CheckCircle /> Done!
    </div>
);
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🏆 Т.к. каждая иконка является компонентом, то её имя должно начинаться с заглавной буквы.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Компонент принимает svg-атрибуты через props. Т.о. вы можете задать цвет через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `fill`), `, применить скейлинг через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `width`), `/`, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `height`), ` и встроить css через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `style`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `📚 Сравнительный анализ различных подходов работы с svg с точки зрения производительности: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://medium.com/@marcintreder/design-system-sprint-6-the-fastest-icons-on-earth-bf91c0a47ef9",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Design System Sprint 6: The Fastest Icons on Earth
`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "accessibility"
  }, `Accessibility`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `♿️ Если иконка несёт не презентационный характер, то для неё должен быть прописан нейминг, доступный для всех AT.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Использование инлайновых иконок позволяет нам использовать для этой цели тег `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `title`), `. В случае `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `svgr`), ` указание этого тега доступно через проп `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `title`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🔨 Использование `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `title`), ` требует добавления опции `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `titleProp: true`), ` в конфигурацию `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `@svgr/webpack`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `📚 Сравнительный анализ различных подходов по обеспечению доступности: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://www.deque.com/blog/creating-accessible-svgs/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Creating Accessible SVGs`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "placeholder"
  }, `Placeholder`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `На проекте может быть задана иконка-плейсхолдер – это иконка, которая вставляется для резерва места в прототипах, которая впоследствии будет заменена на актуальную. Также эту иконку используют компоненты автокитов.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Чтобы задать плейсхолдер для проекта, передайте svgr-компонент в параметр `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `placeholder`), ` вашего объекта темы.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Плейсхолдер является опциональным. Если его не задавать, то автокиты будут использовать плейсхолдер из базовой темы GDS.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Icons',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/scss/colors.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Scss / Colors",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "colors-"
  }, `Colors ✨🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Это финальные переменные, на которые заводятся стили. Вы должны для всех цветов проекта использовать только эти переменные.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Если вы используете токены, то не должны сами добавлять переменные. Если появилась такая необходимость, то вероятнее всего, что это ошибка макета. Обсуждайте такие моменты с ведущим дизайнером проекта.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "usage"
  }, `Usage`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Нужно задать цвет фона для некоторого элемента. В макете у этого элемента указан стиль:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `img src="images/colors/style.png" alt="Стиль цвета в Figma" width="300" />`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Стиль цвета в Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все значения цветов хранятся в переменных файла `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `variables.scss`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-scss"
  }, `color: $cl-primary;
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ В идеале имена стилей должны совпадать с именами переменных на фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Colors`), `. Если это не так, то обратитесь к дизайнеру. В противном случае придётся каждый раз искать соответствия между стилями и переменными.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Scss / Colors',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/scss/shadows.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Scss / Shadows",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "shadows-"
  }, `Shadows ✨🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В переменных теней хрянятся значения для передачи в CSS правило `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `box-shadow`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Если вы используете токены, то не должны сами добавлять переменные. Если появилась такая необходимость, то вероятнее всего, что это ошибка макета. Обсуждайте такие моменты с ведущим дизайнером проекта.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "usage"
  }, `Usage`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Нужно задать тень для некоторого элемента. В макете у этого элемента указан стиль:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/shadows/style.png",
    alt: "\u0421\u0442\u0438\u043B\u044C \u0442\u0435\u043D\u0438 \u0432 Figma",
    width: "300"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Стиль тени в Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все значения цветов хранятся в переменных файла `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `variables.scss`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-scss"
  }, `box-shadow: $shadow-small;
`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Scss / Shadows',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/scss/typography.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */



const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Scss / Typography",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "typography-️"
  }, `Typography ✨⚙️🤖`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Дизайнер определяет все используемые вариации типографики в Figma на фрейме `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Typography`), `, выделяет под них стили и применяет на проекте. Стили разделены на 2 размера: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `desktop`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), `, при этом `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), ` может отсутствовать. Также дизайнер определяет значения брейкпоинтов для `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `desktop`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/typography/style-properties.png",
    alt: "\u041F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B \u0441\u0442\u0438\u043B\u044F Figma",
    width: "500"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Параметры стиля Figma`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все эти параметры загружаются на проект в формате токенов. В дальнейшем мы работаем на уровне имён, каждое имя соответствует наименованию миксина.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Чтобы использовать веб-шрифты, их нужно сначала подключить.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "fluid-typography"
  }, `Fluid typography`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `По умолчанию для стилей, имеющих `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `mobile`), ` версию, применяется плавное изменение размера шрифта между двумя точками, указанными в поле `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `breakpoints`), `. Вне этого диапазона размер фиксируется, чтобы избежать чрезмерного уменьшения/увеличения. Такой подход известен, как `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `fluid typography with locks`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    src: "images/typography/fluid-typography.png",
    alt: "\u0424\u043E\u0440\u043C\u0443\u043B\u0430 fluid typography",
    width: "600"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("em", {
    parentName: "p"
  }, `Формула fluid typography`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Значение в больших скобках – это коэффициент. Когда он равен 0 (current vw = minimum vw), размер приравнивается к минимальному, когда он равен 1 (current vw = maximum vw) – к максимальному. Промежуточные значения получаются указанием в current vw значения в 100vw. В minimum vw при этом указывается размер шрифта в rem, чтобы происходил скейлинг от величины дефолтного шрифта в браузере пользователя.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `📚 Подробнее подход разобран в статье: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://blog.logrocket.com/the-elements-of-responsive-typography/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `The elements of responsive typography`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "variable-fonts"
  }, `Variable fonts`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⏱ Используйте вариативные шрифты, чтобы значительно снизить размер загружаемых шрифтов. Такой шрифт позволяет использовать один файл, весом сравнимый с одним начертанием, вместо множества ассетов под каждую вариацию `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `font-weight`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Также вариативные шрифты открывают невозможные ранее возможности в виде анимированного изменения жирности и параметризации специфичых характеристик шрифта. Однако поддержка этих возможностей на наших проектах ограничена, т.к. у Figma нет поддержки вариативных шрифтов и количество кириллических шрифтов сильно ограничено.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `typography`), ` поддерживает вариативные шрифты. Если в определении шрифта в глобальных стилях указана опция `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `vf`), `, то он попробует загрузить вариативную вариацию вместо обычной. Детали подключения описаны в документации `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `📚 Ликбез по вариативным шрифтам: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://24ways.org/2019/an-introduction-to-variable-fonts/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `An introduction to variable fonts`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "font-stacks"
  }, `Font stacks`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `По умолчанию для всех шрифтов в правило `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `font-family`), ` добавляется `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `sans-serif`), ` в качестве фолбека. Его можно и нужно переопределять, т.к. фолбеки будут отображаться во время загрузки шрифта и нужно максимально сократить ощущение визуального скачка при смене шрифта (FOUT).`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `⏱ Скачок происходит из-за того, что мы делаем текст сразу доступным пользователю, что критично для пользователей на медленном интернете, т.к. они пришли на ваш сайт прежде всего за контентом, а веб-шрифт может занять приличное время для загрузки. Такой режим отображения текста активируется через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `font-display: swap`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для подбора можно попробовать использовать `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://meowni.ca/font-style-matcher/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Font style matcher`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "usage"
  }, `Usage`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Работа с текстом производится через миксин `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `@include nameTypography`), ` в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `.scss`), ` файлах.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-scss"
  }, `.block {
    @include nameTypography;
}
`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Scss / Typography',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/dev/spacings.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Dev / Spacings",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "spacings-️"
  }, `Spacings ⚙️`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для задания размеров элементов, полей и отступов вместо прямого указания числа пикселей используется хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `scale`), `. По умолчанию он работает по major scale, при передаче вторым параметром `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `true`), ` включается minor scale.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "custom-grid-step"
  }, `Custom grid step`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Если на проекте базовый размер сетки отличается от 8, то вам нужно переопределить хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `scale`), ` под ваш проект. Для этого нужно переопределить хелпер с вызовом 3-го параметра и вызывать его вместо прямого вызова хелпера из пакета GDS.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В отдельном файле:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { scale as gdsScale } from '@greensight/gds';

const scale = (multiplier, isMinor) => gdsScale(multiplier, isMinor, 10);

export default scale;
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Это единственное место на проекте, где должен быть указан 3-ий параметр. Не допускается переопределение шага по месту, хотя формально система это позволяет сделать. Можете предложить pull request с более элегантным подходом к конфигурации хелпера.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "common-rules"
  }, `Common rules`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ol", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Использовать хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale`), ` для задания всех размеров, где имеет место сетка: padding – хорошо, borderRadius – пишем в px.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `minor не определён для размеров выше 40px. Хелпер выведет предупреждение и округлит результат до 8.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `В качестве множителя принимаются только целые значения. Хелпер выведет предупреждение и округлит множитель до целого.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ol"
  }, `Применять minor scale только для размеров, которые невозможно представить через major (некратные 8): `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(2)`), ` – хорошо, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale(4, true)`), ` – бессмысленно.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "scss-function"
  }, `Scss @function`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Такой же фукнционал есть и в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `.scss`), `. Отличие лишь в том, что функция имеет наименование `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `gs`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Пример:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-scss"
  }, `.block {
    padding: gs(1);
    margin: gs(1, true);
}
`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Dev / Spacings',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/intro/changelog.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Intro / Changelog",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "changelog"
  }, `Changelog`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("br", null), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "409-august-3-2024"
  }, `4.0.9 (August 3, 2024)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Autokits are adapted to vite`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "406-august-1-2024"
  }, `4.0.6 (August 1, 2024)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Fixed esm`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Autokits fixed`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "400-july-26-2024"
  }, `4.0.0 (July 26, 2024)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🔥 The package is divided into 2 parts: emotion and scss`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🔥 Emotion components have been rewritten to scss`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "313-may-24-2024"
  }, `3.1.3 (May 24, 2024)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Changed variables name`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "310-may-24-2024"
  }, `3.1.0 (May 24, 2024)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Add scss tokens`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "302-beta-april-05-2023"
  }, `3.0.2-beta (April 05, 2023)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Add new state fields for (`, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "li",
    "href": "?path=/story/components-future-button--basic"
  }, `Future Button`), `) and typography function argument`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "301-beta-february-01-2023"
  }, `3.0.1-beta (February 01, 2023)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Fix colorful icons being corrupted during `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `yarn tokens`), ` command`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "300-beta-december-28-2022"
  }, `3.0.0-beta (December 28, 2022)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `New experimental theming conventions (`, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "li",
    "href": "?path=/docs/dev-theming2-0--page"
  }, `read more`), `);`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `New type-safe `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `createMediaQueries()`), ` function;`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `FutureButton component as an examplel of new theming conventions.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "250-december-21-2022"
  }, `2.5.0 (December 21, 2022)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🔥 Update babel, rollup, webpack, typescript, eslint, prettier, storybook to latest versions;`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `⚙️ Fix issues with `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `align`), ` and `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `direction`), ` properties of `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Layout`), ` component;`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Migrate stories to work with sb 6.5: remove addon-knobs in favor of `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `args`), ` and `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `argTypes`), `;`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Improve types of `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Layout`), ` component;`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "240-january-10-2021"
  }, `2.4.0 (January 10, 2021)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Fix Typescript version to solve react-docgen-typescript-loader issues;`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Remove Palletes;`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Stories updates;`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "230-december-17-2021"
  }, `2.3.0 (December 17, 2021)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Fix `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Critical dependency`), ` error;`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "220-june-8-2021"
  }, `2.2.0 (June 8, 2021)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Export button type`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Fix dependencies: move axios and chalk to dependencies from dev dependencies`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "214-february-10-2021"
  }, `2.1.4 (February 10, 2021)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Export additional types`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "213-january-26-2021"
  }, `2.1.3 (January 26, 2021)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Change icons path from @icons/... to @svg/...`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "212-december-21-2020"
  }, `2.1.2 (December 21, 2020)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Fix @storybook/addon-backgrounds.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Storybook обновлён до версии 6.1.1`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "211-december-14-2020"
  }, `2.1.1 (December 14, 2020)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `React обновлён до 17-ой версии.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "210-april-26-2020"
  }, `2.1.0 (April 26, 2020)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Убрано неработающее подключение шрифтов через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `global.fonts.fontFace`), `. Теперь css с `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `@font-face`), ` передаётся напрямую (в это же поле).`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Настройки vf и stacks шрифтов перешли в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `global.fonts.families`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Из базовой темы убран вариативный шрифт.`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "201-april-1-2020"
  }, `2.0.1 (April 1, 2020)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Хотфикс, правящий проблемы с tree shaking и стилями основного релиза.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Возвращены директории билда `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `esm`), ` / `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `cjs`), ` / `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `types`), ` вместо `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `dist`), ` с разбиением бандлов на файлы, т.к. это требуется для корректной работы tree shaking`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Удалён `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `rollup-plugin-typescript2`), ` и добавлен транспайлинг через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `rollup-plugin-babel`), `. В основном релизе была ошибка со стилями, т.к. плагин `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `@emotion/babel-preset-css-prop`), ` не отрабатывал. Генерация деклараций производится напрямую через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `tsc`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Убран экспорт интерфейса `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Theme`), `, т.к. `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `babel`), ` плагин для `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `rollup`), ` не подобный экспорт. Экспорт интерфейсов пока опущен за ненужностью`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `В `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `createTheme`), ` добавлен параметр по умолчанию, позволяющий использовать эту утилиту без параметров`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Убраны ненужные экспорты компонентов, одноимённые дефолтным экспортам. Ранее этого требовал `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `docgen`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Автокиты переименованы в соответствии со всеми остальными компонентами: имя компонента совпадает с именем директории`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Изменены команды сборки. Изменения зафиксированы в Development гайде`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Исправлен пример кода в Theming гайде`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "200-april-1-2020"
  }, `2.0.0 (April 1, 2020)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Этот релиз не добавляет нового функционала, и прежде всего нацелен на перевод на Typescript для повышения удобства пользования системой и повышения строгости при разработке. Остальные изменения по большей части нацелены на изменения в процессе разработки дизайн-системы. Есть ряд изменений в публичном API.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "typescript"
  }, `Typescript`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Компоненты и автокиты переписаны на Typescript`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Утилиты и хелперы переведены на Typescript`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Полностью переработан интерфейс темы`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Все интерфейсы доработаны, чтобы проходить валидацию `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `tsc`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `TSDoc`), ` переведён на английский`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "other-changes"
  }, `Other changes`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переход на `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `yarn v2`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Добавлена зависимость от `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `deepmerge`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `rollup`), ` более не генерирует `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `cjs`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `esm`), ` директории. Вместо этого создаётся `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `dist`), `, содержащий `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `esm`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `cjs`), ` билды одиночными файлами и директорию `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `types`), ` с d.ts декларациями, повторяющими структуру проекта`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Изменена структура экспортов автокитов: убрана обёртка в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `autokits`), `, автокиты получаются напрямую по имени, например `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `ColorsAutokit`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `В экспорты добавлен интерфейс `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Theme`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Обновлена документация в соответствии с релизом`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Изменён формат документации интерфейсов тем: вместо сниппетов выводятся таблицы по аналогии с документацией пропсов`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Документация составных компонентов/интерфейсов заменена табами вместо последовательного вывода таблиц`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Компоненты `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Layout`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Section`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Container`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `VisuallyHidden`), ` сгруппированы в категорию `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `helpers`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Заголовки Storybook переписаны на английском, т.к. на кириллических заголовках не работают гиперссылки`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Удалена кастомная тема Storybook, включая текстовый логотип`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Обновлены зависимости`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "components"
  }, `Components`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Проп `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `external`), ` компонента `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Button`), ` теперь добавляет `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `nofollow`), ` в атрибут `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `rel`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Убрана возможность передать jsx в качестве `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Icon`), ` компонента `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Button`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переработан проп `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `as`), `, использование `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `href`), ` теперь требует прямого указания `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `as="a"`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "theme"
  }, `Theme`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Изменения Theming API нацелены на уход от необходимости доопределять в настройках категории, которые определяются токенам – все подобные настройки перенесены в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `global`), `. Также увеличена прозрачность структуры темы за счёт добавления групп настроек.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `placeholder`), ` перенесён в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `global`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `stacks`), ` перенесены в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `global.fonts`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Определения шрифтов в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `global.fonts`), ` обёрнуты в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `fontFace`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Настройки `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `fluid`), ` убраны из `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `typography`), ` и теперь производятся в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `global.fonts`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Глобальный css определяется вынесен из `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `global`), ` в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `global.base`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Стили типографики оборачиваются в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `styles`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Темизация компонента `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Button`), ` в дефолтном состоянии оборачивается в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `default`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Для кнопки убрана возможность переопределять любые настройки в любом месте: настройки `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `sizes`), ` чётко отделены от настроек `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `themes`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "development"
  }, `Development`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Эти изменения не несут изменений в использовании пакета, и предназначены для разработчиков системы.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Установлен плагин Typescript для `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `yarn`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Добавлены отсутствующие `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `@types`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переработан `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `eslint`), ` конфиг: отказ от конфига `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `AirBnB`), ` и полная поддержка Typescript`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Добавлен линтинг для mdx файлов через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `eslint-plugin-mdx`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Удалены d.ts файлы в компонентах, интерфейсы внесены в tsx`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Конфигурация Storybook переведена на Typescript`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `customTypography`), ` переименован в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `typography`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Item`), ` переименован в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Placeholder`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Dropdown`), ` переименован в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Tooltip`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переработан кастомный хук `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `useCSSProperty`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Добавлен кастомный хук `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `useComponentTheme`), ` для определения используемой в компоненте темы`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Добавлен кастомный хук `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `useLayout`), ` для работы с контекстом компонента `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Layout`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Составные компоненты разбиты на отдельные файлы`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Константа `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `MAJOR_STEP_DEFAULT`), ` переименована в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `MAJOR_STEP`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Переработана логика работы со стилями в компоненте `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Button`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Изменены нейминги в автокитах: компоненты автокитов имеют суффикс Autokit, используемые в них компоненты не изменяют наименование`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Удалён хелпер `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `cloneElement`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Интерфейсы тем вынесены в директорию `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `types`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Изменён нейминг интерфейсов: "I"-нотация более не используется`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Добавлен скрипт `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `tsc`), ` для ручной проверки на валидность Typescript, его запускт также добавлен на `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `precommit hook`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Убрана обработка через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `babel`), `. Транспайлинг производится через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `rollup-plugin-typescript2`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Общие stories вынесены из `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `.storybook/docs`), ` в отдельную директорию `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `stories`), `, чтобы обойти проблему с неработающим линтингом mdx внутри dot-директории`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `В `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `.storybook`), ` создана директория `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `docgen`), ` для создания компонентов, позволяющих выводить интерфейсы тем в виде таблиц Storybook + выводить упрощённые интерфейсы компонентов`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "100-february-11-2020"
  }, `1.0.0 (February 11, 2020)`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h3", {
    "id": "features"
  }, `Features`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🔥 Core: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `ThemeProvider`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `createTheme`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `useTheme`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `baseTheme`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🧱 Components: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Button`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Layout`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Section`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Container`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `VisuallyHidden`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `⚙️ Helpers: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `typography`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `scale`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🤖 Autokits: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Palettes`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Colors`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Typography`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Icons`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Layout`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Shadows`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Button`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `✨ Tokens: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `palettes`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `colors`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `typography`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `icons`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `layout`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `shadows`))));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Intro / Changelog',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/intro/development.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Intro / Development Guide",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "development-guide"
  }, `Development Guide`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Информация на этой странице предназначена для разработчиков GDS.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "scripts"
  }, `Scripts`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "th"
  }, `yarn <command>`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Описание`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `build`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Выполняет полную сборку пакета с очисткой, сборкой бандлов и типов`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `build:main`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Параллельно собирает бандлы и типы. Используется в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `build`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `build:rollup`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Собирает бандл через rollup. Используется в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `build:main`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `build:types`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Собирает типы через tsc. Используется в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `build:main`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `clear`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Очищает директории сборки`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `deploy`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Собирает Storybook и выгружает на Github Pages`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `publish`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Упаковывает и размещает в npm`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `eslint`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Линтинг `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `.js`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `.ts`), `, `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `.tsx`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `.mdx`), ` файлов`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `lint-staged`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `lint-staged`), ` добавлен в скрипты для использования с `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `run-p`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `prepublishOnly`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Хук, выполняющий сборку при публикации через `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `npm publish`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `storybook`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Запускает Storybook в dev режиме`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `storybook:build`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Собирает статическую версию Storybook в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `docs`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `storybook:serve`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Запускает сервер для просмотра статической версии`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `gds-init`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Создает `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `gds.config.json`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `tokens`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Обновляет токены Figma из основного проекта`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `scss-tokens`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `обновляет SCSS-файлы, используя предоставленные командой `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `tokens`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `tokens:dev`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Обновляет токены Figma из development проекта`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `tsc`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Проверка Typescript (noEmit)`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "docs"
  }, `Docs`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В документации использовать зафиксированный здесь список emojis:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `✅ – успех, «do»`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `⛔ – ошибка, «don't»`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `❗️ – важное замечание`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `💬 – сноска`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `✨ – дизайн–токены`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🧱 – компоненты`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `⚙️ – утилиты`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🤖 – автокиты`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🔥 - ядро, возможности`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🏆 – рекомендации, лучшие практики`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `♿️ – accessibility`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `⏱ – performance`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `📚 – ссылки на статьи`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🔨 – конфигурация`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🚧 – в разработке`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все заголовки в документации писать на английском, т.к. на кириллических не работают ссылки.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Intro / Development Guide',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/intro/usage.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Intro / Usage Guide / Main",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "usage-guide"
  }, `Usage Guide`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-bash"
  }, `npm i @greensight/gds
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-bash"
  }, `yarn add @greensight/gds
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-bash"
  }, `bun add @greensight/gds
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Системные требования:`), ` `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `react`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `react-dom`), ` версии 18.3.1 (hooks support).`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "initialization"
  }, `Initialization`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Прежде чем приступить к работе с GDS, убедитесь, что у вас есть файл конфигурации `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `gds.config.json`), `. Для его создания выполните следующую команду:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-bash"
  }, `npm run gds-init
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-bash"
  }, `yarn gds-init
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-bash"
  }, `bun gds-init
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "tokens"
  }, `Tokens`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `🏆 Использование дизайн-токенов полностью опционально, но настоятельно рекомендуется.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В GDS мы делаем Figma центром истины и получаем токены через Figma API, задав строгую систему макетов для возможности парсинга.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Для получения токенов GDS предоставляет CLI скрипт `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `gds-tokens`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Т.к. GDS не ставится глобально, то для запуска добавьте команду в скрипты `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `package.json`), ` или используйте `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `npx`), `. Например:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-json"
  }, `"scripts": {
    "tokens": "gds-tokens"
}
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-bash"
  }, `yarn tokens
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 Вы можете изменить расположение и имя файла через опцию `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `-c`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Укажите в файле конфигурации личный `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://www.figma.com/developers/api#authentication",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Figma token`), ` в поле `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `figmaToken`), ` и id проекта в поле `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `figmaId`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 Figma Id можно получить, открыв список проектов -> правый клик на проект -> "Copy Link" -> "figma.com/file/`, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `FIGMA_ID`), `/project-name".`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Figma token - это секретный ключ, так что убедитесь, что файл конфигурации добавлен в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `.gitignore`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `После этого скрипт сможет подключиться к вашему проекту и скачать токены из всех предоставленных фреймов на странице `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Tokens`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 Вы можете обновлять только отдельные токены, передав их имена в качестве параметров. Например: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `--colors`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `После выполнения скрипта вы получите json файл со всеми токенами в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `public/tokens.json`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Если вы синхронизируете иконки, то они будут доступны по адресу `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `src/client/images/icons/tokens`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Полный список настроек:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Описание`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Дефолтные значения`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `figmaToken`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Личный Figma token`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `figmaId`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `id проекта`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `tokensDir`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Путь для сохранения `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `tokens.json`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `'public'`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `iconsDir`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Путь для сохранения иконок`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `'src/client/images/icons/tokens'`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `page`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Название страницы Figma с токенами`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `'Tokens'`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `scss`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Взаимодействие с scss функциями`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `scss:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Описание`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Дефолтные значения`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `dir`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Путь для сохранения scss файлов`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `components`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Донастройка компонентов на scss`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `typography`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Донастройка типографики на scss`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `components:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Описание`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Дефолтные значения`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `gridLayout`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `GridLayout component`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `flexLayout`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `FlexLayout component`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `container`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `container component`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `gridLayout:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Описание`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Дефолтные значения`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `layer`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Наименование `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `@layer`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `flexLayout:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Описание`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Дефолтные значения`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `layer`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Наименование `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `@layer`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `container:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Описание`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Дефолтные значения`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `layer`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Наименование `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `@layer`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `typography`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Описание`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Дефолтные значения`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `fontFamily`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Замена шрифтов`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `layer`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Наименование `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `@layer`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `–`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `fontFamily:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Поле fontFamily в конфиге позволяет переопределять шрифты в миксинах типографики. Оно принимает объект, где ключ — это название заменяемого шрифта, а значение — новое значение шрифта (например, переменная). Это обеспечивает гибкость настройки через конфиг.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Пример:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Значение`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `PT Root UI`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `"var(--font-pt-root-ui)"`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "autokits"
  }, `Autokits`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Некоторые элементы дизайн-системы предоставляют автокиты – компоненты для демонстрации доступных вариаций этого элемента, построенные на анализе объекта темы.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `В случае с компонентами идёт настройка темы, а результат отображается в автоките.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Например, чтобы вывести в Storybook доступные на проекте цвета используйте автокит `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Colors`), `:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-md"
  }, `import { Meta, Preview, Story } from '@storybook/addon-docs';
import { ColorsAutokit } from '@greensight/gds/autokits';

<Meta title="Autokits / Colors" />

# Colors

<Preview>
    <Story name="basic">
        <ColorsAutokit />
    </Story>
</Preview>
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все доступные автокиты описаны в разделе `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Autokits`), ` документации.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `❗️ Автокит имеет свой React.Context, что означает, что для его корректной работы необходимо использовать ThemeProvider, предоставляемый самим автокитом.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-jsx"
  }, `import { ThemeProvider as AutokitsThemeProvider } from '@greensight/gds/autokits';

export const decorators = [
    (Story) => {
        return (
            <AutokitsThemeProvider theme={theme}>
                <Story />
            </AutokitsThemeProvider>
        );
    },
];
`)));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Intro / Usage Guide / Main',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/intro/usageEmotion.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Intro / Usage Guide / Emotion",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "emotion-variant"
  }, `Emotion Variant`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "import"
  }, `Import`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { ... } from '@greensight/gds/emotion';
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "theme"
  }, `Theme`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `GDS построен на `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Emotion`), ` и ожидает увидеть объект темы. Через темизацию достигается мультибрендовость системы.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Чтобы предоставить GDS тему, оберните приложение в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), ` и передайте в него вашу тему:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { ThemeProvider } from '@greensight/gds';
import theme from './scripts/theme';

hydrate(
    <ThemeProvider theme={theme}>
        <App />
    </ThemeProvider>
    document.querySelector('#root'),
);
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 Для использования стандартной темы передайте `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `baseTheme`), ` из GDS.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Тема создаётся через утилиту `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `createTheme`), ` и объединяет токены и ручные настройки:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { createTheme } from '@greensight/gds';

const theme = createTheme({
    tokens,
    settings,
});

export default theme;
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Здесь в `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `tokens`), ` нужно передать объект из `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `tokens.json`), ` или опустить, если токенов на проекте нет.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 В случае с webpack объект можно получить через import json-файла.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `settings`), ` - это объект с настройками, имеющий интерфейс темы. Интерфейс состоит из набора полей, формат которых описан в соответствующих разделах документации.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `💬 Подробнее про определение темы смотри гайд `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Dev / Theming`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `После этого `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), ` предоставит контекст всем GDS компонентам и позволит обращаться к теме внутри компонентов через хук `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `useTheme`), `:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { useTheme } from '@greensight/gds';

const Example = () => {
    const { colors } = useTheme();
    return <div css={{ backgroundColor: colors.brand }}>Example</div>;
};
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "components"
  }, `Components`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `После определения `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `ThemeProvider`), ` вам станут доступны компоненты:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { Button } from '@greensight/gds';

const Example = () => {
    return <Button>Click me</Button>;
};
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Все доступные компоненты описаны в разделе `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Components`), ` документации.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Intro / Usage Guide / Emotion',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/intro/usageScss.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Intro / Usage Guide / Scss",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "scss-variant"
  }, `SCSS Variant`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "import"
  }, `Import`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { ... } from '@greensight/gds/scss';
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "scss-tokens"
  }, `SCSS Tokens`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Чтобы сгенерировать `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `.scss`), ` файлы, необходимо указать путь к токенам и место для сохранения `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `.scss`), ` модулей`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-json"
  }, `"scripts": {
    "tokensDir": "public",
    "scssDir": "src/scss/tokens",
}
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `После чего выполнить скрипт `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `gds-scss-tokens`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h2", {
    "id": "compnents"
  }, `Compnents`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Чтобы приступить к работе с компонентами, нужно создать объект со стилями, используя сгенерированные миксины, а затем передать в ThemeProvider.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Список миксинов`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("table", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("thead", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "thead"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Миксин`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Файл`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Поле в ThemeProvider`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("th", {
    parentName: "tr",
    "align": null
  }, `Компонент`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tbody", {
    parentName: "table"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `gridLayout`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `layoutMixins`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `styles.gridLayout.index`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `GridLayout`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `gridLayoutItem`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `layoutMixins`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `styles.gridLayout.item`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `GridLayoutItem`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `flexLayout`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `layoutMixins`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `styles.flexLayout.index`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `FlexLayout`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `flexLayoutItem`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `layoutMixins`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `styles.flexLayout.item`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `FlexLayoutItem`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("tr", {
    parentName: "tbody"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "td"
  }, `container`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `containerMixin`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `styles.container`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("td", {
    parentName: "tr",
    "align": null
  }, `Container`)))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Пример подключения`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-scss"
  }, `@import './gridLayout.scss';
@include gridLayout();
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import gridLayoutStyles from './gridLayout.module.scss';
<ThemeProvider
    state={{
        components: {
            gridLayout: {
                index: gridLayoutStyles,
            },
        },
    }}
>
    ...
</ThemeProvider>;
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Теперь можно использовать компонент `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `GridLayout`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("pre", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("code", {
    parentName: "pre",
    "className": "language-js"
  }, `import { GridLayout } from '@greensight/gds/scss';

<GridLayout cols={3} gap={scale(3)}>
    ...
</GridLayout>;
`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Scss Variant`), ` не обязывает использовать только `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `React components`), `. Можно обойтись только миксинами. `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Scss variant`), ` предоставляет альтернативу `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `React components`), ` в виде миксинов, переменных и готовых классов. Более подробно можно узнать в разделе `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `DEV/Scss`), `.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Intro / Usage Guide / Scss',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./stories/intro/welcome.stories.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@mdx-js/react/dist/esm.js");
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



/* @jsxRuntime classic */
/* @jsx mdx */


const layoutProps = {};
const MDXLayout = "wrapper";
function MDXContent({
  components,
  ...props
}) {
  return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .Meta */ .W8, {
    title: "Intro / Welcome",
    mdxType: "Meta"
  }), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("h1", {
    "id": "gds"
  }, `GDS`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("img", {
    parentName: "p",
    "src": "images/logo.svg",
    "alt": "Логотип GDS"
  })), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `GDS`), ` – это мультибрендовая дизайн-система, используемая в компании `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://greensight.pro/",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Greensight`), ` для разработки своих коммерческих проектов.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Система построена на связке `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `React`), ` и `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Emotion`), `/`, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "p"
  }, `Scss`), `, со стороны дизайна используется `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("a", {
    parentName: "p",
    "href": "https://www.figma.com/file/Udf9B3n8wEoykSGFhhrU0J/Greensight-DS",
    "target": "_blank",
    "rel": "nofollow noopener noreferrer"
  }, `Figma`), `.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Возможности:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `📚 Набор стайлгайдов, определяющих принципы работы дизайнеров и фронтенд-разработчиков компании`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🧱 Коллекция стандартных компонентов`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🔥 Механизм темизации, позволяющий полностью изменять внешний вид компонентов под разные проекты`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🤖 Набор автокитов для вывода элементов проекта на основании объекта темы`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `✨ Система дизайн-токенов, построенная на Figma API`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Содержимое документации:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `Design`), ` – дизайнерские стайлгайды. Содержат общие принципы и инструкции по работе в Figma`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `Dev`), ` – девелоперские стайлгайды. Содержат общие принципы, инструкции по работе с GDS и структуры объектов тем`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `Components`), ` – список компонентов`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "li"
  }, `Autokits`), ` – список автокитов`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Emojis в заголовках символизируют наличие определённого функционала.`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Список emojis:`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `✨ – дизайн-токены`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🧱 – компоненты`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `⚙️ – утилиты`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `🤖 – автокиты`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Заголовки однозначно диктуют названия. Например для `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("strong", {
    parentName: "p"
  }, `Colors ✨🤖`), `:`), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("ul", null, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Поле объекта темы: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `colors`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Фрейм Figma: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `Colors`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Имя токена: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `colors`)), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("li", {
    parentName: "ul"
  }, `Автокит: `, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("inlineCode", {
    parentName: "li"
  }, `ColorsAutokit`))), (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)("p", null, `Исключением являются утилиты и множественные компоненты, но об этом указывается дополнительно.`));
}
;
MDXContent.isMDXComponent = true;
const __page = () => {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
const componentMeta = {
  title: 'Intro / Welcome',
  includeStories: ["__page"]
};
const mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__/* .AddContext */ .hT, {
    mdxStoryNameToKey: mdxStoryNameToKey,
    mdxComponentAnnotations: componentMeta
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .yg)(MDXContent, null))
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ }),

/***/ "./.storybook/preview.js-generated-config-entry.js":
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";

// NAMESPACE OBJECT: ./.storybook/preview.js
var preview_namespaceObject = {};
__webpack_require__.r(preview_namespaceObject);
__webpack_require__.d(preview_namespaceObject, {
  __namedExportsOrder: () => (__namedExportsOrder),
  decorators: () => (decorators),
  parameters: () => (parameters)
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/@storybook/builder-webpack5/node_modules/@storybook/client-api/dist/esm/ClientApi.js + 4 modules
var ClientApi = __webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/@storybook/client-api/dist/esm/ClientApi.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.entries.js
var es_object_entries = __webpack_require__("./node_modules/core-js/modules/es.object.entries.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("./node_modules/core-js/modules/es.array.slice.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("./node_modules/core-js/modules/es.array.from.js");
// EXTERNAL MODULE: ./node_modules/@storybook/addon-viewport/dist/esm/preview.js + 1 modules
var preview = __webpack_require__("./node_modules/@storybook/addon-viewport/dist/esm/preview.js");
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-element-43c6fea0.browser.esm.js + 2 modules
var emotion_element_43c6fea0_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-element-43c6fea0.browser.esm.js");
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
// EXTERNAL MODULE: ./node_modules/normalize.css/normalize.css
var normalize = __webpack_require__("./node_modules/normalize.css/normalize.css");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
// EXTERNAL MODULE: ./src/utils/emotion/typography.ts + 1 modules
var typography = __webpack_require__("./src/utils/emotion/typography.ts");
;// CONCATENATED MODULE: ./src/components/emotion/ThemeProvider/index.tsx



















function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}






/**
 * Component for providing theme context for app.
 */
var ThemeProvider = function ThemeProvider(_ref) {
  var _global$fonts2;
  var theme = _ref.theme,
    children = _ref.children;
  var global = theme.global || baseTheme/* baseTheme */.$.global;
  var _ref2 = global.base || baseTheme/* baseTheme */.$.global.base,
    selection = _ref2.selection,
    focus = _ref2.focus,
    body = _ref2.body,
    css = _ref2.css;
  var fontFaceStyles = (0,react.useMemo)(function () {
    var _global$fonts;
    return ((_global$fonts = global.fonts) === null || _global$fonts === void 0 ? void 0 : _global$fonts.fontFace) || [];
  }, [(_global$fonts2 = global.fonts) === null || _global$fonts2 === void 0 ? void 0 : _global$fonts2.fontFace]);
  var baseStyles = (0,react.useMemo)(function () {
    return [{
      '*, ::before, ::after': {
        boxSizing: 'border-box',
        padding: 0,
        margin: 0
      },
      '::selection': _objectSpread({
        color: selection === null || selection === void 0 ? void 0 : selection.color,
        backgroundColor: selection === null || selection === void 0 ? void 0 : selection.bg
      }, selection === null || selection === void 0 ? void 0 : selection.css),
      ':focus': _objectSpread({
        outline: "".concat((focus === null || focus === void 0 ? void 0 : focus.width) || 2, "px solid ").concat((focus === null || focus === void 0 ? void 0 : focus.color) || baseTheme/* baseTheme */.$.colors.black),
        outlineOffset: focus === null || focus === void 0 ? void 0 : focus.offset
      }, focus === null || focus === void 0 ? void 0 : focus.css),
      '.js-focus-visible :focus-visible': {
        outline: 'none'
      },
      'html, body': {
        minHeight: '100%'
      },
      body: _objectSpread(_objectSpread({}, body && (0,typography/* typography */.I)(body.typography, theme.typography ? theme : baseTheme/* baseTheme */.$)), {}, {
        color: body === null || body === void 0 ? void 0 : body.color,
        backgroundColor: body === null || body === void 0 ? void 0 : body.bg
      }, body === null || body === void 0 ? void 0 : body.css),
      img: {
        maxWidth: '100%',
        height: 'auto'
      },
      a: {
        display: 'inline-block',
        textDecoration: 'none',
        color: 'inherit'
      },
      'h1, h2, h3, h4, h5, h6': {
        margin: 0
      },
      'ul li, ol li': {
        listStyle: 'none'
      },
      button: {
        border: 'none',
        background: 'none',
        cursor: 'pointer'
      },
      'input[type="number"]': {
        appearance: 'textfield'
      },
      'input[type="number"]::-webkit-outer-spin-button, input[type="number"]::-webkit-inner-spin-button': {
        margin: 0,
        appearance: 'none'
      },
      fieldset: {
        padding: 0,
        border: 'none'
      }
    }];
  }, [body, focus === null || focus === void 0 ? void 0 : focus.color, focus === null || focus === void 0 ? void 0 : focus.css, focus === null || focus === void 0 ? void 0 : focus.offset, focus === null || focus === void 0 ? void 0 : focus.width, selection === null || selection === void 0 ? void 0 : selection.bg, selection === null || selection === void 0 ? void 0 : selection.color, selection === null || selection === void 0 ? void 0 : selection.css, theme]);
  var globalStyles = (0,react.useMemo)(function () {
    return [fontFaceStyles, baseStyles, css];
  }, [baseStyles, css, fontFaceStyles]);
  return (0,emotion_react_browser_esm/* jsx */.Y)(emotion_element_43c6fea0_browser_esm.a, {
    theme: theme
  }, (0,emotion_react_browser_esm/* jsx */.Y)(emotion_react_browser_esm/* Global */.mL, {
    styles: globalStyles
  }), children);
};
try {
    // @ts-ignore
    ThemeProvider.displayName = "ThemeProvider";
    // @ts-ignore
    ThemeProvider.__docgenInfo = { "description": "Component for providing theme context for app.", "displayName": "ThemeProvider", "props": { "theme": { "defaultValue": null, "description": "Theme object.", "name": "theme", "required": true, "type": { "name": "Theme | ({ palettes: { grey: string[]; blue: string[]; red: string[]; }; colors: { black: string; grey0: string; grey20: string; grey40: string; grey60: string; grey70: string; grey90: string; white: string; ... 10 more ...; tagNew: string; }; typography: { ...; }; layout: { ...; }; shadows: { ...; }; } & { ...; })" } }, "children": { "defaultValue": null, "description": "Project code with access to provided theme.", "name": "children", "required": true, "type": { "name": "ReactNode" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/ThemeProvider/index.tsx#ThemeProvider"] = { docgenInfo: ThemeProvider.__docgenInfo, name: "ThemeProvider", path: "src/components/emotion/ThemeProvider/index.tsx#ThemeProvider" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/utils/scss/useTheme.ts
var useTheme = __webpack_require__("./src/utils/scss/useTheme.ts");
;// CONCATENATED MODULE: ./src/components/scss/ThemeProvider/index.tsx


var ScssThemeProvider = function ScssThemeProvider(_ref) {
  var children = _ref.children,
    state = _ref.state;
  return (0,emotion_react_browser_esm/* jsx */.Y)(useTheme/* ThemeContext */.D.Provider, {
    value: state
  }, children);
};
try {
    // @ts-ignore
    ScssThemeProvider.displayName = "ScssThemeProvider";
    // @ts-ignore
    ScssThemeProvider.__docgenInfo = { "description": "", "displayName": "ScssThemeProvider", "props": { "state": { "defaultValue": null, "description": "", "name": "state", "required": true, "type": { "name": "ITheme<Record<string, string>>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/scss/ThemeProvider/index.tsx#ScssThemeProvider"] = { docgenInfo: ScssThemeProvider.__docgenInfo, name: "ScssThemeProvider", path: "src/components/scss/ThemeProvider/index.tsx#ScssThemeProvider" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./src/utils/autokits/useTheme.ts
var autokits_useTheme = __webpack_require__("./src/utils/autokits/useTheme.ts");
;// CONCATENATED MODULE: ./src/autokits/ThemeProvider.tsx


var AutokitsThemeProvider = function AutokitsThemeProvider(_ref) {
  var children = _ref.children,
    theme = _ref.theme;
  return (0,emotion_react_browser_esm/* jsx */.Y)(autokits_useTheme/* ThemeContext */.D.Provider, {
    value: theme
  }, children);
};
try {
    // @ts-ignore
    AutokitsThemeProvider.displayName = "AutokitsThemeProvider";
    // @ts-ignore
    AutokitsThemeProvider.__docgenInfo = { "description": "", "displayName": "AutokitsThemeProvider", "props": { "theme": { "defaultValue": null, "description": "", "name": "theme", "required": true, "type": { "name": "IAutokitsTheme" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/autokits/ThemeProvider.tsx#AutokitsThemeProvider"] = { docgenInfo: AutokitsThemeProvider.__docgenInfo, name: "AutokitsThemeProvider", path: "src/autokits/ThemeProvider.tsx#AutokitsThemeProvider" };
}
catch (__react_docgen_typescript_loader_error) { }
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/gridLayout.module.scss
var gridLayout_module = __webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/gridLayout.module.scss");
;// CONCATENATED MODULE: ./.storybook/scss/gridLayout.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(gridLayout_module/* default */.A, options);



/* harmony default export */ const scss_gridLayout_module = (gridLayout_module/* default */.A.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/gridLayoutItem.module.scss
var gridLayoutItem_module = __webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/gridLayoutItem.module.scss");
;// CONCATENATED MODULE: ./.storybook/scss/gridLayoutItem.module.scss

            

var gridLayoutItem_module_options = {};

gridLayoutItem_module_options.insert = "head";
gridLayoutItem_module_options.singleton = false;

var gridLayoutItem_module_update = injectStylesIntoStyleTag_default()(gridLayoutItem_module/* default */.A, gridLayoutItem_module_options);



/* harmony default export */ const scss_gridLayoutItem_module = (gridLayoutItem_module/* default */.A.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/flexLayout.module.scss
var flexLayout_module = __webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/flexLayout.module.scss");
;// CONCATENATED MODULE: ./.storybook/scss/flexLayout.module.scss

            

var flexLayout_module_options = {};

flexLayout_module_options.insert = "head";
flexLayout_module_options.singleton = false;

var flexLayout_module_update = injectStylesIntoStyleTag_default()(flexLayout_module/* default */.A, flexLayout_module_options);



/* harmony default export */ const scss_flexLayout_module = (flexLayout_module/* default */.A.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/flexLayoutItem.module.scss
var flexLayoutItem_module = __webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/flexLayoutItem.module.scss");
;// CONCATENATED MODULE: ./.storybook/scss/flexLayoutItem.module.scss

            

var flexLayoutItem_module_options = {};

flexLayoutItem_module_options.insert = "head";
flexLayoutItem_module_options.singleton = false;

var flexLayoutItem_module_update = injectStylesIntoStyleTag_default()(flexLayoutItem_module/* default */.A, flexLayoutItem_module_options);



/* harmony default export */ const scss_flexLayoutItem_module = (flexLayoutItem_module/* default */.A.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/container.module.scss
var container_module = __webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/container.module.scss");
;// CONCATENATED MODULE: ./.storybook/scss/container.module.scss

            

var container_module_options = {};

container_module_options.insert = "head";
container_module_options.singleton = false;

var container_module_update = injectStylesIntoStyleTag_default()(container_module/* default */.A, container_module_options);



/* harmony default export */ const scss_container_module = (container_module/* default */.A.locals || {});
;// CONCATENATED MODULE: ./.storybook/preview.js
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }

























var parameters = {
  options: {
    showRoots: true
  },
  grid: {
    cellSize: 8
  },
  viewport: {
    viewports: preview/* INITIAL_VIEWPORTS */.Lq
  },
  backgrounds: {
    values: Object.entries(baseTheme/* baseTheme */.$.colors).map(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
        name = _ref2[0],
        value = _ref2[1];
      return {
        name: name,
        value: value
      };
    })
  }
};
var componentStyles = {
  gridLayout: {
    index: scss_gridLayout_module,
    item: scss_gridLayoutItem_module
  },
  flexLayout: {
    index: scss_flexLayout_module,
    item: scss_flexLayoutItem_module
  },
  container: scss_container_module
};
var scssState = {
  components: componentStyles
};
var decorators = [function (Story) {
  return (0,emotion_react_browser_esm/* jsx */.Y)(AutokitsThemeProvider, {
    theme: baseTheme/* baseTheme */.$
  }, (0,emotion_react_browser_esm/* jsx */.Y)(ThemeProvider, {
    theme: baseTheme/* baseTheme */.$
  }, (0,emotion_react_browser_esm/* jsx */.Y)(ScssThemeProvider, {
    state: scssState
  }, (0,emotion_react_browser_esm/* jsx */.Y)(Story, null))));
}];
var __namedExportsOrder = ["parameters", "decorators"];
;// CONCATENATED MODULE: ./.storybook/preview.js-generated-config-entry.js









function preview_js_generated_config_entry_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function preview_js_generated_config_entry_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? preview_js_generated_config_entry_ownKeys(Object(source), !0).forEach(function (key) {
      preview_js_generated_config_entry_defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : preview_js_generated_config_entry_ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function preview_js_generated_config_entry_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/* eslint-disable import/no-unresolved */


Object.keys(preview_namespaceObject).forEach(function (key) {
  var value = preview_namespaceObject[key];
  switch (key) {
    case 'args':
      {
        return (0,ClientApi/* addArgs */.FQ)(value);
      }
    case 'argTypes':
      {
        return (0,ClientApi/* addArgTypes */.hA)(value);
      }
    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return (0,ClientApi/* addDecorator */.dK)(decorator, false);
        });
      }
    case 'loaders':
      {
        return value.forEach(function (loader) {
          return (0,ClientApi/* addLoader */.$K)(loader, false);
        });
      }
    case 'parameters':
      {
        return (0,ClientApi/* addParameters */.Gu)(preview_js_generated_config_entry_objectSpread({}, value), false);
      }
    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return (0,ClientApi/* addArgTypesEnhancer */.T$)(enhancer);
        });
      }
    case 'argsEnhancers':
      {
        return value.forEach(function (enhancer) {
          return (0,ClientApi/* addArgsEnhancer */.FW)(enhancer);
        });
      }
    case 'render':
      {
        return (0,ClientApi/* setGlobalRender */.kf)(value);
      }
    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return (0,ClientApi/* addParameters */.Gu)(v, false);
      }
    case '__namedExportsOrder':
    case 'decorateStory':
    case 'renderToDOM':
      {
        return null; // This key is not handled directly in v6 mode.
      }
    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});

/***/ }),

/***/ "./.storybook/decorators/paddingDecorator.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var _src_utils_common_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/utils/common/scale.ts");



var paddingDecorator = function paddingDecorator(storyFn) {
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_0__/* .jsx */ .Y)("div", {
    css:
    /*#__PURE__*/
    /*#__PURE__*/
    /*#__PURE__*/
    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_0__/* .css */ .AH)({
      padding: (0,_src_utils_common_scale__WEBPACK_IMPORTED_MODULE_1__/* .scale */ .h)(2)
    },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
  }, storyFn());
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (paddingDecorator);

/***/ }),

/***/ "./.storybook/docgen/Layout.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   XS: () => (/* binding */ LayoutProps),
/* harmony export */   gh: () => (/* binding */ LayoutTheme)
/* harmony export */ });
/* unused harmony export __namedExportsOrder */
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");

var LayoutTheme = function LayoutTheme() {
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_0__/* .jsx */ .Y)("div", null);
};
var LayoutProps = function LayoutProps() {
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_0__/* .jsx */ .Y)("div", null);
};
var __namedExportsOrder = (/* unused pure expression or super */ null && (["LayoutTheme", "LayoutProps"]));
try {
    // @ts-ignore
    LayoutTheme.displayName = "LayoutTheme";
    // @ts-ignore
    LayoutTheme.__docgenInfo = { "description": "", "displayName": "LayoutTheme", "props": { "breakpoints": { "defaultValue": null, "description": "Project breakpoints.", "name": "breakpoints", "required": true, "type": { "name": "Record<Breakpoint, number>" } }, "cols": { "defaultValue": null, "description": "Columns count.", "name": "cols", "required": true, "type": { "name": "Partial<Record<Breakpoint, number>>" } }, "gap": { "defaultValue": null, "description": "Gaps between columns.", "name": "gap", "required": true, "type": { "name": "Partial<Record<Breakpoint, number>>" } }, "padding": { "defaultValue": null, "description": "Container paddings.", "name": "padding", "required": true, "type": { "name": "Partial<Record<Breakpoint, number>>" } }, "container": { "defaultValue": null, "description": "Container width. Pass `'none'` to disable fixed width.", "name": "container", "required": true, "type": { "name": "Partial<Record<Breakpoint, number | \"none\">>" } }, "marginLeft": { "defaultValue": null, "description": "Container's left offset. Pass `0` to breakpoint with disabled fixed width.", "name": "marginLeft", "required": true, "type": { "name": "Partial<Record<Breakpoint, number | \"auto\">>" } }, "marginRight": { "defaultValue": null, "description": "Container's right offset. Pass `0` to breakpoint with disabled fixed width.", "name": "marginRight", "required": true, "type": { "name": "Partial<Record<Breakpoint, number | \"auto\">>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Layout.tsx#LayoutTheme"] = { docgenInfo: LayoutTheme.__docgenInfo, name: "LayoutTheme", path: ".storybook/docgen/Layout.tsx#LayoutTheme" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LayoutProps.displayName = "LayoutProps";
    // @ts-ignore
    LayoutProps.__docgenInfo = { "description": "", "displayName": "LayoutProps", "props": { "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "\"grid\" | \"flex\" | undefined" } }, "children": { "defaultValue": null, "description": "Layout items list.", "name": "children", "required": true, "type": { "name": "ReactNode" } }, "inline": { "defaultValue": null, "description": "Inline mode. Changes `display` type.", "name": "inline", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } }, "justify": { "defaultValue": null, "description": "Main axis alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<\"start\" | \"end\" | \"center\" | \"stretch\" | \"space-around\" | \"space-between\" | \"space-evenly\"> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<\"start\" | \"end\" | \"center\" | \"stretch\" | \"baseline\"> | undefined" } }, "direction": { "defaultValue": null, "description": "Main axis direction.", "name": "direction", "required": false, "type": { "name": "AllowMedia<\"row\" | \"column\" | \"unset\"> | undefined" } }, "gap": { "defaultValue": null, "description": "Gaps settings.", "name": "gap", "required": false, "type": { "name": "AllowMedia<string | number | [string | number, string | number]> | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "rows": { "defaultValue": null, "description": "Rows. For grids only.", "name": "rows", "required": false, "type": { "name": "AllowMedia<string | number | (string | number)[]> | undefined" } }, "areas": { "defaultValue": null, "description": "Areas. For grids only.", "name": "areas", "required": false, "type": { "name": "AllowMedia<string | string[]> | undefined" } }, "autoRows": { "defaultValue": null, "description": "Auto rows size. For grids only.", "name": "autoRows", "required": false, "type": { "name": "AllowMedia<string | number | (string | number)[]> | undefined" } }, "autoCols": { "defaultValue": null, "description": "Auto cols size. For grids only.", "name": "autoCols", "required": false, "type": { "name": "AllowMedia<string | number | (string | number)[]> | undefined" } }, "dense": { "defaultValue": null, "description": "Dense mode. For grids only.", "name": "dense", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } }, "cols": { "defaultValue": null, "description": "Columns settings.", "name": "cols", "required": false, "type": { "name": "AllowMedia<string | number | (string | number)[]> | undefined" } }, "auto": { "defaultValue": null, "description": "Minimum column size in auto mode. Auto mode allows to create columns of equal size without media queries.", "name": "auto", "required": false, "type": { "name": "AllowMedia<number> | undefined" } }, "reverse": { "defaultValue": null, "description": "Reverse directions. For flex only.", "name": "reverse", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } }, "wrap": { "defaultValue": null, "description": "Multiline mode. For flex only.", "name": "wrap", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES[".storybook/docgen/Layout.tsx#LayoutProps"] = { docgenInfo: LayoutProps.__docgenInfo, name: "LayoutProps", path: ".storybook/docgen/Layout.tsx#LayoutProps" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/components/emotion/Container/index.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: () => (/* binding */ Container)
/* harmony export */ });
/* unused harmony export useContainerCSS */
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/core-js/modules/es.array.from.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _helpers_emotion_useCSSProperty__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./src/helpers/emotion/useCSSProperty.ts");
/* harmony import */ var _utils_emotion_baseTheme__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./src/utils/emotion/baseTheme.ts");
/* harmony import */ var _utils_emotion_useTheme__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./src/utils/emotion/useTheme.ts");
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
















var _excluded = ["children", "css"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}





var useContainerCSS = function useContainerCSS() {
  var _useTheme = (0,_utils_emotion_useTheme__WEBPACK_IMPORTED_MODULE_17__/* .useTheme */ .D)(),
    layout = _useTheme.layout;
  var layoutTheme = layout || _utils_emotion_baseTheme__WEBPACK_IMPORTED_MODULE_18__/* .baseTheme */ .$.layout;
  var maxWidthCSS = (0,_helpers_emotion_useCSSProperty__WEBPACK_IMPORTED_MODULE_19__/* .useCSSProperty */ .Y)({
    name: 'maxWidth',
    props: {
      value: layoutTheme.container
    }
  });
  var paddingCSS = (0,_helpers_emotion_useCSSProperty__WEBPACK_IMPORTED_MODULE_19__/* .useCSSProperty */ .Y)({
    name: 'padding',
    props: {
      value: layoutTheme.padding
    },
    transform: function transform(_ref) {
      var value = _ref.value;
      return "0 ".concat(value, "px");
    }
  });
  var marginLeftCSS = (0,_helpers_emotion_useCSSProperty__WEBPACK_IMPORTED_MODULE_19__/* .useCSSProperty */ .Y)({
    name: 'marginLeft',
    props: {
      value: layoutTheme.marginLeft
    }
  });
  var marginRightCSS = (0,_helpers_emotion_useCSSProperty__WEBPACK_IMPORTED_MODULE_19__/* .useCSSProperty */ .Y)({
    name: 'marginRight',
    props: {
      value: layoutTheme.marginRight
    }
  });
  return (0,react__WEBPACK_IMPORTED_MODULE_16__.useMemo)(function () {
    return [maxWidthCSS, paddingCSS, marginLeftCSS, marginRightCSS];
  }, [marginLeftCSS, marginRightCSS, maxWidthCSS, paddingCSS]);
};

/**
 * Component for creating main page container with `layout` theme parameters. Uses `maxWidth`, `padding`,`marginLeft`, `marginRight`.
 */
var Container = function Container(_ref2) {
  var children = _ref2.children,
    css = _ref2.css,
    props = _objectWithoutProperties(_ref2, _excluded);
  var themeStyles = useContainerCSS();
  var styles = (0,react__WEBPACK_IMPORTED_MODULE_16__.useMemo)(function () {
    return [].concat(_toConsumableArray(themeStyles), [css]);
  }, [themeStyles, css]);
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_20__/* .jsx */ .Y)("div", _extends({
    css: styles
  }, props), children);
};
try {
    // @ts-ignore
    Container.displayName = "Container";
    // @ts-ignore
    Container.__docgenInfo = { "description": "Component for creating main page container with `layout` theme parameters. Uses `maxWidth`, `padding`,`marginLeft`, `marginRight`.", "displayName": "Container", "props": { "children": { "defaultValue": null, "description": "Container content.", "name": "children", "required": true, "type": { "name": "ReactNode" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/Container/index.tsx#Container"] = { docgenInfo: Container.__docgenInfo, name: "Container", path: "src/components/emotion/Container/index.tsx#Container" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/components/emotion/Layout/index.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  P: () => (/* binding */ Layout)
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.bind.js
var es_function_bind = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reverse.js
var es_array_reverse = __webpack_require__("./node_modules/core-js/modules/es.array.reverse.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.is-integer.js
var es_number_is_integer = __webpack_require__("./node_modules/core-js/modules/es.number.is-integer.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js
var es_array_join = __webpack_require__("./node_modules/core-js/modules/es.array.join.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.trim.js
var es_string_trim = __webpack_require__("./node_modules/core-js/modules/es.string.trim.js");
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
;// CONCATENATED MODULE: ./src/helpers/common/toArray.ts

/**
 * Converts any type to array (arrays are included).
 */
var toArray = function toArray(arg) {
  var _ref;
  return (_ref = []).concat.apply(_ref, [arg]);
};
// EXTERNAL MODULE: ./src/helpers/emotion/useCSSProperty.ts + 1 modules
var useCSSProperty = __webpack_require__("./src/helpers/emotion/useCSSProperty.ts");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
// EXTERNAL MODULE: ./src/utils/emotion/useTheme.ts
var useTheme = __webpack_require__("./src/utils/emotion/useTheme.ts");
;// CONCATENATED MODULE: ./src/components/emotion/Layout/useLayout.ts
/** Импорт React нужен для tsc. */

var LayoutContext = /*#__PURE__*/(0,react.createContext)(undefined);
var useLayout = function useLayout() {
  var context = (0,react.useContext)(LayoutContext);
  if (!context) {
    throw new Error('This component must be used within a <Layout> component');
  }
  return context;
};
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var emotion_react_browser_esm = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
;// CONCATENATED MODULE: ./src/components/emotion/Layout/Item.tsx









var _excluded = ["children", "col", "row", "area", "justify", "align", "order", "grow", "css"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}




/**
 * Inner `Layout` component for creating layout cells.
 */
var Item = function Item(_ref) {
  var children = _ref.children,
    colProp = _ref.col,
    rowProp = _ref.row,
    areaProp = _ref.area,
    justify = _ref.justify,
    alignProp = _ref.align,
    orderProp = _ref.order,
    growProp = _ref.grow,
    css = _ref.css,
    props = _objectWithoutProperties(_ref, _excluded);
  var context = useLayout();
  var gridColumn = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridColumn',
    props: {
      col: colProp
    },
    condition: context.type === 'grid',
    transform: function transform(_ref2) {
      var col = _ref2.col;
      if (Array.isArray(col)) return "".concat(col[0], " / ").concat(col[1]);
      if (Number.isInteger(col)) return "span ".concat(col);
      return col;
    }
  });
  var gridRow = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridRow',
    props: {
      row: rowProp
    },
    condition: context.type === 'grid',
    transform: function transform(_ref3) {
      var row = _ref3.row;
      if (Array.isArray(row)) return "".concat(row[0], " / ").concat(row[1]);
      if (Number.isInteger(row)) return "span ".concat(row);
      return row;
    }
  });
  var gridArea = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridArea',
    props: {
      area: areaProp
    },
    condition: context.type === 'grid'
  });
  var justifySelf = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'justifySelf',
    props: {
      justify: justify
    },
    condition: context.type === 'grid'
  });
  var alignSelf = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'alignSelf',
    props: {
      align: alignProp
    },
    transform: function transform(_ref4) {
      var align = _ref4.align;
      if (context.type === 'flex' && (align === 'start' || align === 'end')) return "flex-".concat(align);
      return align;
    }
  });
  var order = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'order',
    props: {
      order: orderProp
    }
  });
  var flexGrow = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'flexGrow',
    props: {
      grow: growProp,
      auto: context.auto
    },
    condition: context.type === 'flex',
    transform: function transform(_ref5) {
      var grow = _ref5.grow,
        auto = _ref5.auto;
      if (auto) return 1;
      return !Number.isInteger(grow) ? Number(grow) : grow;
    }
  });
  var padding = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'padding',
    props: {
      gap: context.gap
    },
    condition: context.type === 'flex',
    transform: function transform(_ref6) {
      var gap = _ref6.gap;
      if (Array.isArray(gap)) return "".concat(gap[0], "px 0 0 ").concat(gap[1], "px");
      return "".concat(gap, "px 0 0 ").concat(gap, "px");
    }
  });
  var flexBasis = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'flexBasis',
    props: {
      col: colProp,
      auto: context.auto
    },
    condition: context.type === 'flex',
    transform: function transform(_ref7) {
      var col = _ref7.col,
        auto = _ref7.auto;
      if (auto) return auto;
      if (typeof context.cols === 'number' && Number.isInteger(Number(col))) return "".concat(Math.floor(100 * col * 100 / context.cols) / 100, "%");
      return col;
    }
  });
  var layoutItemCss = (0,react.useMemo)(function () {
    return [padding, order, flexGrow, flexBasis, justifySelf, alignSelf, gridColumn, gridRow, gridArea, css];
  }, [padding, order, flexGrow, flexBasis, justifySelf, alignSelf, gridColumn, gridRow, gridArea, css]);
  return (0,emotion_react_browser_esm/* jsx */.Y)("div", _extends({
    css: layoutItemCss
  }, props), children);
};
try {
    // @ts-ignore
    Item.displayName = "Item";
    // @ts-ignore
    Item.__docgenInfo = { "description": "Inner `Layout` component for creating layout cells.", "displayName": "Item", "props": { "children": { "defaultValue": null, "description": "Item content.", "name": "children", "required": false, "type": { "name": "ReactNode" } }, "col": { "defaultValue": null, "description": "Column settings.", "name": "col", "required": false, "type": { "name": "AllowMedia<string | number | [number, number]> | undefined" } }, "row": { "defaultValue": null, "description": "Row settings. For grids only.", "name": "row", "required": false, "type": { "name": "AllowMedia<string | number | [number, number]> | undefined" } }, "area": { "defaultValue": null, "description": "Area name. For grids only.", "name": "area", "required": false, "type": { "name": "AllowMedia<string> | undefined" } }, "justify": { "defaultValue": null, "description": "Main axis self alignment. For grids only.", "name": "justify", "required": false, "type": { "name": "AllowMedia<\"start\" | \"end\" | \"center\" | \"stretch\"> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis self alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<\"start\" | \"end\" | \"center\" | \"stretch\"> | undefined" } }, "order": { "defaultValue": null, "description": "Order.", "name": "order", "required": false, "type": { "name": "AllowMedia<number> | undefined" } }, "grow": { "defaultValue": null, "description": "Expand on all available space. For flex only.", "name": "grow", "required": false, "type": { "name": "AllowMedia<number | boolean> | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/Layout/Item.tsx#Item"] = { docgenInfo: Item.__docgenInfo, name: "Item", path: "src/components/emotion/Layout/Item.tsx#Item" };
}
catch (__react_docgen_typescript_loader_error) { }
;// CONCATENATED MODULE: ./src/components/emotion/Layout/index.tsx













var Layout_excluded = ["type", "inline", "cols", "rows", "areas", "gap", "justify", "align", "autoRows", "autoCols", "direction", "dense", "reverse", "wrap", "auto", "css", "children"];
function Layout_extends() {
  return Layout_extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, Layout_extends.apply(null, arguments);
}
function Layout_objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = Layout_objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function Layout_objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}








/**
 * Component for creating typical grid and flex layouts.
 */
var LayoutComponent = function LayoutComponent(_ref) {
  var _ref$type = _ref.type,
    typeProp = _ref$type === void 0 ? 'grid' : _ref$type,
    inlineProp = _ref.inline,
    colsProp = _ref.cols,
    rowsProp = _ref.rows,
    areasProp = _ref.areas,
    gapProp = _ref.gap,
    justifyProp = _ref.justify,
    alignProp = _ref.align,
    autoRowsProp = _ref.autoRows,
    autoColsProp = _ref.autoCols,
    directionProp = _ref.direction,
    denseProp = _ref.dense,
    reverseProp = _ref.reverse,
    _ref$wrap = _ref.wrap,
    wrapProp = _ref$wrap === void 0 ? true : _ref$wrap,
    autoProp = _ref.auto,
    css = _ref.css,
    children = _ref.children,
    props = Layout_objectWithoutProperties(_ref, Layout_excluded);
  var _useTheme = (0,useTheme/* useTheme */.D)(),
    layout = _useTheme.layout;
  var layoutTheme = layout || baseTheme/* baseTheme */.$.layout;
  var defaultGap = gapProp !== null && gapProp !== void 0 ? gapProp : layoutTheme.gap;
  var defaultCols = colsProp !== null && colsProp !== void 0 ? colsProp : layoutTheme.cols;
  var context = (0,react.useMemo)(function () {
    return {
      type: typeProp,
      gap: defaultGap,
      cols: defaultCols,
      auto: autoProp
    };
  }, [typeProp, autoProp, defaultGap, defaultCols]);
  var display = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'display',
    props: {
      type: context.type,
      inline: inlineProp
    },
    transform: function transform(_ref2) {
      var type = _ref2.type,
        inline = _ref2.inline;
      return inline ? "inline-".concat(type) : type;
    }
  });
  var gridTemplateColumns = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridTemplateColumns',
    props: {
      cols: context.cols,
      auto: context.auto
    },
    condition: context.type === 'grid' && !areasProp,
    transform: function transform(_ref3) {
      var cols = _ref3.cols,
        auto = _ref3.auto;
      if (auto) return "repeat(auto-fill, minmax(".concat(auto, "px, 1fr))");
      if (Number.isInteger(cols)) return "repeat(".concat(cols, ", 1fr)");
      var arr = toArray(cols);
      return arr.map(function (val) {
        return Number.isInteger(val) ? "".concat(val, "fr") : val;
      }).join(' ');
    }
  });
  var gridTemplateRows = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridTemplateRows',
    props: {
      rows: rowsProp
    },
    condition: context.type === 'grid' && !areasProp,
    transform: function transform(_ref4) {
      var rows = _ref4.rows;
      if (Number.isInteger(rows)) return "repeat(".concat(rows, ", 1fr)");
      var arr = toArray(rows);
      return arr.map(function (val) {
        return Number.isInteger(val) ? "".concat(val, "fr") : val;
      }).join(' ');
    }
  });
  var gridTemplateAreas = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridTemplateAreas',
    props: {
      areas: areasProp
    },
    condition: context.type === 'grid',
    transform: function transform(_ref5) {
      var areas = _ref5.areas;
      var arr = toArray(areas);
      return arr.map(function (val) {
        return "\"".concat(val, "\"");
      }).join(' ');
    }
  });
  var gridGap = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridGap',
    props: {
      gap: context.gap
    },
    condition: context.type === 'grid',
    transform: function transform(_ref6) {
      var gap = _ref6.gap;
      if (Array.isArray(gap)) return "".concat(gap[0], "px ").concat(gap[1], "px");
      return gap;
    }
  });
  var margin = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'margin',
    props: {
      gap: context.gap
    },
    condition: context.type === 'flex',
    transform: function transform(_ref7) {
      var gap = _ref7.gap;
      if (Array.isArray(gap)) return "-".concat(gap[0], "px 0 0 -").concat(gap[1], "px");
      return "-".concat(gap, "px 0 0 -").concat(gap, "px");
    }
  });
  var justifyItems = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'justifyItems',
    props: {
      justify: justifyProp
    },
    condition: context.type === 'grid'
  });
  var justifyContent = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'justifyContent',
    props: {
      justify: justifyProp
    },
    condition: context.type === 'flex',
    transform: function transform(_ref8) {
      var justify = _ref8.justify;
      if (justify === 'start' || justify === 'end') return "flex-".concat(justify);
      return justify;
    }
  });
  var alignItems = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'alignItems',
    props: {
      align: alignProp
    },
    transform: function transform(_ref9) {
      var align = _ref9.align;
      if (context.type === 'flex' && (align === 'start' || align === 'end')) return "flex-".concat(align);
      return align;
    }
  });
  var gridAutoRows = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridAutoRows',
    props: {
      autoRows: autoRowsProp
    },
    condition: context.type === 'grid',
    transform: function transform(_ref10) {
      var autoRows = _ref10.autoRows;
      var arr = toArray(autoRows);
      return arr.map(function (val) {
        return Number.isInteger(val) ? "".concat(val, "fr") : val;
      }).join(' ');
    }
  });
  var gridAutoColumns = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridAutoColumns',
    props: {
      autoCols: autoColsProp
    },
    condition: context.type === 'grid',
    transform: function transform(_ref11) {
      var autoCols = _ref11.autoCols;
      var arr = toArray(autoCols);
      return arr.map(function (val) {
        return Number.isInteger(val) ? "".concat(val, "fr") : val;
      }).join(' ');
    }
  });
  var gridAutoFlow = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'gridAutoFlow',
    props: {
      direction: directionProp,
      dense: denseProp
    },
    condition: context.type === 'grid' && (directionProp === 'column' || !!denseProp),
    transform: function transform(_ref12) {
      var direction = _ref12.direction,
        dense = _ref12.dense;
      return "".concat(direction === 'column' ? 'column' : '').concat(dense ? ' dense' : '').trim();
    }
  });
  var flexDirection = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'flexDirection',
    props: {
      direction: directionProp,
      reverse: reverseProp
    },
    condition: context.type === 'flex',
    transform: function transform(_ref13) {
      var direction = _ref13.direction,
        reverse = _ref13.reverse;
      return "".concat(direction === 'column' ? 'column' : 'row').concat(reverse ? '-reverse' : '');
    }
  });
  var flexWrap = (0,useCSSProperty/* useCSSProperty */.Y)({
    name: 'flexWrap',
    props: {
      wrap: wrapProp
    },
    condition: context.type === 'flex',
    transform: function transform(_ref14) {
      var wrap = _ref14.wrap;
      return wrap ? 'wrap' : 'nowrap';
    }
  });
  var layoutCss = (0,react.useMemo)(function () {
    return [display, margin, flexWrap, flexDirection, justifyItems, justifyContent, alignItems, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridAutoColumns, gridAutoRows, gridAutoFlow, gridGap, css];
  }, [display, margin, flexWrap, flexDirection, justifyItems, justifyContent, alignItems, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridAutoColumns, gridAutoRows, gridAutoFlow, gridGap, css]);
  return (0,emotion_react_browser_esm/* jsx */.Y)(LayoutContext.Provider, {
    value: context
  }, (0,emotion_react_browser_esm/* jsx */.Y)("div", Layout_extends({
    css: layoutCss
  }, props), children));
};
var Layout = Object.assign(LayoutComponent, {
  Item: Item
});

try {
    // @ts-ignore
    Layout.displayName = "Layout";
    // @ts-ignore
    Layout.__docgenInfo = { "description": "", "displayName": "Layout", "props": { "children": { "defaultValue": null, "description": "Layout items list.", "name": "children", "required": true, "type": { "name": "ReactNode" } }, "inline": { "defaultValue": null, "description": "Inline mode. Changes `display` type.", "name": "inline", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } }, "justify": { "defaultValue": null, "description": "Main axis alignment.", "name": "justify", "required": false, "type": { "name": "AllowMedia<\"start\" | \"end\" | \"center\" | \"stretch\" | \"space-around\" | \"space-between\" | \"space-evenly\"> | undefined" } }, "align": { "defaultValue": null, "description": "Cross axis alignment.", "name": "align", "required": false, "type": { "name": "AllowMedia<\"start\" | \"end\" | \"center\" | \"stretch\" | \"baseline\"> | undefined" } }, "direction": { "defaultValue": null, "description": "Main axis direction.", "name": "direction", "required": false, "type": { "name": "AllowMedia<\"row\" | \"column\" | \"unset\"> | undefined" } }, "gap": { "defaultValue": null, "description": "Gaps settings.", "name": "gap", "required": false, "type": { "name": "AllowMedia<string | number | [string | number, string | number]> | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "AllowMedia<\"grid\"> | AllowMedia<\"flex\"> | undefined" } }, "rows": { "defaultValue": null, "description": "Rows. For grids only.", "name": "rows", "required": false, "type": { "name": "AllowMedia<string | number | (string | number)[]> | undefined" } }, "areas": { "defaultValue": null, "description": "Areas. For grids only.", "name": "areas", "required": false, "type": { "name": "AllowMedia<string | string[]> | undefined" } }, "autoRows": { "defaultValue": null, "description": "Auto rows size. For grids only.", "name": "autoRows", "required": false, "type": { "name": "AllowMedia<string | number | (string | number)[]> | undefined" } }, "autoCols": { "defaultValue": null, "description": "Auto cols size. For grids only.", "name": "autoCols", "required": false, "type": { "name": "AllowMedia<string | number | (string | number)[]> | undefined" } }, "dense": { "defaultValue": null, "description": "Dense mode. For grids only.", "name": "dense", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } }, "cols": { "defaultValue": null, "description": "Columns settings.", "name": "cols", "required": false, "type": { "name": "AllowMedia<string | number | (string | number)[]> | undefined" } }, "auto": { "defaultValue": null, "description": "Minimum column size in auto mode. Auto mode allows to create columns of equal size without media queries.", "name": "auto", "required": false, "type": { "name": "AllowMedia<number> | undefined" } }, "reverse": { "defaultValue": null, "description": "Reverse directions. For flex only.", "name": "reverse", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } }, "wrap": { "defaultValue": null, "description": "Multiline mode. For flex only.", "name": "wrap", "required": false, "type": { "name": "AllowMedia<boolean> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/Layout/index.tsx#Layout"] = { docgenInfo: Layout.__docgenInfo, name: "Layout", path: "src/components/emotion/Layout/index.tsx#Layout" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/components/emotion/VisuallyHidden/index.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   s: () => (/* binding */ VisuallyHidden)
/* harmony export */ });
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");

var visuallyHiddenCSS = {
  position: 'absolute',
  width: 1,
  height: 1,
  padding: 0,
  border: 'none',
  overflow: 'hidden',
  clip: 'rect(1px, 1px, 1px, 1px)',
  whiteSpace: 'nowrap'
};

/**
 * Component to wrap components to make them visually hidden. These components still will be available for assistive technologies.
 */
var VisuallyHidden = function VisuallyHidden(_ref) {
  var children = _ref.children;
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_0__/* .jsx */ .Y)("div", {
    css: visuallyHiddenCSS
  }, children);
};
try {
    // @ts-ignore
    VisuallyHidden.displayName = "VisuallyHidden";
    // @ts-ignore
    VisuallyHidden.__docgenInfo = { "description": "Component to wrap components to make them visually hidden. These components still will be available for assistive technologies.", "displayName": "VisuallyHidden", "props": { "children": { "defaultValue": null, "description": "Hidden content.", "name": "children", "required": true, "type": { "name": "ReactNode" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/emotion/VisuallyHidden/index.tsx#VisuallyHidden"] = { docgenInfo: VisuallyHidden.__docgenInfo, name: "VisuallyHidden", path: "src/components/emotion/VisuallyHidden/index.tsx#VisuallyHidden" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/components/scss/Container/index.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: () => (/* binding */ Container)
/* harmony export */ });
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _utils_scss_useTheme__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./src/utils/scss/useTheme.ts");
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");





var _excluded = ["children", "className"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}




/**
 * Component for creating main page container with `layout` theme parameters.
 */

var Container = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded);
  var _useScssTheme = (0,_utils_scss_useTheme__WEBPACK_IMPORTED_MODULE_7__/* .useScssTheme */ .W)(),
    styles = _useScssTheme.components.container;
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__/* .jsx */ .Y)("div", _extends({
    className: classnames__WEBPACK_IMPORTED_MODULE_6___default()(styles.container, className),
    ref: ref
  }, props), children);
});

try {
    // @ts-ignore
    ForwardRefExoticComponent.__docgenInfo = { "description": "Component for creating main page container with `layout` theme parameters.", "displayName": "Container", "props": { "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "children": { "defaultValue": null, "description": "Container content.", "name": "children", "required": true, "type": { "name": "ReactNode" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/scss/Container/index.tsx#Container"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: "Container", path: "src/components/scss/Container/index.tsx#Container" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/helpers/common/Placeholder.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   O: () => (/* binding */ Placeholder)
/* harmony export */ });
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _utils_common_scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/utils/common/scale.ts");
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");





var _excluded = ["children", "bg"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}


/**
 * Helper component for visually show content blocks.
 */
var Placeholder = function Placeholder(_ref) {
  var children = _ref.children,
    bg = _ref.bg,
    props = _objectWithoutProperties(_ref, _excluded);
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__/* .jsx */ .Y)("div", _extends({
    css: function css(theme) {
      return {
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        height: '100%',
        padding: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_6__/* .scale */ .h)(2),
        backgroundColor: bg || theme.colors.grey90
      };
    }
  }, props), children);
};
try {
    // @ts-ignore
    Placeholder.displayName = "Placeholder";
    // @ts-ignore
    Placeholder.__docgenInfo = { "description": "Helper component for visually show content blocks.", "displayName": "Placeholder", "props": { "children": { "defaultValue": null, "description": "Placeholder content.", "name": "children", "required": true, "type": { "name": "ReactNode" } }, "bg": { "defaultValue": null, "description": "Background color.", "name": "bg", "required": true, "type": { "name": "string" } }, "accept": { "defaultValue": null, "description": "", "name": "accept", "required": false, "type": { "name": "string | undefined" } }, "acceptCharset": { "defaultValue": null, "description": "", "name": "acceptCharset", "required": false, "type": { "name": "string | undefined" } }, "action": { "defaultValue": null, "description": "", "name": "action", "required": false, "type": { "name": "string | undefined" } }, "allowFullScreen": { "defaultValue": null, "description": "", "name": "allowFullScreen", "required": false, "type": { "name": "boolean | undefined" } }, "allowTransparency": { "defaultValue": null, "description": "", "name": "allowTransparency", "required": false, "type": { "name": "boolean | undefined" } }, "alt": { "defaultValue": null, "description": "", "name": "alt", "required": false, "type": { "name": "string | undefined" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "string | undefined" } }, "async": { "defaultValue": null, "description": "", "name": "async", "required": false, "type": { "name": "boolean | undefined" } }, "autoComplete": { "defaultValue": null, "description": "", "name": "autoComplete", "required": false, "type": { "name": "string | undefined" } }, "autoPlay": { "defaultValue": null, "description": "", "name": "autoPlay", "required": false, "type": { "name": "boolean | undefined" } }, "capture": { "defaultValue": null, "description": "", "name": "capture", "required": false, "type": { "name": "boolean | \"user\" | \"environment\" | undefined" } }, "cellPadding": { "defaultValue": null, "description": "", "name": "cellPadding", "required": false, "type": { "name": "string | number | undefined" } }, "cellSpacing": { "defaultValue": null, "description": "", "name": "cellSpacing", "required": false, "type": { "name": "string | number | undefined" } }, "charSet": { "defaultValue": null, "description": "", "name": "charSet", "required": false, "type": { "name": "string | undefined" } }, "challenge": { "defaultValue": null, "description": "", "name": "challenge", "required": false, "type": { "name": "string | undefined" } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean | undefined" } }, "cite": { "defaultValue": null, "description": "", "name": "cite", "required": false, "type": { "name": "string | undefined" } }, "classID": { "defaultValue": null, "description": "", "name": "classID", "required": false, "type": { "name": "string | undefined" } }, "cols": { "defaultValue": null, "description": "", "name": "cols", "required": false, "type": { "name": "number | undefined" } }, "colSpan": { "defaultValue": null, "description": "", "name": "colSpan", "required": false, "type": { "name": "number | undefined" } }, "controls": { "defaultValue": null, "description": "", "name": "controls", "required": false, "type": { "name": "boolean | undefined" } }, "coords": { "defaultValue": null, "description": "", "name": "coords", "required": false, "type": { "name": "string | undefined" } }, "crossOrigin": { "defaultValue": null, "description": "", "name": "crossOrigin", "required": false, "type": { "name": "CrossOrigin" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "string | undefined" } }, "dateTime": { "defaultValue": null, "description": "", "name": "dateTime", "required": false, "type": { "name": "string | undefined" } }, "default": { "defaultValue": null, "description": "", "name": "default", "required": false, "type": { "name": "boolean | undefined" } }, "defer": { "defaultValue": null, "description": "", "name": "defer", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "download": { "defaultValue": null, "description": "", "name": "download", "required": false, "type": { "name": "any" } }, "encType": { "defaultValue": null, "description": "", "name": "encType", "required": false, "type": { "name": "string | undefined" } }, "form": { "defaultValue": null, "description": "", "name": "form", "required": false, "type": { "name": "string | undefined" } }, "formAction": { "defaultValue": null, "description": "", "name": "formAction", "required": false, "type": { "name": "string | undefined" } }, "formEncType": { "defaultValue": null, "description": "", "name": "formEncType", "required": false, "type": { "name": "string | undefined" } }, "formMethod": { "defaultValue": null, "description": "", "name": "formMethod", "required": false, "type": { "name": "string | undefined" } }, "formNoValidate": { "defaultValue": null, "description": "", "name": "formNoValidate", "required": false, "type": { "name": "boolean | undefined" } }, "formTarget": { "defaultValue": null, "description": "", "name": "formTarget", "required": false, "type": { "name": "string | undefined" } }, "frameBorder": { "defaultValue": null, "description": "", "name": "frameBorder", "required": false, "type": { "name": "string | number | undefined" } }, "headers": { "defaultValue": null, "description": "", "name": "headers", "required": false, "type": { "name": "string | undefined" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string | number | undefined" } }, "high": { "defaultValue": null, "description": "", "name": "high", "required": false, "type": { "name": "number | undefined" } }, "href": { "defaultValue": null, "description": "", "name": "href", "required": false, "type": { "name": "string | undefined" } }, "hrefLang": { "defaultValue": null, "description": "", "name": "hrefLang", "required": false, "type": { "name": "string | undefined" } }, "htmlFor": { "defaultValue": null, "description": "", "name": "htmlFor", "required": false, "type": { "name": "string | undefined" } }, "httpEquiv": { "defaultValue": null, "description": "", "name": "httpEquiv", "required": false, "type": { "name": "string | undefined" } }, "integrity": { "defaultValue": null, "description": "", "name": "integrity", "required": false, "type": { "name": "string | undefined" } }, "keyParams": { "defaultValue": null, "description": "", "name": "keyParams", "required": false, "type": { "name": "string | undefined" } }, "keyType": { "defaultValue": null, "description": "", "name": "keyType", "required": false, "type": { "name": "string | undefined" } }, "kind": { "defaultValue": null, "description": "", "name": "kind", "required": false, "type": { "name": "string | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "string | undefined" } }, "list": { "defaultValue": null, "description": "", "name": "list", "required": false, "type": { "name": "string | undefined" } }, "loop": { "defaultValue": null, "description": "", "name": "loop", "required": false, "type": { "name": "boolean | undefined" } }, "low": { "defaultValue": null, "description": "", "name": "low", "required": false, "type": { "name": "number | undefined" } }, "manifest": { "defaultValue": null, "description": "", "name": "manifest", "required": false, "type": { "name": "string | undefined" } }, "marginHeight": { "defaultValue": null, "description": "", "name": "marginHeight", "required": false, "type": { "name": "number | undefined" } }, "marginWidth": { "defaultValue": null, "description": "", "name": "marginWidth", "required": false, "type": { "name": "number | undefined" } }, "max": { "defaultValue": null, "description": "", "name": "max", "required": false, "type": { "name": "string | number | undefined" } }, "maxLength": { "defaultValue": null, "description": "", "name": "maxLength", "required": false, "type": { "name": "number | undefined" } }, "media": { "defaultValue": null, "description": "", "name": "media", "required": false, "type": { "name": "string | undefined" } }, "mediaGroup": { "defaultValue": null, "description": "", "name": "mediaGroup", "required": false, "type": { "name": "string | undefined" } }, "method": { "defaultValue": null, "description": "", "name": "method", "required": false, "type": { "name": "string | undefined" } }, "min": { "defaultValue": null, "description": "", "name": "min", "required": false, "type": { "name": "string | number | undefined" } }, "minLength": { "defaultValue": null, "description": "", "name": "minLength", "required": false, "type": { "name": "number | undefined" } }, "multiple": { "defaultValue": null, "description": "", "name": "multiple", "required": false, "type": { "name": "boolean | undefined" } }, "muted": { "defaultValue": null, "description": "", "name": "muted", "required": false, "type": { "name": "boolean | undefined" } }, "name": { "defaultValue": null, "description": "", "name": "name", "required": false, "type": { "name": "string | undefined" } }, "noValidate": { "defaultValue": null, "description": "", "name": "noValidate", "required": false, "type": { "name": "boolean | undefined" } }, "open": { "defaultValue": null, "description": "", "name": "open", "required": false, "type": { "name": "boolean | undefined" } }, "optimum": { "defaultValue": null, "description": "", "name": "optimum", "required": false, "type": { "name": "number | undefined" } }, "pattern": { "defaultValue": null, "description": "", "name": "pattern", "required": false, "type": { "name": "string | undefined" } }, "placeholder": { "defaultValue": null, "description": "", "name": "placeholder", "required": false, "type": { "name": "string | undefined" } }, "playsInline": { "defaultValue": null, "description": "", "name": "playsInline", "required": false, "type": { "name": "boolean | undefined" } }, "poster": { "defaultValue": null, "description": "", "name": "poster", "required": false, "type": { "name": "string | undefined" } }, "preload": { "defaultValue": null, "description": "", "name": "preload", "required": false, "type": { "name": "string | undefined" } }, "readOnly": { "defaultValue": null, "description": "", "name": "readOnly", "required": false, "type": { "name": "boolean | undefined" } }, "required": { "defaultValue": null, "description": "", "name": "required", "required": false, "type": { "name": "boolean | undefined" } }, "reversed": { "defaultValue": null, "description": "", "name": "reversed", "required": false, "type": { "name": "boolean | undefined" } }, "rows": { "defaultValue": null, "description": "", "name": "rows", "required": false, "type": { "name": "number | undefined" } }, "rowSpan": { "defaultValue": null, "description": "", "name": "rowSpan", "required": false, "type": { "name": "number | undefined" } }, "sandbox": { "defaultValue": null, "description": "", "name": "sandbox", "required": false, "type": { "name": "string | undefined" } }, "scope": { "defaultValue": null, "description": "", "name": "scope", "required": false, "type": { "name": "string | undefined" } }, "scoped": { "defaultValue": null, "description": "", "name": "scoped", "required": false, "type": { "name": "boolean | undefined" } }, "scrolling": { "defaultValue": null, "description": "", "name": "scrolling", "required": false, "type": { "name": "string | undefined" } }, "seamless": { "defaultValue": null, "description": "", "name": "seamless", "required": false, "type": { "name": "boolean | undefined" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean | undefined" } }, "shape": { "defaultValue": null, "description": "", "name": "shape", "required": false, "type": { "name": "string | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "number | undefined" } }, "sizes": { "defaultValue": null, "description": "", "name": "sizes", "required": false, "type": { "name": "string | undefined" } }, "span": { "defaultValue": null, "description": "", "name": "span", "required": false, "type": { "name": "number | undefined" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string | undefined" } }, "srcDoc": { "defaultValue": null, "description": "", "name": "srcDoc", "required": false, "type": { "name": "string | undefined" } }, "srcLang": { "defaultValue": null, "description": "", "name": "srcLang", "required": false, "type": { "name": "string | undefined" } }, "srcSet": { "defaultValue": null, "description": "", "name": "srcSet", "required": false, "type": { "name": "string | undefined" } }, "start": { "defaultValue": null, "description": "", "name": "start", "required": false, "type": { "name": "number | undefined" } }, "step": { "defaultValue": null, "description": "", "name": "step", "required": false, "type": { "name": "string | number | undefined" } }, "summary": { "defaultValue": null, "description": "", "name": "summary", "required": false, "type": { "name": "string | undefined" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": false, "type": { "name": "string | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string | undefined" } }, "useMap": { "defaultValue": null, "description": "", "name": "useMap", "required": false, "type": { "name": "string | undefined" } }, "value": { "defaultValue": null, "description": "", "name": "value", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": false, "type": { "name": "string | number | undefined" } }, "wmode": { "defaultValue": null, "description": "", "name": "wmode", "required": false, "type": { "name": "string | undefined" } }, "wrap": { "defaultValue": null, "description": "", "name": "wrap", "required": false, "type": { "name": "string | undefined" } }, "defaultChecked": { "defaultValue": null, "description": "", "name": "defaultChecked", "required": false, "type": { "name": "boolean | undefined" } }, "defaultValue": { "defaultValue": null, "description": "", "name": "defaultValue", "required": false, "type": { "name": "string | number | readonly string[] | undefined" } }, "suppressContentEditableWarning": { "defaultValue": null, "description": "", "name": "suppressContentEditableWarning", "required": false, "type": { "name": "boolean | undefined" } }, "suppressHydrationWarning": { "defaultValue": null, "description": "", "name": "suppressHydrationWarning", "required": false, "type": { "name": "boolean | undefined" } }, "accessKey": { "defaultValue": null, "description": "", "name": "accessKey", "required": false, "type": { "name": "string | undefined" } }, "autoFocus": { "defaultValue": null, "description": "", "name": "autoFocus", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "contentEditable": { "defaultValue": null, "description": "", "name": "contentEditable", "required": false, "type": { "name": "Booleanish | \"inherit\" | \"plaintext-only\" | undefined" } }, "contextMenu": { "defaultValue": null, "description": "", "name": "contextMenu", "required": false, "type": { "name": "string | undefined" } }, "dir": { "defaultValue": null, "description": "", "name": "dir", "required": false, "type": { "name": "string | undefined" } }, "draggable": { "defaultValue": null, "description": "", "name": "draggable", "required": false, "type": { "name": "Booleanish | undefined" } }, "hidden": { "defaultValue": null, "description": "", "name": "hidden", "required": false, "type": { "name": "boolean | undefined" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": false, "type": { "name": "string | undefined" } }, "lang": { "defaultValue": null, "description": "", "name": "lang", "required": false, "type": { "name": "string | undefined" } }, "nonce": { "defaultValue": null, "description": "", "name": "nonce", "required": false, "type": { "name": "string | undefined" } }, "slot": { "defaultValue": null, "description": "", "name": "slot", "required": false, "type": { "name": "string | undefined" } }, "spellCheck": { "defaultValue": null, "description": "", "name": "spellCheck", "required": false, "type": { "name": "Booleanish | undefined" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties | undefined" } }, "tabIndex": { "defaultValue": null, "description": "", "name": "tabIndex", "required": false, "type": { "name": "number | undefined" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": false, "type": { "name": "string | undefined" } }, "translate": { "defaultValue": null, "description": "", "name": "translate", "required": false, "type": { "name": "\"yes\" | \"no\" | undefined" } }, "radioGroup": { "defaultValue": null, "description": "", "name": "radioGroup", "required": false, "type": { "name": "string | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "AriaRole | undefined" } }, "about": { "defaultValue": null, "description": "", "name": "about", "required": false, "type": { "name": "string | undefined" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "string | undefined" } }, "datatype": { "defaultValue": null, "description": "", "name": "datatype", "required": false, "type": { "name": "string | undefined" } }, "inlist": { "defaultValue": null, "description": "", "name": "inlist", "required": false, "type": { "name": "any" } }, "prefix": { "defaultValue": null, "description": "", "name": "prefix", "required": false, "type": { "name": "string | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "string | undefined" } }, "rel": { "defaultValue": null, "description": "", "name": "rel", "required": false, "type": { "name": "string | undefined" } }, "resource": { "defaultValue": null, "description": "", "name": "resource", "required": false, "type": { "name": "string | undefined" } }, "rev": { "defaultValue": null, "description": "", "name": "rev", "required": false, "type": { "name": "string | undefined" } }, "typeof": { "defaultValue": null, "description": "", "name": "typeof", "required": false, "type": { "name": "string | undefined" } }, "vocab": { "defaultValue": null, "description": "", "name": "vocab", "required": false, "type": { "name": "string | undefined" } }, "autoCapitalize": { "defaultValue": null, "description": "", "name": "autoCapitalize", "required": false, "type": { "name": "string | undefined" } }, "autoCorrect": { "defaultValue": null, "description": "", "name": "autoCorrect", "required": false, "type": { "name": "string | undefined" } }, "autoSave": { "defaultValue": null, "description": "", "name": "autoSave", "required": false, "type": { "name": "string | undefined" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "string | undefined" } }, "itemProp": { "defaultValue": null, "description": "", "name": "itemProp", "required": false, "type": { "name": "string | undefined" } }, "itemScope": { "defaultValue": null, "description": "", "name": "itemScope", "required": false, "type": { "name": "boolean | undefined" } }, "itemType": { "defaultValue": null, "description": "", "name": "itemType", "required": false, "type": { "name": "string | undefined" } }, "itemID": { "defaultValue": null, "description": "", "name": "itemID", "required": false, "type": { "name": "string | undefined" } }, "itemRef": { "defaultValue": null, "description": "", "name": "itemRef", "required": false, "type": { "name": "string | undefined" } }, "results": { "defaultValue": null, "description": "", "name": "results", "required": false, "type": { "name": "number | undefined" } }, "security": { "defaultValue": null, "description": "", "name": "security", "required": false, "type": { "name": "string | undefined" } }, "unselectable": { "defaultValue": null, "description": "", "name": "unselectable", "required": false, "type": { "name": "\"on\" | \"off\" | undefined" } }, "inputMode": { "defaultValue": null, "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}", "name": "inputMode", "required": false, "type": { "name": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | undefined" } }, "is": { "defaultValue": null, "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}", "name": "is", "required": false, "type": { "name": "string | undefined" } }, "aria-activedescendant": { "defaultValue": null, "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.", "name": "aria-activedescendant", "required": false, "type": { "name": "string | undefined" } }, "aria-atomic": { "defaultValue": null, "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.", "name": "aria-atomic", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-autocomplete": { "defaultValue": null, "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.", "name": "aria-autocomplete", "required": false, "type": { "name": "\"none\" | \"list\" | \"inline\" | \"both\" | undefined" } }, "aria-braillelabel": { "defaultValue": null, "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.", "name": "aria-braillelabel", "required": false, "type": { "name": "string | undefined" } }, "aria-brailleroledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.", "name": "aria-brailleroledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-busy": { "defaultValue": null, "description": "", "name": "aria-busy", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-checked": { "defaultValue": null, "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.", "name": "aria-checked", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-colcount": { "defaultValue": null, "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.", "name": "aria-colcount", "required": false, "type": { "name": "number | undefined" } }, "aria-colindex": { "defaultValue": null, "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.", "name": "aria-colindex", "required": false, "type": { "name": "number | undefined" } }, "aria-colindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.", "name": "aria-colindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-colspan": { "defaultValue": null, "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.", "name": "aria-colspan", "required": false, "type": { "name": "number | undefined" } }, "aria-controls": { "defaultValue": null, "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.", "name": "aria-controls", "required": false, "type": { "name": "string | undefined" } }, "aria-current": { "defaultValue": null, "description": "Indicates the element that represents the current item within a container or set of related elements.", "name": "aria-current", "required": false, "type": { "name": "boolean | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\" | \"time\" | undefined" } }, "aria-describedby": { "defaultValue": null, "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby", "name": "aria-describedby", "required": false, "type": { "name": "string | undefined" } }, "aria-description": { "defaultValue": null, "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.", "name": "aria-description", "required": false, "type": { "name": "string | undefined" } }, "aria-details": { "defaultValue": null, "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.", "name": "aria-details", "required": false, "type": { "name": "string | undefined" } }, "aria-disabled": { "defaultValue": null, "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.", "name": "aria-disabled", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-dropeffect": { "defaultValue": null, "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1", "name": "aria-dropeffect", "required": false, "type": { "name": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined" } }, "aria-errormessage": { "defaultValue": null, "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.", "name": "aria-errormessage", "required": false, "type": { "name": "string | undefined" } }, "aria-expanded": { "defaultValue": null, "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.", "name": "aria-expanded", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-flowto": { "defaultValue": null, "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.", "name": "aria-flowto", "required": false, "type": { "name": "string | undefined" } }, "aria-grabbed": { "defaultValue": null, "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1", "name": "aria-grabbed", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-haspopup": { "defaultValue": null, "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.", "name": "aria-haspopup", "required": false, "type": { "name": "boolean | \"grid\" | \"true\" | \"false\" | \"dialog\" | \"listbox\" | \"menu\" | \"tree\" | undefined" } }, "aria-hidden": { "defaultValue": null, "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.", "name": "aria-hidden", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-invalid": { "defaultValue": null, "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.", "name": "aria-invalid", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined" } }, "aria-keyshortcuts": { "defaultValue": null, "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.", "name": "aria-keyshortcuts", "required": false, "type": { "name": "string | undefined" } }, "aria-label": { "defaultValue": null, "description": "Defines a string value that labels the current element.\n@see aria-labelledby.", "name": "aria-label", "required": false, "type": { "name": "string | undefined" } }, "aria-labelledby": { "defaultValue": null, "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.", "name": "aria-labelledby", "required": false, "type": { "name": "string | undefined" } }, "aria-level": { "defaultValue": null, "description": "Defines the hierarchical level of an element within a structure.", "name": "aria-level", "required": false, "type": { "name": "number | undefined" } }, "aria-live": { "defaultValue": null, "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.", "name": "aria-live", "required": false, "type": { "name": "\"off\" | \"assertive\" | \"polite\" | undefined" } }, "aria-modal": { "defaultValue": null, "description": "Indicates whether an element is modal when displayed.", "name": "aria-modal", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiline": { "defaultValue": null, "description": "Indicates whether a text box accepts multiple lines of input or only a single line.", "name": "aria-multiline", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-multiselectable": { "defaultValue": null, "description": "Indicates that the user may select more than one item from the current selectable descendants.", "name": "aria-multiselectable", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-orientation": { "defaultValue": null, "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.", "name": "aria-orientation", "required": false, "type": { "name": "\"horizontal\" | \"vertical\" | undefined" } }, "aria-owns": { "defaultValue": null, "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.", "name": "aria-owns", "required": false, "type": { "name": "string | undefined" } }, "aria-placeholder": { "defaultValue": null, "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.", "name": "aria-placeholder", "required": false, "type": { "name": "string | undefined" } }, "aria-posinset": { "defaultValue": null, "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.", "name": "aria-posinset", "required": false, "type": { "name": "number | undefined" } }, "aria-pressed": { "defaultValue": null, "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.", "name": "aria-pressed", "required": false, "type": { "name": "boolean | \"true\" | \"false\" | \"mixed\" | undefined" } }, "aria-readonly": { "defaultValue": null, "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.", "name": "aria-readonly", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-relevant": { "defaultValue": null, "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.", "name": "aria-relevant", "required": false, "type": { "name": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined" } }, "aria-required": { "defaultValue": null, "description": "Indicates that user input is required on the element before a form may be submitted.", "name": "aria-required", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-roledescription": { "defaultValue": null, "description": "Defines a human-readable, author-localized description for the role of an element.", "name": "aria-roledescription", "required": false, "type": { "name": "string | undefined" } }, "aria-rowcount": { "defaultValue": null, "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.", "name": "aria-rowcount", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindex": { "defaultValue": null, "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.", "name": "aria-rowindex", "required": false, "type": { "name": "number | undefined" } }, "aria-rowindextext": { "defaultValue": null, "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.", "name": "aria-rowindextext", "required": false, "type": { "name": "string | undefined" } }, "aria-rowspan": { "defaultValue": null, "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.", "name": "aria-rowspan", "required": false, "type": { "name": "number | undefined" } }, "aria-selected": { "defaultValue": null, "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.", "name": "aria-selected", "required": false, "type": { "name": "Booleanish | undefined" } }, "aria-setsize": { "defaultValue": null, "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.", "name": "aria-setsize", "required": false, "type": { "name": "number | undefined" } }, "aria-sort": { "defaultValue": null, "description": "Indicates if items in a table or grid are sorted in ascending or descending order.", "name": "aria-sort", "required": false, "type": { "name": "\"none\" | \"ascending\" | \"descending\" | \"other\" | undefined" } }, "aria-valuemax": { "defaultValue": null, "description": "Defines the maximum allowed value for a range widget.", "name": "aria-valuemax", "required": false, "type": { "name": "number | undefined" } }, "aria-valuemin": { "defaultValue": null, "description": "Defines the minimum allowed value for a range widget.", "name": "aria-valuemin", "required": false, "type": { "name": "number | undefined" } }, "aria-valuenow": { "defaultValue": null, "description": "Defines the current value for a range widget.\n@see aria-valuetext.", "name": "aria-valuenow", "required": false, "type": { "name": "number | undefined" } }, "aria-valuetext": { "defaultValue": null, "description": "Defines the human readable text alternative of aria-valuenow for a range widget.", "name": "aria-valuetext", "required": false, "type": { "name": "string | undefined" } }, "dangerouslySetInnerHTML": { "defaultValue": null, "description": "", "name": "dangerouslySetInnerHTML", "required": false, "type": { "name": "{ __html: string | TrustedHTML; } | undefined" } }, "onCopy": { "defaultValue": null, "description": "", "name": "onCopy", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCopyCapture": { "defaultValue": null, "description": "", "name": "onCopyCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCut": { "defaultValue": null, "description": "", "name": "onCut", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCutCapture": { "defaultValue": null, "description": "", "name": "onCutCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPaste": { "defaultValue": null, "description": "", "name": "onPaste", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onPasteCapture": { "defaultValue": null, "description": "", "name": "onPasteCapture", "required": false, "type": { "name": "ClipboardEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEnd": { "defaultValue": null, "description": "", "name": "onCompositionEnd", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionEndCapture": { "defaultValue": null, "description": "", "name": "onCompositionEndCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStart": { "defaultValue": null, "description": "", "name": "onCompositionStart", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionStartCapture": { "defaultValue": null, "description": "", "name": "onCompositionStartCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdate": { "defaultValue": null, "description": "", "name": "onCompositionUpdate", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onCompositionUpdateCapture": { "defaultValue": null, "description": "", "name": "onCompositionUpdateCapture", "required": false, "type": { "name": "CompositionEventHandler<HTMLDivElement> | undefined" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onFocusCapture": { "defaultValue": null, "description": "", "name": "onFocusCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlur": { "defaultValue": null, "description": "", "name": "onBlur", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onBlurCapture": { "defaultValue": null, "description": "", "name": "onBlurCapture", "required": false, "type": { "name": "FocusEventHandler<HTMLDivElement> | undefined" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onChangeCapture": { "defaultValue": null, "description": "", "name": "onChangeCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInput": { "defaultValue": null, "description": "", "name": "onBeforeInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onBeforeInputCapture": { "defaultValue": null, "description": "", "name": "onBeforeInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInput": { "defaultValue": null, "description": "", "name": "onInput", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInputCapture": { "defaultValue": null, "description": "", "name": "onInputCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onReset": { "defaultValue": null, "description": "", "name": "onReset", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onResetCapture": { "defaultValue": null, "description": "", "name": "onResetCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onSubmitCapture": { "defaultValue": null, "description": "", "name": "onSubmitCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalid": { "defaultValue": null, "description": "", "name": "onInvalid", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onInvalidCapture": { "defaultValue": null, "description": "", "name": "onInvalidCapture", "required": false, "type": { "name": "FormEventHandler<HTMLDivElement> | undefined" } }, "onLoad": { "defaultValue": null, "description": "", "name": "onLoad", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadCapture": { "defaultValue": null, "description": "", "name": "onLoadCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onError": { "defaultValue": null, "description": "", "name": "onError", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onErrorCapture": { "defaultValue": null, "description": "", "name": "onErrorCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onKeyDown": { "defaultValue": null, "description": "", "name": "onKeyDown", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyDownCapture": { "defaultValue": null, "description": "", "name": "onKeyDownCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPress": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPress", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyPressCapture": { "defaultValue": null, "description": "@deprecated", "name": "onKeyPressCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUp": { "defaultValue": null, "description": "", "name": "onKeyUp", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onKeyUpCapture": { "defaultValue": null, "description": "", "name": "onKeyUpCapture", "required": false, "type": { "name": "KeyboardEventHandler<HTMLDivElement> | undefined" } }, "onAbort": { "defaultValue": null, "description": "", "name": "onAbort", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAbortCapture": { "defaultValue": null, "description": "", "name": "onAbortCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlay": { "defaultValue": null, "description": "", "name": "onCanPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayCapture": { "defaultValue": null, "description": "", "name": "onCanPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThrough": { "defaultValue": null, "description": "", "name": "onCanPlayThrough", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onCanPlayThroughCapture": { "defaultValue": null, "description": "", "name": "onCanPlayThroughCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChange": { "defaultValue": null, "description": "", "name": "onDurationChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onDurationChangeCapture": { "defaultValue": null, "description": "", "name": "onDurationChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptied": { "defaultValue": null, "description": "", "name": "onEmptied", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEmptiedCapture": { "defaultValue": null, "description": "", "name": "onEmptiedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncrypted": { "defaultValue": null, "description": "", "name": "onEncrypted", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEncryptedCapture": { "defaultValue": null, "description": "", "name": "onEncryptedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEnded": { "defaultValue": null, "description": "", "name": "onEnded", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onEndedCapture": { "defaultValue": null, "description": "", "name": "onEndedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedData": { "defaultValue": null, "description": "", "name": "onLoadedData", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedDataCapture": { "defaultValue": null, "description": "", "name": "onLoadedDataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadata": { "defaultValue": null, "description": "", "name": "onLoadedMetadata", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadedMetadataCapture": { "defaultValue": null, "description": "", "name": "onLoadedMetadataCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStart": { "defaultValue": null, "description": "", "name": "onLoadStart", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onLoadStartCapture": { "defaultValue": null, "description": "", "name": "onLoadStartCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPause": { "defaultValue": null, "description": "", "name": "onPause", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPauseCapture": { "defaultValue": null, "description": "", "name": "onPauseCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlay": { "defaultValue": null, "description": "", "name": "onPlay", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayCapture": { "defaultValue": null, "description": "", "name": "onPlayCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlaying": { "defaultValue": null, "description": "", "name": "onPlaying", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onPlayingCapture": { "defaultValue": null, "description": "", "name": "onPlayingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgress": { "defaultValue": null, "description": "", "name": "onProgress", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onProgressCapture": { "defaultValue": null, "description": "", "name": "onProgressCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChange": { "defaultValue": null, "description": "", "name": "onRateChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onRateChangeCapture": { "defaultValue": null, "description": "", "name": "onRateChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResize": { "defaultValue": null, "description": "", "name": "onResize", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onResizeCapture": { "defaultValue": null, "description": "", "name": "onResizeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeked": { "defaultValue": null, "description": "", "name": "onSeeked", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekedCapture": { "defaultValue": null, "description": "", "name": "onSeekedCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeeking": { "defaultValue": null, "description": "", "name": "onSeeking", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSeekingCapture": { "defaultValue": null, "description": "", "name": "onSeekingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalled": { "defaultValue": null, "description": "", "name": "onStalled", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onStalledCapture": { "defaultValue": null, "description": "", "name": "onStalledCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspend": { "defaultValue": null, "description": "", "name": "onSuspend", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSuspendCapture": { "defaultValue": null, "description": "", "name": "onSuspendCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdate": { "defaultValue": null, "description": "", "name": "onTimeUpdate", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTimeUpdateCapture": { "defaultValue": null, "description": "", "name": "onTimeUpdateCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChange": { "defaultValue": null, "description": "", "name": "onVolumeChange", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onVolumeChangeCapture": { "defaultValue": null, "description": "", "name": "onVolumeChangeCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaiting": { "defaultValue": null, "description": "", "name": "onWaiting", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onWaitingCapture": { "defaultValue": null, "description": "", "name": "onWaitingCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onAuxClick": { "defaultValue": null, "description": "", "name": "onAuxClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onAuxClickCapture": { "defaultValue": null, "description": "", "name": "onAuxClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onClickCapture": { "defaultValue": null, "description": "", "name": "onClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenu": { "defaultValue": null, "description": "", "name": "onContextMenu", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onContextMenuCapture": { "defaultValue": null, "description": "", "name": "onContextMenuCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClick": { "defaultValue": null, "description": "", "name": "onDoubleClick", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDoubleClickCapture": { "defaultValue": null, "description": "", "name": "onDoubleClickCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragCapture": { "defaultValue": null, "description": "", "name": "onDragCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEndCapture": { "defaultValue": null, "description": "", "name": "onDragEndCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnter": { "defaultValue": null, "description": "", "name": "onDragEnter", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragEnterCapture": { "defaultValue": null, "description": "", "name": "onDragEnterCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExit": { "defaultValue": null, "description": "", "name": "onDragExit", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragExitCapture": { "defaultValue": null, "description": "", "name": "onDragExitCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeave": { "defaultValue": null, "description": "", "name": "onDragLeave", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragLeaveCapture": { "defaultValue": null, "description": "", "name": "onDragLeaveCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOver": { "defaultValue": null, "description": "", "name": "onDragOver", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragOverCapture": { "defaultValue": null, "description": "", "name": "onDragOverCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDragStartCapture": { "defaultValue": null, "description": "", "name": "onDragStartCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDrop": { "defaultValue": null, "description": "", "name": "onDrop", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onDropCapture": { "defaultValue": null, "description": "", "name": "onDropCapture", "required": false, "type": { "name": "DragEventHandler<HTMLDivElement> | undefined" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseDownCapture": { "defaultValue": null, "description": "", "name": "onMouseDownCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseMoveCapture": { "defaultValue": null, "description": "", "name": "onMouseMoveCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOutCapture": { "defaultValue": null, "description": "", "name": "onMouseOutCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOver": { "defaultValue": null, "description": "", "name": "onMouseOver", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseOverCapture": { "defaultValue": null, "description": "", "name": "onMouseOverCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onMouseUpCapture": { "defaultValue": null, "description": "", "name": "onMouseUpCapture", "required": false, "type": { "name": "MouseEventHandler<HTMLDivElement> | undefined" } }, "onSelect": { "defaultValue": null, "description": "", "name": "onSelect", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onSelectCapture": { "defaultValue": null, "description": "", "name": "onSelectCapture", "required": false, "type": { "name": "ReactEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancel": { "defaultValue": null, "description": "", "name": "onTouchCancel", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchCancelCapture": { "defaultValue": null, "description": "", "name": "onTouchCancelCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEnd": { "defaultValue": null, "description": "", "name": "onTouchEnd", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchEndCapture": { "defaultValue": null, "description": "", "name": "onTouchEndCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMove": { "defaultValue": null, "description": "", "name": "onTouchMove", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchMoveCapture": { "defaultValue": null, "description": "", "name": "onTouchMoveCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStart": { "defaultValue": null, "description": "", "name": "onTouchStart", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onTouchStartCapture": { "defaultValue": null, "description": "", "name": "onTouchStartCapture", "required": false, "type": { "name": "TouchEventHandler<HTMLDivElement> | undefined" } }, "onPointerDown": { "defaultValue": null, "description": "", "name": "onPointerDown", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerDownCapture": { "defaultValue": null, "description": "", "name": "onPointerDownCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMove": { "defaultValue": null, "description": "", "name": "onPointerMove", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerMoveCapture": { "defaultValue": null, "description": "", "name": "onPointerMoveCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUp": { "defaultValue": null, "description": "", "name": "onPointerUp", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerUpCapture": { "defaultValue": null, "description": "", "name": "onPointerUpCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancel": { "defaultValue": null, "description": "", "name": "onPointerCancel", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerCancelCapture": { "defaultValue": null, "description": "", "name": "onPointerCancelCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerEnter": { "defaultValue": null, "description": "", "name": "onPointerEnter", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerLeave": { "defaultValue": null, "description": "", "name": "onPointerLeave", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOver": { "defaultValue": null, "description": "", "name": "onPointerOver", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOverCapture": { "defaultValue": null, "description": "", "name": "onPointerOverCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOut": { "defaultValue": null, "description": "", "name": "onPointerOut", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onPointerOutCapture": { "defaultValue": null, "description": "", "name": "onPointerOutCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onGotPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onGotPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onLostPointerCaptureCapture": { "defaultValue": null, "description": "", "name": "onLostPointerCaptureCapture", "required": false, "type": { "name": "PointerEventHandler<HTMLDivElement> | undefined" } }, "onScroll": { "defaultValue": null, "description": "", "name": "onScroll", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onScrollCapture": { "defaultValue": null, "description": "", "name": "onScrollCapture", "required": false, "type": { "name": "UIEventHandler<HTMLDivElement> | undefined" } }, "onWheel": { "defaultValue": null, "description": "", "name": "onWheel", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onWheelCapture": { "defaultValue": null, "description": "", "name": "onWheelCapture", "required": false, "type": { "name": "WheelEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStart": { "defaultValue": null, "description": "", "name": "onAnimationStart", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationStartCapture": { "defaultValue": null, "description": "", "name": "onAnimationStartCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEnd": { "defaultValue": null, "description": "", "name": "onAnimationEnd", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationEndCapture": { "defaultValue": null, "description": "", "name": "onAnimationEndCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIteration": { "defaultValue": null, "description": "", "name": "onAnimationIteration", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onAnimationIterationCapture": { "defaultValue": null, "description": "", "name": "onAnimationIterationCapture", "required": false, "type": { "name": "AnimationEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEnd": { "defaultValue": null, "description": "", "name": "onTransitionEnd", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "onTransitionEndCapture": { "defaultValue": null, "description": "", "name": "onTransitionEndCapture", "required": false, "type": { "name": "TransitionEventHandler<HTMLDivElement> | undefined" } }, "ref": { "defaultValue": null, "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}", "name": "ref", "required": false, "type": { "name": "LegacyRef<HTMLDivElement> | undefined" } }, "key": { "defaultValue": null, "description": "", "name": "key", "required": false, "type": { "name": "Key | null | undefined" } }, "css": { "defaultValue": null, "description": "", "name": "css", "required": false, "type": { "name": "Interpolation<Theme>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/helpers/common/Placeholder.tsx#Placeholder"] = { docgenInfo: Placeholder.__docgenInfo, name: "Placeholder", path: "src/helpers/common/Placeholder.tsx#Placeholder" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/helpers/common/Tooltip.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: () => (/* binding */ Tooltip)
/* harmony export */ });
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/core-js/modules/web.timers.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var _tippyjs_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/@tippyjs/react/dist/tippy-react.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var tippy_js_animations_shift_away_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/tippy.js/animations/shift-away.css");
/* harmony import */ var tippy_js_dist_tippy_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/tippy.js/dist/tippy.css");
/* harmony import */ var _icons_tokens_medium_checkCircle_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./src/icons/tokens/medium/checkCircle.svg");
/* harmony import */ var _utils_common_scale__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./src/utils/common/scale.ts");
/* harmony import */ var _utils_emotion_baseTheme__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./src/utils/emotion/baseTheme.ts");







var _excluded = ["children", "content"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}








/**
 * Tooltip with success icon. Helper component for show after successful clipboard copy.
 */

var Tooltip = function Tooltip(_ref) {
  var children = _ref.children,
    content = _ref.content,
    props = _objectWithoutProperties(_ref, _excluded);
  var colors = _utils_emotion_baseTheme__WEBPACK_IMPORTED_MODULE_9__/* .baseTheme */ .$.colors;
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_10__/* .jsx */ .Y)(_tippyjs_react__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Ay, _extends({
    content: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_10__/* .jsx */ .Y)(react__WEBPACK_IMPORTED_MODULE_6__.Fragment, null, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_10__/* .jsx */ .Y)(_icons_tokens_medium_checkCircle_svg__WEBPACK_IMPORTED_MODULE_12__["default"], {
      fill: colors === null || colors === void 0 ? void 0 : colors.success,
      css:
      /*#__PURE__*/
      /*#__PURE__*/
      /*#__PURE__*/
      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_10__/* .css */ .AH)({
        marginRight: (0,_utils_common_scale__WEBPACK_IMPORTED_MODULE_13__/* .scale */ .h)(1),
        verticalAlign: 'middle'
      },  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0,  true ? "" : 0)
    }), content),
    trigger: "click",
    arrow: false,
    animation: "shift-away",
    onShow: function onShow(instance) {
      setTimeout(function () {
        instance.hide();
      }, 1000);
    }
  }, props), children);
};
try {
    // @ts-ignore
    Tooltip.displayName = "Tooltip";
    // @ts-ignore
    Tooltip.__docgenInfo = { "description": "Tooltip with success icon. Helper component for show after successful clipboard copy.", "displayName": "Tooltip", "props": { "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "ReactNode" } }, "visible": { "defaultValue": null, "description": "", "name": "visible", "required": false, "type": { "name": "boolean | undefined" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string | undefined" } }, "singleton": { "defaultValue": null, "description": "", "name": "singleton", "required": false, "type": { "name": "SingletonObject | undefined" } }, "reference": { "defaultValue": null, "description": "", "name": "reference", "required": false, "type": { "name": "Element | RefObject<Element> | null | undefined" } }, "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "Ref<Element> | undefined" } }, "render": { "defaultValue": null, "description": "", "name": "render", "required": false, "type": { "name": "((attrs: { 'data-placement': Placement; 'data-reference-hidden'?: string | undefined; 'data-escaped'?: string | undefined; }, content?: ReactNode, instance?: Instance<Props> | undefined) => ReactNode) | undefined" } }, "role": { "defaultValue": null, "description": "", "name": "role", "required": false, "type": { "name": "string | undefined" } }, "offset": { "defaultValue": null, "description": "", "name": "offset", "required": false, "type": { "name": "[number, number] | (({ placement, popper, reference, }: { placement: Placement; popper: Rect; reference: Rect; }) => [number, number]) | undefined" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "string | undefined" } }, "plugins": { "defaultValue": null, "description": "", "name": "plugins", "required": false, "type": { "name": "Plugin<unknown>[] | undefined" } }, "maxWidth": { "defaultValue": null, "description": "", "name": "maxWidth", "required": false, "type": { "name": "string | number | undefined" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number | undefined" } }, "animation": { "defaultValue": null, "description": "", "name": "animation", "required": false, "type": { "name": "string | boolean | undefined" } }, "animateFill": { "defaultValue": null, "description": "", "name": "animateFill", "required": false, "type": { "name": "boolean | undefined" } }, "appendTo": { "defaultValue": null, "description": "", "name": "appendTo", "required": false, "type": { "name": "Element | \"parent\" | ((ref: Element) => Element) | undefined" } }, "aria": { "defaultValue": null, "description": "", "name": "aria", "required": false, "type": { "name": "{ content?: \"auto\" | \"describedby\" | \"labelledby\" | null | undefined; expanded?: boolean | \"auto\" | undefined; } | undefined" } }, "delay": { "defaultValue": null, "description": "", "name": "delay", "required": false, "type": { "name": "number | [number | null, number | null] | undefined" } }, "duration": { "defaultValue": null, "description": "", "name": "duration", "required": false, "type": { "name": "number | [number | null, number | null] | undefined" } }, "followCursor": { "defaultValue": null, "description": "", "name": "followCursor", "required": false, "type": { "name": "boolean | \"horizontal\" | \"vertical\" | \"initial\" | undefined" } }, "getReferenceClientRect": { "defaultValue": null, "description": "", "name": "getReferenceClientRect", "required": false, "type": { "name": "GetReferenceClientRect | null | undefined" } }, "hideOnClick": { "defaultValue": null, "description": "", "name": "hideOnClick", "required": false, "type": { "name": "boolean | \"toggle\" | undefined" } }, "ignoreAttributes": { "defaultValue": null, "description": "", "name": "ignoreAttributes", "required": false, "type": { "name": "boolean | undefined" } }, "inlinePositioning": { "defaultValue": null, "description": "", "name": "inlinePositioning", "required": false, "type": { "name": "boolean | undefined" } }, "interactive": { "defaultValue": null, "description": "", "name": "interactive", "required": false, "type": { "name": "boolean | undefined" } }, "interactiveBorder": { "defaultValue": null, "description": "", "name": "interactiveBorder", "required": false, "type": { "name": "number | undefined" } }, "interactiveDebounce": { "defaultValue": null, "description": "", "name": "interactiveDebounce", "required": false, "type": { "name": "number | undefined" } }, "moveTransition": { "defaultValue": null, "description": "", "name": "moveTransition", "required": false, "type": { "name": "string | undefined" } }, "placement": { "defaultValue": null, "description": "", "name": "placement", "required": false, "type": { "name": "Placement | undefined" } }, "popperOptions": { "defaultValue": null, "description": "", "name": "popperOptions", "required": false, "type": { "name": "Partial<Options> | undefined" } }, "showOnCreate": { "defaultValue": null, "description": "", "name": "showOnCreate", "required": false, "type": { "name": "boolean | undefined" } }, "sticky": { "defaultValue": null, "description": "", "name": "sticky", "required": false, "type": { "name": "boolean | \"reference\" | \"popper\" | undefined" } }, "touch": { "defaultValue": null, "description": "", "name": "touch", "required": false, "type": { "name": "boolean | \"hold\" | [\"hold\", number] | undefined" } }, "trigger": { "defaultValue": null, "description": "", "name": "trigger", "required": false, "type": { "name": "string | undefined" } }, "triggerTarget": { "defaultValue": null, "description": "", "name": "triggerTarget", "required": false, "type": { "name": "Element | Element[] | null | undefined" } }, "onAfterUpdate": { "defaultValue": null, "description": "", "name": "onAfterUpdate", "required": false, "type": { "name": "((instance: Instance<Props>, partialProps: Partial<Props>) => void) | undefined" } }, "onBeforeUpdate": { "defaultValue": null, "description": "", "name": "onBeforeUpdate", "required": false, "type": { "name": "((instance: Instance<Props>, partialProps: Partial<Props>) => void) | undefined" } }, "onCreate": { "defaultValue": null, "description": "", "name": "onCreate", "required": false, "type": { "name": "((instance: Instance<Props>) => void) | undefined" } }, "onDestroy": { "defaultValue": null, "description": "", "name": "onDestroy", "required": false, "type": { "name": "((instance: Instance<Props>) => void) | undefined" } }, "onHidden": { "defaultValue": null, "description": "", "name": "onHidden", "required": false, "type": { "name": "((instance: Instance<Props>) => void) | undefined" } }, "onHide": { "defaultValue": null, "description": "", "name": "onHide", "required": false, "type": { "name": "((instance: Instance<Props>) => false | void) | undefined" } }, "onMount": { "defaultValue": null, "description": "", "name": "onMount", "required": false, "type": { "name": "((instance: Instance<Props>) => void) | undefined" } }, "onShow": { "defaultValue": null, "description": "", "name": "onShow", "required": false, "type": { "name": "((instance: Instance<Props>) => false | void) | undefined" } }, "onShown": { "defaultValue": null, "description": "", "name": "onShown", "required": false, "type": { "name": "((instance: Instance<Props>) => void) | undefined" } }, "onTrigger": { "defaultValue": null, "description": "", "name": "onTrigger", "required": false, "type": { "name": "((instance: Instance<Props>, event: Event) => void) | undefined" } }, "onUntrigger": { "defaultValue": null, "description": "", "name": "onUntrigger", "required": false, "type": { "name": "((instance: Instance<Props>, event: Event) => void) | undefined" } }, "onClickOutside": { "defaultValue": null, "description": "", "name": "onClickOutside", "required": false, "type": { "name": "((instance: Instance<Props>, event: Event) => void) | undefined" } }, "allowHTML": { "defaultValue": null, "description": "", "name": "allowHTML", "required": false, "type": { "name": "boolean | undefined" } }, "arrow": { "defaultValue": null, "description": "", "name": "arrow", "required": false, "type": { "name": "string | boolean | SVGElement | DocumentFragment | undefined" } }, "inertia": { "defaultValue": null, "description": "", "name": "inertia", "required": false, "type": { "name": "boolean | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/helpers/common/Tooltip.tsx#Tooltip"] = { docgenInfo: Tooltip.__docgenInfo, name: "Tooltip", path: "src/helpers/common/Tooltip.tsx#Tooltip" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/helpers/common/constants.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Lk: () => (/* binding */ MINOR_MAX),
/* harmony export */   Md: () => (/* binding */ BREAKPOINTS_NAMES),
/* harmony export */   PQ: () => (/* binding */ FONT_STACK),
/* harmony export */   vV: () => (/* binding */ MAJOR_STEP)
/* harmony export */ });
var BREAKPOINTS_NAMES = ['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs', 'xxs', 'xxxs'];
var FONT_STACK = '-apple-system, BlinkMacSystemFont, "Segoe UI", "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "Helvetica Neue", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"';
var MAJOR_STEP = 8;
var MINOR_MAX = 40;

/***/ }),

/***/ "./src/helpers/common/copyToClipboard.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: () => (/* binding */ copyToClipboard)
/* harmony export */ });
/**
 * Copy text to user clipboard.
 */
var copyToClipboard = function copyToClipboard(text, focusRef) {
  var selection = document.getSelection();
  if (!selection) return;
  var el = document.createElement('textarea');
  el.value = text;
  el.setAttribute('readonly', '');
  el.style.position = 'absolute';
  el.style.left = '-9999px';
  document.body.appendChild(el);
  var selected = selection.rangeCount > 0 ? selection.getRangeAt(0) : false;
  el.select();
  document.execCommand('copy');
  document.body.removeChild(el);
  if (selected) {
    selection.removeAllRanges();
    selection.addRange(selected);
  }
  if (focusRef && focusRef.current) focusRef.current.focus();
};

/***/ }),

/***/ "./src/helpers/emotion/typography.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I: () => (/* binding */ typography)
/* harmony export */ });
/* harmony import */ var _utils_emotion_baseTheme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/utils/emotion/baseTheme.ts");
/* harmony import */ var _utils_emotion_typography__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/utils/emotion/typography.ts");
/** Импорт CSSObject нужен для tsc. */




/**
 * `typography` helper with baseTheme. For use with inner components styling (such autokits).
 */
var typography = function typography(name) {
  return (0,_utils_emotion_typography__WEBPACK_IMPORTED_MODULE_0__/* .typography */ .I)(name, _utils_emotion_baseTheme__WEBPACK_IMPORTED_MODULE_1__/* .baseTheme */ .$);
};

/***/ }),

/***/ "./src/helpers/emotion/useCSSProperty.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Y: () => (/* binding */ useCSSProperty)
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.map.js
var es_map = __webpack_require__("./node_modules/core-js/modules/es.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.values.js
var es_object_values = __webpack_require__("./node_modules/core-js/modules/es.object.values.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.every.js
var es_array_every = __webpack_require__("./node_modules/core-js/modules/es.array.every.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js
var es_array_find = __webpack_require__("./node_modules/core-js/modules/es.array.find.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce.js
var es_array_reduce = __webpack_require__("./node_modules/core-js/modules/es.array.reduce.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.sort.js
var es_array_sort = __webpack_require__("./node_modules/core-js/modules/es.array.sort.js");
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("./node_modules/react/index.js");
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
// EXTERNAL MODULE: ./src/utils/emotion/useTheme.ts
var useTheme = __webpack_require__("./src/utils/emotion/useTheme.ts");
// EXTERNAL MODULE: ./src/helpers/common/constants.ts
var constants = __webpack_require__("./src/helpers/common/constants.ts");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
;// CONCATENATED MODULE: ./src/helpers/common/isObject.ts








function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
/**
 * Strict check on object type.
 */
var isObject = function isObject(item) {
  return _typeof(item) === 'object' && !Array.isArray(item) && item !== null;
};
;// CONCATENATED MODULE: ./src/helpers/emotion/useCSSProperty.ts

























function useCSSProperty_typeof(o) {
  "@babel/helpers - typeof";

  return useCSSProperty_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, useCSSProperty_typeof(o);
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == useCSSProperty_typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != useCSSProperty_typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != useCSSProperty_typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}





var BREAKPOINT_INDICES = new Map();
constants/* BREAKPOINTS_NAMES */.Md.forEach(function (e, i) {
  return BREAKPOINT_INDICES.set(e, i);
});

/**
 * Calculate CSS Object from component props with `AllowMedia` type (user can pass object with breakpoints through prop). CSS property can be calculated based on multiple props.
 */
var useCSSProperty = function useCSSProperty(_ref) {
  var name = _ref.name,
    props = _ref.props,
    condition = _ref.condition,
    transform = _ref.transform;
  var _useTheme = (0,useTheme/* useTheme */.D)(),
    layout = _useTheme.layout;
  var layoutTheme = layout || baseTheme/* baseTheme */.$.layout;
  var breakpoints = layoutTheme.breakpoints;
  return (0,react.useMemo)(function () {
    if (condition !== undefined && !condition) return;
    var propsValues = Object.values(props);
    var isUndefined = propsValues.every(function (value) {
      return value === undefined;
    });
    if (isUndefined) return;
    var mediaProp = propsValues.find(function (value) {
      return isObject(value);
    });
    if (!mediaProp) return setValue(name, props, transform);
    return Object.keys(mediaProp).sort(function (a, b) {
      return BREAKPOINT_INDICES.get(a) - BREAKPOINT_INDICES.get(b);
    }).reduce(function (acc, bp) {
      var nameIndex = BREAKPOINT_INDICES.get(bp);
      var nextBp = nameIndex !== -1 && constants/* BREAKPOINTS_NAMES */.Md[nameIndex - 1];
      var breakpointProps = {};
      for (var key in props) {
        var value = props[key];
        breakpointProps[key] = !isObject(value) ? value : value[bp];
      }
      var rule = setValue(name, breakpointProps, transform);
      return _objectSpread(_objectSpread({}, acc), nextBp ? _defineProperty({}, "@media (max-width: ".concat(breakpoints[nextBp] - 1, "px)"), rule) : rule);
    }, {});
  }, [breakpoints, condition, name, props, transform]);
};
var setValue = function setValue(name, props, transform) {
  return _defineProperty({}, name, transform ? transform(props) : Object.values(props)[0]);
};

/***/ }),

/***/ "./src/helpers/scss/useCSSProperty.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: () => (/* binding */ useCSSProperty)
/* harmony export */ });
/* unused harmony export isObject */
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_define_properties_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_define_properties_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_define_properties_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_map_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./node_modules/core-js/modules/es.map.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_map_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_map_js__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./node_modules/core-js/modules/es.array.reduce.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__("./node_modules/core-js/modules/es.array.sort.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__("./src/helpers/common/constants.ts");






















function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}


var BREAKPOINT_INDICES = new Map();
_common_constants__WEBPACK_IMPORTED_MODULE_23__/* .BREAKPOINTS_NAMES */ .Md.forEach(function (e, i) {
  return BREAKPOINT_INDICES.set(e, i);
});
var isObject = function isObject(item) {
  return _typeof(item) === 'object' && !Array.isArray(item) && item !== null;
};
var setValue = function setValue(value, transform) {
  return transform ? transform(value) : value;
};

/**
 * Calculate CSS Object from component props with `AllowMedia` type (user can pass object with breakpoints through prop). CSS property can be calculated based on multiple props.
 */
var useCSSProperty = function useCSSProperty(_ref) {
  var value = _ref.value,
    transform = _ref.transform;
  return (0,react__WEBPACK_IMPORTED_MODULE_22__.useMemo)(function () {
    if (!value) return;
    var isObj = isObject(value);
    if (!isObj) return {
      xxxl: setValue(value, transform)
    };
    return Object.keys(value).sort(function (a, b) {
      return BREAKPOINT_INDICES.get(a) - BREAKPOINT_INDICES.get(b);
    }).reduce(function (acc, bp) {
      var nameIndex = BREAKPOINT_INDICES.get(bp);
      var nextBp = nameIndex !== -1 && _common_constants__WEBPACK_IMPORTED_MODULE_23__/* .BREAKPOINTS_NAMES */ .Md[nameIndex];
      var rule = setValue(value[bp], transform);
      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, nextBp || 'xxxl', rule));
    }, {});
  }, [value, transform]);
};

/***/ }),

/***/ "./src/helpers/scss/useGenerateProperty.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   e: () => (/* binding */ useGenerateProperty)
/* harmony export */ });
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/core-js/modules/es.array.reduce.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_is_nan_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/core-js/modules/es.number.is-nan.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_is_nan_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_is_nan_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./src/helpers/common/constants.ts");











var mediaKeys = _common_constants__WEBPACK_IMPORTED_MODULE_10__/* .BREAKPOINTS_NAMES */ .Md.slice(0, -1);
var useGenerateProperty = function useGenerateProperty(_ref) {
  var props = _ref.props,
    styles = _ref.styles,
    name = _ref.name;
  var mediaProperties = (0,react__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function () {
    return _common_constants__WEBPACK_IMPORTED_MODULE_10__/* .BREAKPOINTS_NAMES */ .Md.reduce(function (acc, key) {
      var temp = props.reduce(function (propAcc, p) {
        var _p$value;
        var value = (_p$value = p.value) === null || _p$value === void 0 ? void 0 : _p$value[key];
        if (value) {
          propAcc[p.name] = value;
        }
        return propAcc;
      }, {});
      if (Object.keys(temp).length) {
        acc[key] = temp;
      }
      return acc;
    }, {});
  }, [props]);
  var mediaStyles = (0,react__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function () {
    return mediaKeys.reduce(function (acc, key) {
      // xxxl values are written in the basic style, they are there by default
      if (key === 'xxxl') return acc;
      var dataValue = mediaProperties[key];
      acc[styles["".concat(name, "__").concat(key)]] = !!dataValue;
      return acc;
    }, {});
  }, [mediaProperties, name, styles]);
  var vars = (0,react__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function () {
    return Object.keys(mediaProperties).reduce(function (acc, breakpoint) {
      var properties = mediaProperties[breakpoint];
      Object.keys(properties).forEach(function (propertyName) {
        var propertyValue = properties[propertyName];
        var parsedValue = Number.isNaN(Number(propertyValue)) || typeof propertyValue === 'string' ? propertyValue : "".concat(propertyValue, "px");
        acc[breakpoint === 'xxxl' ? "--".concat(propertyName) : "--".concat(propertyName, "-").concat(breakpoint)] = "".concat(parsedValue);
      });
      return acc;
    }, {});
  }, [mediaProperties]);
  return {
    mediaStyles: mediaStyles,
    vars: vars
  };
};

/***/ }),

/***/ "./src/utils/autokits/useTheme.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: () => (/* binding */ ThemeContext),
/* harmony export */   Z: () => (/* binding */ useAutokitsTheme)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");

var ThemeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);

/**
 * Custom hook to get your theme object in React components from ThemeProvider.
 */
var useAutokitsTheme = function useAutokitsTheme() {
  var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThemeContext);
  if (!context) {
    throw new Error("Hook useAutokitsTheme must be used within AutokitsThemeProvider");
  }
  return context;
};

/***/ }),

/***/ "./src/utils/common/scale.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: () => (/* binding */ scale)
/* harmony export */ });
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_math_trunc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/core-js/modules/es.math.trunc.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_math_trunc_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_math_trunc_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_is_integer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/core-js/modules/es.number.is-integer.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_is_integer_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_is_integer_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var _Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Users_kvzhukh_greensight_gds_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _helpers_common_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/helpers/common/constants.ts");






/**
 * Helper for scaling system usage. Pass `multiplier` to use major scale: values multiple 8. Pass `multiplier` and `isMinor` flag to use minor scale: values less than 40 multiple 4.
 *
 * You can define your own step with `customStep` argument but it must be done once per project. For example with step equals 10 major scale allows to use values multiple 10 and minor scale allows to use values less than 40 multiple 5. Recommended way to do this is define wrapper with your step as third argument:
 *
 * ```
 * import { scale as scaleHelper } from '@greensight/gds';
 * import { MAJOR_STEP } from '@scripts/constants';
 *
 * const scale = (multiplier: number, isMinor?: boolean) => scaleHelper(multiplier, isMinor, MAJOR_STEP);
 *
 * export default scale;
 * ```
 */
var scale = function scale(multiplier, isMinor, customStep) {
  var majorStep = customStep || _helpers_common_constants__WEBPACK_IMPORTED_MODULE_4__/* .MAJOR_STEP */ .vV;
  var truncatedMultiplier = Math.trunc(multiplier);
  if (!Number.isInteger(multiplier)) {
    console.warn("Spacings scale accepts only integers. Your value ".concat(multiplier, " was truncated to ").concat(truncatedMultiplier, "."));
  }
  var value;
  if (!isMinor) {
    value = majorStep * truncatedMultiplier;
  } else {
    var minorStep = majorStep / 2;
    value = minorStep * truncatedMultiplier;
    if (value > _helpers_common_constants__WEBPACK_IMPORTED_MODULE_4__/* .MINOR_MAX */ .Lk) {
      var roundedValue = Math.trunc(value / majorStep) * majorStep;
      console.warn("Minor scale is not defined on sizes bigger than ".concat(_helpers_common_constants__WEBPACK_IMPORTED_MODULE_4__/* .MINOR_MAX */ .Lk, "px. Your value ").concat(value, " was rounded to ").concat(roundedValue, "."));
      value = roundedValue;
    }
  }
  return value;
};

/***/ }),

/***/ "./src/utils/emotion/baseTheme.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  $: () => (/* binding */ baseTheme)
});

// EXTERNAL MODULE: ./node_modules/deepmerge/dist/cjs.js
var cjs = __webpack_require__("./node_modules/deepmerge/dist/cjs.js");
var cjs_default = /*#__PURE__*/__webpack_require__.n(cjs);
;// CONCATENATED MODULE: ./public/tokens.json
const tokens_namespaceObject = /*#__PURE__*/JSON.parse('{"palettes":{"grey":["#121314","#3c3f42","#666a6f","#8a8f95","#a8adb3","#c0c4cb","#d2d5dc","#e0e3e8","#eaecf0","#f1f2f5"],"blue":["#021540","#042471","#0835a1","#1146cc","#215bf0","#6391ff","#90b2ff","#c2d6ff","#d9e4ff","#eff2fa"],"red":["#470000","#6f0101","#960202","#b80303","#d40505","#ea1414","#f14646","#f57979","#f5aaaa","#f2dada"]},"colors":{"black":"#000000","grey0":"#121314","grey20":"#666a6f","grey40":"#a8adb3","grey60":"#d6d8db","grey70":"#e0e3e8","grey90":"#f1f2f5","white":"#ffffff","fade":"rgba(0, 0, 0, 0.5)","brand":"#215bf0","brandHover":"#1146cc","brandSecond":"#ea1414","brandSecondHover":"#d40505","error":"#f14646","warning":"#f0b621","success":"#4aa253","tagHit":"#68c1dd","tagSale":"#f369a3","tagNew":"#b6d674"},"typography":{"breakpoints":[1440,768],"styles":{"buttonLg":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1.5rem","lineHeight":1.2}},"buttonMd":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1rem","lineHeight":1.2,"fontVariantNumeric":"tabular-nums"}},"buttonSm":{"desktop":{"fontFamily":"PT Root UI","fontWeight":400,"fontSize":"0.875rem","lineHeight":1}},"captionUppercase":{"desktop":{"fontFamily":"PT Root UI","fontWeight":400,"fontSize":"0.75rem","lineHeight":1.4,"letterSpacing":"0.05em","textTransform":"uppercase"}},"caption":{"desktop":{"fontFamily":"PT Root UI","fontWeight":400,"fontSize":"0.75rem","lineHeight":1.4,"letterSpacing":"0.02em"}},"smallBold":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"0.875rem","lineHeight":1.4},"mobile":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"0.75rem","lineHeight":1.4}},"small":{"desktop":{"fontFamily":"PT Root UI","fontWeight":400,"fontSize":"0.875rem","lineHeight":1.4},"mobile":{"fontFamily":"PT Root UI","fontWeight":400,"fontSize":"0.75rem","lineHeight":1.4}},"bodyBold":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1rem","lineHeight":1.4,"fontVariantNumeric":"tabular-nums"},"mobile":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"0.875rem","lineHeight":1.4}},"body":{"desktop":{"fontFamily":"PT Root UI","fontWeight":400,"fontSize":"1rem","lineHeight":1.4},"mobile":{"fontFamily":"PT Root UI","fontWeight":400,"fontSize":"0.875rem","lineHeight":1.4}},"subheading":{"desktop":{"fontFamily":"PT Root UI","fontWeight":500,"fontSize":"1.25rem","lineHeight":1.5},"mobile":{"fontFamily":"PT Root UI","fontWeight":500,"fontSize":"1.125rem","lineHeight":1.5}},"title":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1.25rem","lineHeight":1.2},"mobile":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1.125rem","lineHeight":1.2}},"headline":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1.5rem","lineHeight":1.2},"mobile":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1.25rem","lineHeight":1.2}},"h4":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1.75rem","lineHeight":1.2},"mobile":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1.375rem","lineHeight":1.2}},"h3":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"2rem","lineHeight":1.2},"mobile":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"1.5rem","lineHeight":1.2}},"h2":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"3rem","lineHeight":1.2},"mobile":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"2.125rem","lineHeight":1.2}},"h1":{"desktop":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"4.25rem","lineHeight":1.2,"letterSpacing":"-0.02em"},"mobile":{"fontFamily":"PT Root UI","fontWeight":700,"fontSize":"3rem","lineHeight":1.2,"letterSpacing":"-0.02em"}}}},"layout":{"cols":{"xxxl":12,"md":6,"xs":4,"xxs":2},"container":{"xxxl":1440,"xl":"none"},"marginLeft":{"xxxl":"auto","xl":0},"marginRight":{"xxxl":"auto","xl":0},"breakpoints":{"xxxl":1920,"xxl":1600,"xl":1440,"lg":1280,"md":960,"sm":768,"xs":568,"xxs":360,"xxxs":320},"gap":{"xxxl":24,"sm":16},"padding":{"xl":60,"lg":40,"md":36,"sm":32,"xs":24,"xxs":16}},"shadows":{"small":"1px 1px 3px rgba(18, 19, 20, 0.05), 1px 3px 10px rgba(18, 19, 20, 0.05)","big":"4px 10px 35px rgba(18, 19, 20, 0.08)","inner":"inset 3px 3px 10px rgba(18, 19, 20, 0.1), inset 2px 2px 5px rgba(18, 19, 20, 0.1), inset 2px 2px 3px rgba(18, 19, 20, 0.08)"}}');
// EXTERNAL MODULE: ./src/helpers/common/constants.ts
var constants = __webpack_require__("./src/helpers/common/constants.ts");
// EXTERNAL MODULE: ./src/icons/tokens/medium/placeholder.svg
var placeholder = __webpack_require__("./src/icons/tokens/medium/placeholder.svg");
// EXTERNAL MODULE: ./src/utils/common/scale.ts
var scale = __webpack_require__("./src/utils/common/scale.ts");
;// CONCATENATED MODULE: ./src/utils/emotion/baseTheme.ts


/** Импорт React нужен для tsc. */





var colors = tokens_namespaceObject.colors,
  shadows = tokens_namespaceObject.shadows;

/* Здесь умышленно не используется createTheme, т.к. она возвращает тип Theme, а базовую тему хочется использовать как константу, чтобы при вводе baseTheme.colors. выводились все цвета + не выдавалось излишних проверок на существование. Мы теряем здесь типизацию при наборе базовой темы (исключительно этот файл), но даём пользователям удобство работы с константой. Пользовательские тему будут создаваться через createTheme и строго следовать типам. */

/**
 * Default GDS theme.
 */
var baseTheme = cjs_default()(tokens_namespaceObject, {
  global: {
    placeholder: placeholder["default"],
    fonts: {
      families: {
        'PT Root UI': {
          stack: constants/* FONT_STACK */.PQ
        }
      },
      fontFace: [{
        '@font-face': {
          fontFamily: 'PT Root UI',
          src: 'url("../fonts/PTRootUI/PTRootUI-Regular.woff2") format("woff2"), url("../fonts/PTRootUI/PTRootUI-Regular.woff") format("woff")',
          fontDisplay: 'swap'
        }
      }, {
        '@font-face': {
          fontFamily: 'PT Root UI',
          src: 'url("../fonts/PTRootUI/PTRootUI-Medium.woff2") format("woff2"), url("../fonts/PTRootUI/PTRootUI-Medium.woff") format("woff")',
          fontDisplay: 'swap',
          fontWeight: 500
        }
      }, {
        '@font-face': {
          fontFamily: 'PT Root UI',
          src: 'url("../fonts/PTRootUI/PTRootUI-Bold.woff2") format("woff2"), url("../fonts/PTRootUI/PTRootUI-Bold.woff") format("woff")',
          fontDisplay: 'swap',
          fontWeight: 700
        }
      }]
    },
    base: {
      selection: {
        color: colors.white,
        bg: colors.brand
      },
      focus: {
        width: 2,
        color: colors.brand,
        offset: 2
      },
      body: {
        typography: 'body',
        color: colors.black,
        bg: colors.white
      }
    }
  },
  components: {
    Button: {
      base: {
        "default": {
          round: true,
          half: true
        }
      },
      themes: {
        primary: {
          "default": {
            color: colors.white,
            bg: colors.brand
          },
          hover: {
            bg: colors.brandHover
          },
          active: {
            border: 'transparent',
            shadow: shadows.inner
          },
          disabled: {
            bg: colors.grey70,
            color: colors.grey40
          }
        },
        secondary: {
          "default": {
            color: colors.brand,
            border: colors.brand,
            bg: colors.white
          },
          hover: {
            color: colors.brandHover,
            border: colors.brandHover
          },
          active: {
            bg: colors.grey90,
            border: 'transparent',
            shadow: shadows.inner
          },
          disabled: {
            border: colors.grey60,
            color: colors.grey40
          }
        }
      },
      sizes: {
        lg: {
          height: (0,scale/* scale */.h)(8),
          padding: (0,scale/* scale */.h)(3),
          iconSize: (0,scale/* scale */.h)(4),
          iconOffset: (0,scale/* scale */.h)(1),
          typography: 'buttonLg'
        },
        md: {
          height: (0,scale/* scale */.h)(6),
          padding: (0,scale/* scale */.h)(3),
          iconSize: (0,scale/* scale */.h)(3),
          iconOffset: (0,scale/* scale */.h)(1),
          typography: 'buttonMd'
        },
        sm: {
          height: (0,scale/* scale */.h)(5),
          padding: (0,scale/* scale */.h)(2),
          iconSize: (0,scale/* scale */.h)(2),
          iconOffset: (0,scale/* scale */.h)(1),
          typography: 'buttonSm'
        }
      }
    }
  }
});

/***/ }),

/***/ "./src/utils/emotion/typography.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  I: () => (/* binding */ typography)
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("./node_modules/core-js/modules/es.symbol.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("./node_modules/core-js/modules/es.symbol.description.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("./node_modules/core-js/modules/es.string.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("./node_modules/core-js/modules/es.array.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("./node_modules/core-js/modules/es.array.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("./node_modules/core-js/modules/es.string.includes.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("./node_modules/core-js/modules/es.array.slice.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("./node_modules/core-js/modules/es.function.name.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("./node_modules/core-js/modules/es.array.from.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js
var es_array_is_array = __webpack_require__("./node_modules/core-js/modules/es.array.is-array.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("./node_modules/core-js/modules/es.object.keys.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("./node_modules/core-js/modules/es.array.filter.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("./node_modules/core-js/modules/es.array.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js
var es_object_define_properties = __webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js
var es_object_define_property = __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js
var es_symbol_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js
var es_date_to_primitive = __webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.map.js
var es_map = __webpack_require__("./node_modules/core-js/modules/es.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("./node_modules/core-js/modules/es.array.concat.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("./node_modules/core-js/modules/es.array.map.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.entries.js
var es_object_entries = __webpack_require__("./node_modules/core-js/modules/es.object.entries.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.from-entries.js
var es_object_from_entries = __webpack_require__("./node_modules/core-js/modules/es.object.from-entries.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.parse-float.js
var es_parse_float = __webpack_require__("./node_modules/core-js/modules/es.parse-float.js");
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-prototype-of.js
var es_object_get_prototype_of = __webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js");
;// CONCATENATED MODULE: ./src/utils/common/fastEquals.ts










function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
function fastEquals(a, b) {
  // If both are the same object/reference or same primitive value
  if (a === b) return true;

  // If they are not the same type
  if (_typeof(a) !== _typeof(b)) return false;

  // If they are objects
  if (_typeof(a) === 'object') {
    // If they are not the same class (Array, Object)
    if (Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;

    // If they are arrays, compare each element
    if (Array.isArray(a)) {
      if (a.length !== b.length) return false;
      for (var i = 0; i < a.length; i++) {
        if (!fastEquals(a[i], b[i])) return false;
      }
      return true;
    }

    // If they are objects, compare each key
    var keys = Object.keys(a);
    if (keys.length !== Object.keys(b).length) return false;
    for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {
      var key = _keys[_i];
      // eslint-disable-next-line no-prototype-builtins
      if (!b.hasOwnProperty(key)) return false;
      if (!fastEquals(a[key], b[key])) return false;
    }
    return true;
  }

  // If they are not the same primitive value
  return false;
}
// EXTERNAL MODULE: ./src/utils/emotion/baseTheme.ts + 1 modules
var baseTheme = __webpack_require__("./src/utils/emotion/baseTheme.ts");
;// CONCATENATED MODULE: ./src/utils/emotion/typography.ts






























var _excluded = ["fontSize"],
  _excluded2 = ["fontSize"];
function typography_typeof(o) {
  "@babel/helpers - typeof";

  return typography_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, typography_typeof(o);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typography_typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != typography_typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typography_typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}


var cache = new Map();

/**
 * Helper for typography styles usage. Generate typography CSS rules by style name included mobile version, fluid typography and variable fonts support.
 *
 * By default helper uses GDS base theme. Recommended way to use this helper with your own theme is define wrapper with your theme as second argument:
 *
 * ```
 * import { typography as typographyHelper } from '@greensight/gds';
 * import theme from '@scripts/theme';
 *
 * const typography = (name: string) => typographyHelper(name, theme);
 *
 * export default typography;
 * ```
 */
var typography = function typography(name) {
  var _theme$global, _globalFontsTheme$fam, _globalFontsTheme$fam2;
  var theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : baseTheme/* baseTheme */.$;
  if (!name) {
    console.warn('"name" argument is not defined.');
    return;
  }
  if (!theme.typography || !theme.typography.styles[name]) {
    console.warn("Typography style ".concat(name, " is not defined."));
    return;
  }
  var cached = cache.get(name);
  if (cached && fastEquals(cached.theme, theme)) {
    return cached === null || cached === void 0 ? void 0 : cached.css;
  }
  var typographyStyle = theme.typography.styles[name];
  var fontName = typographyStyle.desktop.fontFamily;
  var globalFontsTheme = (_theme$global = theme.global) === null || _theme$global === void 0 ? void 0 : _theme$global.fonts;
  var stack = (globalFontsTheme === null || globalFontsTheme === void 0 || (_globalFontsTheme$fam = globalFontsTheme.families) === null || _globalFontsTheme$fam === void 0 || (_globalFontsTheme$fam = _globalFontsTheme$fam[fontName]) === null || _globalFontsTheme$fam === void 0 ? void 0 : _globalFontsTheme$fam.stack) || 'sans-serif';
  var fontFamilyStyles = {
    fontFamily: "\"".concat(fontName, "\", ").concat(stack)
  };
  var isVf = globalFontsTheme === null || globalFontsTheme === void 0 || (_globalFontsTheme$fam2 = globalFontsTheme.families) === null || _globalFontsTheme$fam2 === void 0 || (_globalFontsTheme$fam2 = _globalFontsTheme$fam2[fontName]) === null || _globalFontsTheme$fam2 === void 0 ? void 0 : _globalFontsTheme$fam2.vf;
  if (isVf) {
    fontFamilyStyles = _objectSpread(_objectSpread({}, fontFamilyStyles), {}, {
      '@supports (font-variation-settings: normal)': {
        fontFamily: "\"".concat(fontName, " VF\", ").concat(stack)
      }
    });
  }
  var desktopStyles = removeFontFamily(typographyStyle.desktop);
  var mqMobileStyles = {};
  var fluidStyles = {};
  var mainStyles = desktopStyles;
  var _theme$typography$bre = _slicedToArray(theme.typography.breakpoints, 2),
    maxVw = _theme$typography$bre[0],
    minVw = _theme$typography$bre[1];
  var mq = [maxVw, minVw].map(function (bp) {
    return "@media (max-width: ".concat(bp, "px)");
  });
  if (typographyStyle.mobile) {
    var mobileStyles = removeFontFamily(typographyStyle.mobile);
    var maxFs = desktopStyles.fontSize,
      desktopStylesWithoutFs = _objectWithoutProperties(desktopStyles, _excluded);
    var minFs = mobileStyles.fontSize,
      mobileStylesWithoutFs = _objectWithoutProperties(mobileStyles, _excluded2);
    var mobileStyleEntries = Object.entries(mobileStylesWithoutFs);
    var uniqueMobileStyles = Object.fromEntries(mobileStyleEntries.filter(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        name = _ref2[0];
      return !desktopStylesWithoutFs[name] || desktopStylesWithoutFs[name] !== mobileStylesWithoutFs[name];
    }));
    mainStyles = desktopStylesWithoutFs;
    mqMobileStyles = uniqueMobileStyles;
    var isFluid = true;
    var fluidSettings = globalFontsTheme === null || globalFontsTheme === void 0 ? void 0 : globalFontsTheme.fluid;
    if (fluidSettings !== undefined) {
      isFluid = Array.isArray(fluidSettings) ? !fluidSettings.includes(name) : fluidSettings;
    }
    if (isFluid) {
      fluidStyles = _defineProperty({
        fontSize: maxFs
      }, mq[0], {
        fontSize: "calc(".concat(minFs, " + ((100vw - ").concat(pxToRem(minVw), "rem) / (").concat(pxToRem(maxVw), " - ").concat(pxToRem(minVw), ")) * (").concat(parseFloat(maxFs), " - ").concat(parseFloat(minFs), "))")
      });
    } else {
      fluidStyles = {
        fontSize: maxFs
      };
    }
    mqMobileStyles = _objectSpread(_objectSpread({}, mqMobileStyles), {}, {
      fontSize: minFs
    });
  }
  var result = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, fontFamilyStyles), mainStyles), fluidStyles), {}, _defineProperty({}, mq[1], mqMobileStyles));
  cache.set(name, {
    css: result,
    theme: theme
  });
  return result;
};
var pxToRem = function pxToRem(px) {
  return px / 16;
};
var removeFontFamily = function removeFontFamily(styles) {
  var entries = Object.entries(styles);
  var filteredEntries = entries.filter(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 1),
      name = _ref4[0];
    return name !== 'fontFamily';
  });
  var filteredStyles = Object.fromEntries(filteredEntries);
  return filteredStyles;
};

/***/ }),

/***/ "./src/utils/emotion/useTheme.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: () => (/* binding */ useTheme)
/* harmony export */ });
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@emotion/react/dist/emotion-element-43c6fea0.browser.esm.js");

/**
 * Custom hook to get your theme object in React components from ThemeProvider.
 */
var useTheme = function useTheme() {
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_0__.u)();
};

/***/ }),

/***/ "./src/utils/scss/useTheme.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: () => (/* binding */ ThemeContext),
/* harmony export */   W: () => (/* binding */ useScssTheme)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");

var ThemeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);

/**
 * Custom hook to get your theme object in React components from ThemeProvider.
 */
var useScssTheme = function useScssTheme() {
  var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThemeContext);
  if (!context) {
    throw new Error("Hook useScssTheme must be used within ScssThemeProvider");
  }
  return context;
};

/***/ }),

/***/ "./storybook-init-framework-entry.js":
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _storybook_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js");


/***/ }),

/***/ "./src/icons/tokens/large/checkCircle.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path, _path2;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgCheckCircle = function SvgCheckCircle(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M13.2823 3.96242C15.8765 3.3763 18.5907 3.64446 21.02 4.72691C21.5245 4.95169 22.1156 4.72495 22.3404 4.22048C22.5652 3.71601 22.3385 3.12483 21.834 2.90005C19.0107 1.64207 15.8564 1.33042 12.8415 2.01159C9.82665 2.69277 7.11273 4.33026 5.10453 6.67986C3.09632 9.02945 1.90143 11.9653 1.69806 15.0494C1.49469 18.1336 2.29374 21.2009 3.97604 23.7938C5.65833 26.3868 8.13373 28.3665 11.0331 29.4376C13.9324 30.5088 17.1003 30.614 20.0643 29.7376C23.0284 28.8613 25.6297 27.0502 27.4804 24.5747C29.331 22.0991 30.3319 19.0916 30.3337 16.0007V14.7735C30.3337 14.2212 29.886 13.7735 29.3337 13.7735C28.7814 13.7735 28.3337 14.2212 28.3337 14.7735L28.3337 15.9996C28.332 18.659 27.4708 21.2472 25.8785 23.3772C24.2861 25.5073 22.0477 27.0656 19.4973 27.8197C16.9468 28.5738 14.2209 28.4833 11.7262 27.5616C9.2314 26.6399 7.1014 24.9364 5.65384 22.7053C4.20629 20.4741 3.51874 17.8349 3.69373 15.181C3.86872 12.5272 4.89688 10.001 6.62487 7.9793C8.35286 5.95755 10.6881 4.54855 13.2823 3.96242Z"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M30.0408 6.04001C30.4311 5.64929 30.4308 5.01612 30.0401 4.62579C29.6494 4.23546 29.0162 4.23578 28.6259 4.6265L15.9996 17.2654L12.7071 13.9728C12.3166 13.5823 11.6834 13.5823 11.2929 13.9728C10.9024 14.3633 10.9024 14.9965 11.2929 15.387L15.2929 19.387C15.4805 19.5746 15.7349 19.68 16.0003 19.6799C16.2656 19.6799 16.52 19.5744 16.7075 19.3867L30.0408 6.04001Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgCheckCircle);

/***/ }),

/***/ "./src/icons/tokens/large/crossCircle.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgCrossCircle = function SvgCrossCircle(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M16.0003 3.66675C9.18881 3.66675 3.66699 9.18857 3.66699 16.0001C3.66699 22.8116 9.18881 28.3334 16.0003 28.3334C22.8118 28.3334 28.3337 22.8116 28.3337 16.0001C28.3337 9.18857 22.8118 3.66675 16.0003 3.66675ZM1.66699 16.0001C1.66699 8.084 8.08424 1.66675 16.0003 1.66675C23.9164 1.66675 30.3337 8.084 30.3337 16.0001C30.3337 23.9162 23.9164 30.3334 16.0003 30.3334C8.08424 30.3334 1.66699 23.9162 1.66699 16.0001ZM20.7071 11.2929C21.0976 11.6834 21.0976 12.3166 20.7071 12.7071L17.4142 16L20.7071 19.2929C21.0976 19.6834 21.0976 20.3166 20.7071 20.7071C20.3166 21.0976 19.6834 21.0976 19.2929 20.7071L16 17.4142L12.7071 20.7071C12.3166 21.0976 11.6834 21.0976 11.2929 20.7071C10.9024 20.3166 10.9024 19.6834 11.2929 19.2929L14.5858 16L11.2929 12.7071C10.9024 12.3166 10.9024 11.6834 11.2929 11.2929C11.6834 10.9024 12.3166 10.9024 12.7071 11.2929L16 14.5858L19.2929 11.2929C19.6834 10.9024 20.3166 10.9024 20.7071 11.2929Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgCrossCircle);

/***/ }),

/***/ "./src/icons/tokens/large/placeholder.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path, _path2;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgPlaceholder = function SvgPlaceholder(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.33301 11.3333C8.33301 9.6764 9.67615 8.33325 11.333 8.33325C12.9899 8.33325 14.333 9.6764 14.333 11.3333C14.333 12.9901 12.9899 14.3333 11.333 14.3333C9.67615 14.3333 8.33301 12.9901 8.33301 11.3333ZM11.333 10.3333C10.7807 10.3333 10.333 10.781 10.333 11.3333C10.333 11.8855 10.7807 12.3333 11.333 12.3333C11.8853 12.3333 12.333 11.8855 12.333 11.3333C12.333 10.781 11.8853 10.3333 11.333 10.3333Z"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M29 19.9743V6.66667C29 4.64162 27.3584 3 25.3333 3H6.66667C4.64162 3 3 4.64162 3 6.66667V25.3333C3 27.3584 4.64162 29 6.66667 29H25.3333C27.3584 29 29 27.3584 29 25.3333V20.0256C29.0004 20.0085 29.0004 19.9914 29 19.9743ZM6.66667 5C5.74619 5 5 5.74619 5 6.66667V25.3333C5 26.1258 5.55315 26.7892 6.29442 26.9583L20.6266 12.6261C21.0171 12.2356 21.6502 12.2356 22.0408 12.6261L27 17.5854V6.66667C27 5.74619 26.2538 5 25.3333 5H6.66667ZM27 20.4138L21.3337 14.7475L9.08112 27H25.3333C26.2538 27 27 26.2538 27 25.3333V20.4138Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgPlaceholder);

/***/ }),

/***/ "./src/icons/tokens/medium/checkCircle.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgCheckCircle = function SvgCheckCircle(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.0166 3.21567C11.9096 2.78796 13.8902 2.98364 15.663 3.77354C16.1675 3.99832 16.7587 3.77158 16.9834 3.26711C17.2082 2.76264 16.9815 2.17146 16.477 1.94668C14.3103 0.981252 11.8896 0.742082 9.57581 1.26484C7.26206 1.7876 5.17929 3.04428 3.63811 4.84746C2.09693 6.65064 1.17992 8.9037 1.02384 11.2706C0.86777 13.6376 1.48099 15.9915 2.77206 17.9815C4.06312 19.9714 5.96285 21.4907 8.18792 22.3127C10.413 23.1348 12.8442 23.2155 15.1189 22.543C17.3936 21.8704 19.39 20.4806 20.8103 18.5807C22.2306 16.6808 22.9986 14.3727 23 12.0007V11.0801C23 10.5278 22.5523 10.0801 22 10.0801C21.4477 10.0801 21 10.5278 21 11.0801V11.9995C20.9989 13.9403 20.3705 15.8287 19.2084 17.3832C18.0464 18.9376 16.413 20.0748 14.5518 20.625C12.6907 21.1753 10.7015 21.1092 8.88103 20.4367C7.06051 19.7641 5.50619 18.521 4.44987 16.8929C3.39354 15.2648 2.89181 13.3388 3.01951 11.4022C3.14721 9.46565 3.89749 7.62223 5.15845 6.1469C6.41942 4.67158 8.12351 3.64338 10.0166 3.21567ZM22.7075 4.70675C23.0978 4.31603 23.0975 3.68287 22.7068 3.29254C22.316 2.90221 21.6829 2.90253 21.2925 3.29325L11.9996 12.5954L9.70711 10.3029C9.31658 9.91237 8.68342 9.91237 8.29289 10.3029C7.90237 10.6934 7.90237 11.3266 8.29289 11.7171L11.2929 14.7171C11.4805 14.9047 11.7349 15.0101 12.0003 15.01C12.2656 15.0099 12.52 14.9044 12.7075 14.7168L22.7075 4.70675Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgCheckCircle);

/***/ }),

/***/ "./src/icons/tokens/medium/crossCircle.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgCrossCircle = function SvgCrossCircle(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3ZM1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12ZM15.7071 8.29289C16.0976 8.68342 16.0976 9.31658 15.7071 9.70711L13.4142 12L15.7071 14.2929C16.0976 14.6834 16.0976 15.3166 15.7071 15.7071C15.3166 16.0976 14.6834 16.0976 14.2929 15.7071L12 13.4142L9.70711 15.7071C9.31658 16.0976 8.68342 16.0976 8.29289 15.7071C7.90237 15.3166 7.90237 14.6834 8.29289 14.2929L10.5858 12L8.29289 9.70711C7.90237 9.31658 7.90237 8.68342 8.29289 8.29289C8.68342 7.90237 9.31658 7.90237 9.70711 8.29289L12 10.5858L14.2929 8.29289C14.6834 7.90237 15.3166 7.90237 15.7071 8.29289Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgCrossCircle);

/***/ }),

/***/ "./src/icons/tokens/medium/placeholder.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path, _path2;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgPlaceholder = function SvgPlaceholder(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6 8.5C6 7.11929 7.11929 6 8.5 6C9.88071 6 11 7.11929 11 8.5C11 9.88071 9.88071 11 8.5 11C7.11929 11 6 9.88071 6 8.5ZM8.5 8C8.22386 8 8 8.22386 8 8.5C8 8.77614 8.22386 9 8.5 9C8.77614 9 9 8.77614 9 8.5C9 8.22386 8.77614 8 8.5 8Z"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M22 5C22 3.34315 20.6569 2 19 2H5C3.34315 2 2 3.34315 2 5V19C2 20.6569 3.34315 22 5 22H19C20.6569 22 22 20.6569 22 19V5ZM5 4C4.44772 4 4 4.44772 4 5V19C4 19.4288 4.2699 19.7946 4.64909 19.9367L15.2929 9.29289C15.6834 8.90237 16.3166 8.90237 16.7071 9.29289L20 12.5858V5C20 4.44772 19.5523 4 19 4H5ZM20 15.4142L16 11.4142L7.41421 20H19C19.5523 20 20 19.5523 20 19V15.4142Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgPlaceholder);

/***/ }),

/***/ "./src/icons/tokens/small/checkCircle.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path, _path2;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgCheckCircle = function SvgCheckCircle(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M6.64066 1.98121C7.93776 1.68815 9.29484 1.82223 10.5095 2.36345C10.7617 2.47584 11.0573 2.36248 11.1697 2.11024C11.2821 1.858 11.1687 1.56242 10.9165 1.45003C9.50487 0.821033 7.92772 0.665211 6.42028 1.0058C4.91284 1.34638 3.55588 2.16513 2.55177 3.33993C1.54767 4.51473 0.950228 5.98263 0.848543 7.52472C0.746858 9.0668 1.14638 10.6004 1.98753 11.8969C2.82868 13.1934 4.06638 14.1832 5.51605 14.7188C6.96571 15.2544 8.54967 15.307 10.0317 14.8688C11.5137 14.4306 12.8144 13.5251 13.7397 12.2873C14.665 11.0495 15.1655 9.54579 15.1663 8.00036V7.38674C15.1663 7.1106 14.9425 6.88674 14.6663 6.88674C14.3902 6.88674 14.1663 7.1106 14.1663 7.38674L14.1663 7.99979C14.1655 9.32948 13.7349 10.6236 12.9388 11.6886C12.1425 12.7537 11.0234 13.5328 9.74815 13.9099C8.47292 14.2869 7.10998 14.2416 5.8626 13.7808C4.61521 13.3199 3.55021 12.4682 2.82643 11.3526C2.10266 10.2371 1.75888 8.91743 1.84638 7.59051C1.93387 6.2636 2.44795 5.00052 3.31195 3.98965C4.17594 2.97878 5.34356 2.27427 6.64066 1.98121Z"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M15.0204 3.02013C15.2156 2.82477 15.2154 2.50818 15.02 2.31302C14.8247 2.11785 14.5081 2.11801 14.3129 2.31337L7.99982 8.6328L6.35355 6.98653C6.15829 6.79127 5.84171 6.79127 5.64645 6.98653C5.45118 7.18179 5.45118 7.49837 5.64645 7.69363L7.64645 9.69363C7.74025 9.78743 7.86747 9.84011 8.00013 9.84008C8.13278 9.84005 8.25998 9.7873 8.35373 9.69346L15.0204 3.02013Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgCheckCircle);

/***/ }),

/***/ "./src/icons/tokens/small/crossCircle.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path, _path2;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgCrossCircle = function SvgCrossCircle(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M10.3536 5.64645C10.5488 5.84171 10.5488 6.15829 10.3536 6.35355L8.70711 8L10.3536 9.64645C10.5488 9.84171 10.5488 10.1583 10.3536 10.3536C10.1583 10.5488 9.84171 10.5488 9.64645 10.3536L8 8.70711L6.35355 10.3536C6.15829 10.5488 5.84171 10.5488 5.64645 10.3536C5.45118 10.1583 5.45118 9.84171 5.64645 9.64645L7.29289 8L5.64645 6.35355C5.45118 6.15829 5.45118 5.84171 5.64645 5.64645C5.84171 5.45118 6.15829 5.45118 6.35355 5.64645L8 7.29289L9.64645 5.64645C9.84171 5.45118 10.1583 5.45118 10.3536 5.64645Z"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.99967 0.833252C4.04163 0.833252 0.833008 4.04188 0.833008 7.99992C0.833008 11.958 4.04163 15.1666 7.99967 15.1666C11.9577 15.1666 15.1663 11.958 15.1663 7.99992C15.1663 4.04188 11.9577 0.833252 7.99967 0.833252ZM7.99967 1.83325C4.59392 1.83325 1.83301 4.59416 1.83301 7.99992C1.83301 11.4057 4.59392 14.1666 7.99967 14.1666C11.4054 14.1666 14.1663 11.4057 14.1663 7.99992C14.1663 4.59416 11.4054 1.83325 7.99967 1.83325Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgCrossCircle);

/***/ }),

/***/ "./src/icons/tokens/small/placeholder.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
var _path;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

var SvgPlaceholder = function SvgPlaceholder(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M3.33333 2.5C2.8731 2.5 2.5 2.8731 2.5 3.33333V12.6667C2.5 13.0628 2.77642 13.3944 3.14691 13.4791L10.3128 6.31319C10.508 6.11793 10.8246 6.11793 11.0199 6.31319L13.5 8.7933V3.33333C13.5 2.8731 13.1269 2.5 12.6667 2.5H3.33333ZM13.5 10.2075L10.6663 7.37385L4.5402 13.5H12.6667C13.1269 13.5 13.5 13.1269 13.5 12.6667V10.2075ZM3.34205 14.5H12.6667C13.6792 14.5 14.5 13.6792 14.5 12.6667V3.33333C14.5 2.32081 13.6792 1.5 12.6667 1.5H3.33333C2.32081 1.5 1.5 2.32081 1.5 3.33333V12.6667C1.5 13.6755 2.31486 14.494 3.32231 14.5C3.32889 14.5001 3.33547 14.5001 3.34205 14.5ZM5.66699 5.16675C5.39085 5.16675 5.16699 5.39061 5.16699 5.66675C5.16699 5.94289 5.39085 6.16675 5.66699 6.16675C5.94313 6.16675 6.16699 5.94289 6.16699 5.66675C6.16699 5.39061 5.94313 5.16675 5.66699 5.16675ZM4.16699 5.66675C4.16699 4.83832 4.83857 4.16675 5.66699 4.16675C6.49542 4.16675 7.16699 4.83832 7.16699 5.66675C7.16699 6.49518 6.49542 7.16675 5.66699 7.16675C4.83857 7.16675 4.16699 6.49518 4.16699 5.66675Z"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgPlaceholder);

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/container.module.scss":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".Vs7l6Mg9a\\+lbE2ZiniZS7A\\=\\={max-width:1440px;margin-left:auto;margin-right:auto}@media(max-width: 1599px){.Vs7l6Mg9a\\+lbE2ZiniZS7A\\=\\={max-width:none;margin-left:0px;margin-right:0px;padding:0 60px}}@media(max-width: 1439px){.Vs7l6Mg9a\\+lbE2ZiniZS7A\\=\\={padding:0 40px}}@media(max-width: 1279px){.Vs7l6Mg9a\\+lbE2ZiniZS7A\\=\\={padding:0 36px}}@media(max-width: 959px){.Vs7l6Mg9a\\+lbE2ZiniZS7A\\=\\={padding:0 32px}}@media(max-width: 767px){.Vs7l6Mg9a\\+lbE2ZiniZS7A\\=\\={padding:0 24px}}@media(max-width: 567px){.Vs7l6Mg9a\\+lbE2ZiniZS7A\\=\\={padding:0 16px}}", ""]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"container": "Vs7l6Mg9a+lbE2ZiniZS7A=="
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/flexLayout.module.scss":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".vMuL5aaYjNekf3p5CNOdvg\\=\\={display:flex;--gap: initial;--gap-xxl: var(--gap);--gap-xl: var(--gap-xxl);--gap-lg: var(--gap-xl);--gap-md: var(--gap-lg);--gap-sm: var(--gap-md);--gap-xs: var(--gap-sm);--gap-xxs: var(--gap-xs);--justify: initial;--justify-xxl: var(--justify);--justify-xl: var(--justify-xxl);--justify-lg: var(--justify-xl);--justify-md: var(--justify-lg);--justify-sm: var(--justify-md);--justify-xs: var(--justify-sm);--justify-xxs: var(--justify-xs);--align: initial;--align-xxl: var(--align);--align-xl: var(--align-xxl);--align-lg: var(--align-xl);--align-md: var(--align-lg);--align-sm: var(--align-md);--align-xs: var(--align-sm);--align-xxs: var(--align-xs);--wrap: initial;--wrap-xxl: var(--wrap);--wrap-xl: var(--wrap-xxl);--wrap-lg: var(--wrap-xl);--wrap-md: var(--wrap-lg);--wrap-sm: var(--wrap-md);--wrap-xs: var(--wrap-sm);--wrap-xxs: var(--wrap-xs);gap:var(--gap);justify-content:var(--justify);align-items:var(--align);flex-wrap:var(--wrap)}@media(max-width: 1599px){._5kWjw64Pd5RbiItwF7pKLA\\=\\={gap:var(--gap-xxl);justify-content:var(--justify-xxl);align-items:var(--align-xxl);flex-wrap:var(--wrap-xxl)}}@media(max-width: 1439px){.N8M4Ms-k5LG-fCLxF9W65Q\\=\\={gap:var(--gap-xl);justify-content:var(--justify-xl);align-items:var(--align-xl);flex-wrap:var(--wrap-xl)}}@media(max-width: 1279px){.Zvx6Jj0yqfmgVIwHmoq56A\\=\\={gap:var(--gap-lg);justify-content:var(--justify-lg);align-items:var(--align-lg);flex-wrap:var(--wrap-lg)}}@media(max-width: 959px){._8Gk6dGK-PGC2lUPTAxb5rQ\\=\\={gap:var(--gap-md);justify-content:var(--justify-md);align-items:var(--align-md);flex-wrap:var(--wrap-md)}}@media(max-width: 767px){.uyRoiRN0wqxJO8QZV7iEgg\\=\\={gap:var(--gap-sm);justify-content:var(--justify-sm);align-items:var(--align-sm);flex-wrap:var(--wrap-sm)}}@media(max-width: 567px){.czNDhbxPszJtBiMuIL6AOw\\=\\={gap:var(--gap-xs);justify-content:var(--justify-xs);align-items:var(--align-xs);flex-wrap:var(--wrap-xs)}}@media(max-width: 359px){.qVMHLdoN2EjmRpV6OWR6RQ\\=\\={gap:var(--gap-xxs);justify-content:var(--justify-xxs);align-items:var(--align-xxs);flex-wrap:var(--wrap-xxs)}}", ""]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"flexLayout": "vMuL5aaYjNekf3p5CNOdvg==",
	"flexLayout__xxl": "_5kWjw64Pd5RbiItwF7pKLA==",
	"flexLayout__xl": "N8M4Ms-k5LG-fCLxF9W65Q==",
	"flexLayout__lg": "Zvx6Jj0yqfmgVIwHmoq56A==",
	"flexLayout__md": "_8Gk6dGK-PGC2lUPTAxb5rQ==",
	"flexLayout__sm": "uyRoiRN0wqxJO8QZV7iEgg==",
	"flexLayout__xs": "czNDhbxPszJtBiMuIL6AOw==",
	"flexLayout__xxs": "qVMHLdoN2EjmRpV6OWR6RQ=="
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/flexLayoutItem.module.scss":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "._265SP2gLxNWYRnhYD3z5\\+A\\=\\={--justify: initial;--justify-xxl: var(--justify);--justify-xl: var(--justify-xxl);--justify-lg: var(--justify-xl);--justify-md: var(--justify-lg);--justify-sm: var(--justify-md);--justify-xs: var(--justify-sm);--justify-xxs: var(--justify-xs);--align: initial;--align-xxl: var(--align);--align-xl: var(--align-xxl);--align-lg: var(--align-xl);--align-md: var(--align-lg);--align-sm: var(--align-md);--align-xs: var(--align-sm);--align-xxs: var(--align-xs);--order: initial;--order-xxl: var(--order);--order-xl: var(--order-xxl);--order-lg: var(--order-xl);--order-md: var(--order-lg);--order-sm: var(--order-md);--order-xs: var(--order-sm);--order-xxs: var(--order-xs);justify-self:var(--justify);align-self:var(--align);order:var(--order)}@media(max-width: 1599px){.A49\\+nz4XlJRxFV3xlA4dVQ\\=\\={justify-self:var(--justify-xxl);align-self:var(--align-xxl);order:var(--order-xxl)}}@media(max-width: 1439px){.sEOz4fu0pgqKxR4NljXGRA\\=\\={justify-self:var(--justify-xl);align-self:var(--align-xl);order:var(--order-xl)}}@media(max-width: 1279px){.p-9obpmDgqkGyxkDFttvUQ\\=\\={justify-self:var(--justify-lg);align-self:var(--align-lg);order:var(--order-lg)}}@media(max-width: 959px){.D-pmq-cznF89pqCAx-uMBg\\=\\={justify-self:var(--justify-md);align-self:var(--align-md);order:var(--order-md)}}@media(max-width: 767px){.WmR29uvM3cY\\+OuuNy\\+P6bw\\=\\={justify-self:var(--justify-sm);align-self:var(--align-sm);order:var(--order-sm)}}@media(max-width: 567px){.XzTOzTx8czlbvnlRVyVWtg\\=\\={justify-self:var(--justify-xs);align-self:var(--align-xs);order:var(--order-xs)}}@media(max-width: 359px){.Xom8UlhXeEfECwv4mxX0uw\\=\\={justify-self:var(--justify-xxs);align-self:var(--align-xxs);order:var(--order-xxs)}}", ""]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"flexLayoutItem": "_265SP2gLxNWYRnhYD3z5+A==",
	"flexLayoutItem__xxl": "A49+nz4XlJRxFV3xlA4dVQ==",
	"flexLayoutItem__xl": "sEOz4fu0pgqKxR4NljXGRA==",
	"flexLayoutItem__lg": "p-9obpmDgqkGyxkDFttvUQ==",
	"flexLayoutItem__md": "D-pmq-cznF89pqCAx-uMBg==",
	"flexLayoutItem__sm": "WmR29uvM3cY+OuuNy+P6bw==",
	"flexLayoutItem__xs": "XzTOzTx8czlbvnlRVyVWtg==",
	"flexLayoutItem__xxs": "Xom8UlhXeEfECwv4mxX0uw=="
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/gridLayout.module.scss":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".uL3FcOEBSi2tpDWcUZVP4g\\=\\={display:grid;--cols: initial;--cols-xxl: var(--cols);--cols-xl: var(--cols-xxl);--cols-lg: var(--cols-xl);--cols-md: var(--cols-lg);--cols-sm: var(--cols-md);--cols-xs: var(--cols-sm);--cols-xxs: var(--cols-xs);--rows: initial;--rows-xxl: var(--rows);--rows-xl: var(--rows-xxl);--rows-lg: var(--rows-xl);--rows-md: var(--rows-lg);--rows-sm: var(--rows-md);--rows-xs: var(--rows-sm);--rows-xxs: var(--rows-xs);--gap: initial;--gap-xxl: var(--gap);--gap-xl: var(--gap-xxl);--gap-lg: var(--gap-xl);--gap-md: var(--gap-lg);--gap-sm: var(--gap-md);--gap-xs: var(--gap-sm);--gap-xxs: var(--gap-xs);--justify: initial;--justify-xxl: var(--justify);--justify-xl: var(--justify-xxl);--justify-lg: var(--justify-xl);--justify-md: var(--justify-lg);--justify-sm: var(--justify-md);--justify-xs: var(--justify-sm);--justify-xxs: var(--justify-xs);--align: initial;--align-xxl: var(--align);--align-xl: var(--align-xxl);--align-lg: var(--align-xl);--align-md: var(--align-lg);--align-sm: var(--align-md);--align-xs: var(--align-sm);--align-xxs: var(--align-xs);grid-template-columns:var(--cols);grid-template-rows:var(--rows);gap:var(--gap);justify-items:var(--justify);align-items:var(--align)}@media(max-width: 1599px){.xct\\+XGrL2DzQbijKvkYe8w\\=\\={grid-template-columns:var(--cols-xxl);grid-template-rows:var(--rows-xxl);gap:var(--gap-xxl);justify-items:var(--justify-xxl);align-items:var(--align-xxl)}}@media(max-width: 1439px){._88iIGehajzCnZqbjyRj-OQ\\=\\={grid-template-columns:var(--cols-xl);grid-template-rows:var(--rows-xl);gap:var(--gap-xl);justify-items:var(--justify-xl);align-items:var(--align-xl)}}@media(max-width: 1279px){.xNu8bwYCiMKBYKda5FqlqA\\=\\={grid-template-columns:var(--cols-lg);grid-template-rows:var(--rows-lg);gap:var(--gap-lg);justify-items:var(--justify-lg);align-items:var(--align-lg)}}@media(max-width: 959px){.fKHVU\\+-bUEzF9Oy0P9iK9A\\=\\={grid-template-columns:var(--cols-md);grid-template-rows:var(--rows-md);gap:var(--gap-md);justify-items:var(--justify-md);align-items:var(--align-md)}}@media(max-width: 767px){.g7VUPmJbf7vDj37vY6HDFQ\\=\\={grid-template-columns:var(--cols-sm);grid-template-rows:var(--rows-sm);gap:var(--gap-sm);justify-items:var(--justify-sm);align-items:var(--align-sm)}}@media(max-width: 567px){.Z3Kiz89LqQJ6slo9DGq40A\\=\\={grid-template-columns:var(--cols-xs);grid-template-rows:var(--rows-xs);gap:var(--gap-xs);justify-items:var(--justify-xs);align-items:var(--align-xs)}}@media(max-width: 359px){.y86WXG5x4Eej5HpLgC4kgQ\\=\\={grid-template-columns:var(--cols-xxs);grid-template-rows:var(--rows-xxs);gap:var(--gap-xxs);justify-items:var(--justify-xxs);align-items:var(--align-xxs)}}", ""]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"gridLayout": "uL3FcOEBSi2tpDWcUZVP4g==",
	"gridLayout__xxl": "xct+XGrL2DzQbijKvkYe8w==",
	"gridLayout__xl": "_88iIGehajzCnZqbjyRj-OQ==",
	"gridLayout__lg": "xNu8bwYCiMKBYKda5FqlqA==",
	"gridLayout__md": "fKHVU+-bUEzF9Oy0P9iK9A==",
	"gridLayout__sm": "g7VUPmJbf7vDj37vY6HDFQ==",
	"gridLayout__xs": "Z3Kiz89LqQJ6slo9DGq40A==",
	"gridLayout__xxs": "y86WXG5x4Eej5HpLgC4kgQ=="
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./.storybook/scss/gridLayoutItem.module.scss":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".ji5A1bPerhELTNCabhdz6Q\\=\\={--col: initial;--col-xxl: var(--col);--col-xl: var(--col-xxl);--col-lg: var(--col-xl);--col-md: var(--col-lg);--col-sm: var(--col-md);--col-xs: var(--col-sm);--col-xxs: var(--col-xs);--row: initial;--row-xxl: var(--row);--row-xl: var(--row-xxl);--row-lg: var(--row-xl);--row-md: var(--row-lg);--row-sm: var(--row-md);--row-xs: var(--row-sm);--row-xxs: var(--row-xs);--justify: initial;--justify-xxl: var(--justify);--justify-xl: var(--justify-xxl);--justify-lg: var(--justify-xl);--justify-md: var(--justify-lg);--justify-sm: var(--justify-md);--justify-xs: var(--justify-sm);--justify-xxs: var(--justify-xs);--align: initial;--align-xxl: var(--align);--align-xl: var(--align-xxl);--align-lg: var(--align-xl);--align-md: var(--align-lg);--align-sm: var(--align-md);--align-xs: var(--align-sm);--align-xxs: var(--align-xs);--order: initial;--order-xxl: var(--order);--order-xl: var(--order-xxl);--order-lg: var(--order-xl);--order-md: var(--order-lg);--order-sm: var(--order-md);--order-xs: var(--order-sm);--order-xxs: var(--order-xs);grid-column:var(--col);grid-row:var(--row);justify-self:var(--justify);align-self:var(--align);order:var(--order)}@media(max-width: 1599px){.tiIHwCAb993\\+7H\\+zMqFovw\\=\\={grid-column:var(--col-xxl);grid-row:var(--row-xxl);justify-self:var(--justify-xxl);align-self:var(--align-xxl);order:var(--order-xxl)}}@media(max-width: 1439px){._9IDbhrzIq6S08-TU-nIpSA\\=\\={grid-column:var(--col-xl);grid-row:var(--row-xl);justify-self:var(--justify-xl);align-self:var(--align-xl);order:var(--order-xl)}}@media(max-width: 1279px){.Wkw3nm0SsYRcUucxKB\\+uYA\\=\\={grid-column:var(--col-lg);grid-row:var(--row-lg);justify-self:var(--justify-lg);align-self:var(--align-lg);order:var(--order-lg)}}@media(max-width: 959px){.jr\\+vkyanimg\\+WYnOcjQTtA\\=\\={grid-column:var(--col-md);grid-row:var(--row-md);justify-self:var(--justify-md);align-self:var(--align-md);order:var(--order-md)}}@media(max-width: 767px){.IsZxvtDJQ8mx9xAQ9RJPiA\\=\\={grid-column:var(--col-sm);grid-row:var(--row-sm);justify-self:var(--justify-sm);align-self:var(--align-sm);order:var(--order-sm)}}@media(max-width: 567px){.sjrSkOiiJKRFHczr7kKJ8w\\=\\={grid-column:var(--col-xs);grid-row:var(--row-xs);justify-self:var(--justify-xs);align-self:var(--align-xs);order:var(--order-xs)}}@media(max-width: 359px){.mSTSA-mNSv9JwHSUfIGdhQ\\=\\={grid-column:var(--col-xxs);grid-row:var(--row-xxs);justify-self:var(--justify-xxs);align-self:var(--align-xxs);order:var(--order-xxs)}}", ""]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"gridLayoutItem": "ji5A1bPerhELTNCabhdz6Q==",
	"gridLayoutItem__xxl": "tiIHwCAb993+7H+zMqFovw==",
	"gridLayoutItem__xl": "_9IDbhrzIq6S08-TU-nIpSA==",
	"gridLayoutItem__lg": "Wkw3nm0SsYRcUucxKB+uYA==",
	"gridLayoutItem__md": "jr+vkyanimg+WYnOcjQTtA==",
	"gridLayoutItem__sm": "IsZxvtDJQ8mx9xAQ9RJPiA==",
	"gridLayoutItem__xs": "sjrSkOiiJKRFHczr7kKJ8w==",
	"gridLayoutItem__xxs": "mSTSA-mNSv9JwHSUfIGdhQ=="
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/autokits/common/IconsAutokit/styles.module.scss":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "._9q9ZBywv37on4uV-hZ21oA\\=\\={padding-top:16px;font-family:\"PT Root UI\",sans-serif;font-weight:400;font-size:1rem;line-height:1.4}@media(max-width: 1440px){._9q9ZBywv37on4uV-hZ21oA\\=\\={font-size:calc(.875rem + (100vw - 48rem)/42*.125)}}@media(max-width: 768px){._9q9ZBywv37on4uV-hZ21oA\\=\\={font-size:.875rem}}.xxw6q8E\\+xhw4e9MTFtajlQ\\=\\={display:flex;flex-wrap:wrap;gap:16px;margin-bottom:16px}.SfIqHz0strfnSOzi7DGs5w\\=\\={margin-bottom:16px}", ""]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"iconsAutokit": "_9q9ZBywv37on4uV-hZ21oA==",
	"iconsAutokit_layout": "xxw6q8E+xhw4e9MTFtajlQ==",
	"iconsAutokit_title": "SfIqHz0strfnSOzi7DGs5w=="
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/autokits/emotion/LayoutAutokit/styles.module.scss":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".Pxhlib6Y819jMdTrD\\+eyng\\=\\={display:flex;flex-direction:column;align-items:center;gap:24px;flex-wrap:wrap}.tD6ezDwwtfrzGiJWFAMTXQ\\=\\={font-family:\"PT Root UI\",sans-serif;font-weight:400;font-size:1rem;line-height:1.4}@media(max-width: 1440px){.tD6ezDwwtfrzGiJWFAMTXQ\\=\\={font-size:calc(.875rem + (100vw - 48rem)/42*.125)}}@media(max-width: 768px){.tD6ezDwwtfrzGiJWFAMTXQ\\=\\={font-size:.875rem}}.RvyknXEX83KhhRBd-VerKg\\=\\={text-align:center;margin-bottom:16px;font-family:\"PT Root UI\",sans-serif;font-weight:700;font-size:1.5rem;line-height:1.2}@media(max-width: 1440px){.RvyknXEX83KhhRBd-VerKg\\=\\={font-size:calc(1.25rem + (100vw - 48rem)/42*.25)}}@media(max-width: 768px){.RvyknXEX83KhhRBd-VerKg\\=\\={font-size:1.25rem}}.TPDzD2COZmckAPgF40VvYw\\=\\={height:88px}._7u9lZbFCiWCKpGEE-h--YA\\=\\={display:flex;flex-wrap:nowrap;justify-items:center}.Ej0CumfpMdSPk7TuljjKTg\\=\\={display:flex;justify-content:center;align-items:center;color:#121314;font-family:\"PT Root UI\",sans-serif;font-weight:400;font-size:.875rem;line-height:1.4}@media(max-width: 1440px){.Ej0CumfpMdSPk7TuljjKTg\\=\\={font-size:calc(.75rem + (100vw - 48rem)/42*.125)}}@media(max-width: 768px){.Ej0CumfpMdSPk7TuljjKTg\\=\\={font-size:.75rem}}.E0iEN55D0j1p8UK0KJXt5Q\\=\\={background-color:#68c1dd;width:var(--layout-item-padding-width)}.candsALlJ6kY187rNuN3VQ\\=\\={background-color:#f1f2f5;width:var(--layout-item-col-width)}.re\\+I12rOXSteXwvWgJZ9RA\\=\\={background-color:#f0b621;width:var(--layout-item-gap-width)}", ""]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"layoutAutokit": "Pxhlib6Y819jMdTrD+eyng==",
	"layoutAutokitError": "tD6ezDwwtfrzGiJWFAMTXQ==",
	"layoutAutokitItem_title": "RvyknXEX83KhhRBd-VerKg==",
	"layoutAutokitItem_layout": "TPDzD2COZmckAPgF40VvYw==",
	"layoutAutokitItemLayout": "_7u9lZbFCiWCKpGEE-h--YA==",
	"layoutAutokitItemLayout_item": "Ej0CumfpMdSPk7TuljjKTg==",
	"layoutAutokitItemLayout_item__padding": "E0iEN55D0j1p8UK0KJXt5Q==",
	"layoutAutokitItemLayout_item__col": "candsALlJ6kY187rNuN3VQ==",
	"layoutAutokitItemLayout_item__gap": "re+I12rOXSteXwvWgJZ9RA=="
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./src/autokits sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./common/ColorsAutokit/ColorsAutokit.stories.mdx": "./src/autokits/common/ColorsAutokit/ColorsAutokit.stories.mdx",
	"./common/IconsAutokit/IconsAutokit.stories.mdx": "./src/autokits/common/IconsAutokit/IconsAutokit.stories.mdx",
	"./common/ShadowsAutokit/ShadowsAutokit.stories.mdx": "./src/autokits/common/ShadowsAutokit/ShadowsAutokit.stories.mdx",
	"./common/TypographyAutokit/TypographyAutokit.stories.mdx": "./src/autokits/common/TypographyAutokit/TypographyAutokit.stories.mdx",
	"./emotion/LayoutAutokit/LayoutAutokit.stories.mdx": "./src/autokits/emotion/LayoutAutokit/LayoutAutokit.stories.mdx"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./src/autokits sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$";

/***/ }),

/***/ "./src/components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./emotion/Button/Button.stories.mdx": "./src/components/emotion/Button/Button.stories.mdx",
	"./emotion/Container/Container.stories.mdx": "./src/components/emotion/Container/Container.stories.mdx",
	"./emotion/FutureButton/FutureButton.stories.mdx": "./src/components/emotion/FutureButton/FutureButton.stories.mdx",
	"./emotion/Layout/Layout.stories.mdx": "./src/components/emotion/Layout/Layout.stories.mdx",
	"./emotion/Section/Section.stories.mdx": "./src/components/emotion/Section/Section.stories.mdx",
	"./emotion/VisuallyHidden/VisuallyHidden.stories.mdx": "./src/components/emotion/VisuallyHidden/VisuallyHidden.stories.mdx",
	"./scss/Container/Container.stories.mdx": "./src/components/scss/Container/Container.stories.mdx",
	"./scss/FlexLayout/FlexLayout.stories.mdx": "./src/components/scss/FlexLayout/FlexLayout.stories.mdx",
	"./scss/GridLayout/GridLayout.stories.mdx": "./src/components/scss/GridLayout/GridLayout.stories.mdx",
	"./scss/Section/Section.stories.mdx": "./src/components/scss/Section/Section.stories.mdx"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./src/components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$";

/***/ }),

/***/ "./src sync recursive \\.svg$":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./icons/tokens/large/checkCircle.svg": "./src/icons/tokens/large/checkCircle.svg",
	"./icons/tokens/large/crossCircle.svg": "./src/icons/tokens/large/crossCircle.svg",
	"./icons/tokens/large/placeholder.svg": "./src/icons/tokens/large/placeholder.svg",
	"./icons/tokens/medium/checkCircle.svg": "./src/icons/tokens/medium/checkCircle.svg",
	"./icons/tokens/medium/crossCircle.svg": "./src/icons/tokens/medium/crossCircle.svg",
	"./icons/tokens/medium/placeholder.svg": "./src/icons/tokens/medium/placeholder.svg",
	"./icons/tokens/small/checkCircle.svg": "./src/icons/tokens/small/checkCircle.svg",
	"./icons/tokens/small/crossCircle.svg": "./src/icons/tokens/small/crossCircle.svg",
	"./icons/tokens/small/placeholder.svg": "./src/icons/tokens/small/placeholder.svg"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./src sync recursive \\.svg$";

/***/ }),

/***/ "./stories/design sync ^\\.[\\\\/](?:(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./button.stories.mdx": "./stories/design/button.stories.mdx",
	"./colors.stories.mdx": "./stories/design/colors.stories.mdx",
	"./icons.stories.mdx": "./stories/design/icons.stories.mdx",
	"./layout.stories.mdx": "./stories/design/layout.stories.mdx",
	"./shadows.stories.mdx": "./stories/design/shadows.stories.mdx",
	"./spacings.stories.mdx": "./stories/design/spacings.stories.mdx",
	"./typography.stories.mdx": "./stories/design/typography.stories.mdx"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./stories/design sync ^\\.[\\\\/](?:(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$";

/***/ }),

/***/ "./stories/dev sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./emotion/colors.stories.mdx": "./stories/dev/emotion/colors.stories.mdx",
	"./emotion/global.stories.mdx": "./stories/dev/emotion/global.stories.mdx",
	"./emotion/layout.stories.mdx": "./stories/dev/emotion/layout.stories.mdx",
	"./emotion/shadows.stories.mdx": "./stories/dev/emotion/shadows.stories.mdx",
	"./emotion/theming-experimental.stories.mdx": "./stories/dev/emotion/theming-experimental.stories.mdx",
	"./emotion/theming.stories.mdx": "./stories/dev/emotion/theming.stories.mdx",
	"./emotion/typography.stories.mdx": "./stories/dev/emotion/typography.stories.mdx",
	"./icons.stories.mdx": "./stories/dev/icons.stories.mdx",
	"./scss/colors.stories.mdx": "./stories/dev/scss/colors.stories.mdx",
	"./scss/shadows.stories.mdx": "./stories/dev/scss/shadows.stories.mdx",
	"./scss/typography.stories.mdx": "./stories/dev/scss/typography.stories.mdx",
	"./spacings.stories.mdx": "./stories/dev/spacings.stories.mdx"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./stories/dev sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$";

/***/ }),

/***/ "./stories/intro sync ^\\.[\\\\/](?:(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./changelog.stories.mdx": "./stories/intro/changelog.stories.mdx",
	"./development.stories.mdx": "./stories/intro/development.stories.mdx",
	"./usage.stories.mdx": "./stories/intro/usage.stories.mdx",
	"./usageEmotion.stories.mdx": "./stories/intro/usageEmotion.stories.mdx",
	"./usageScss.stories.mdx": "./stories/intro/usageScss.stories.mdx",
	"./welcome.stories.mdx": "./stories/intro/welcome.stories.mdx"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./stories/intro sync ^\\.[\\\\/](?:(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$";

/***/ }),

/***/ "./stories/intro sync ^\\.[\\\\/](?:welcome\\.stories\\.mdx)$":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./welcome.stories.mdx": "./stories/intro/welcome.stories.mdx"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./stories/intro sync ^\\.[\\\\/](?:welcome\\.stories\\.mdx)$";

/***/ }),

/***/ "?4f7e":
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "./generated-stories-entry.cjs":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* module decorator */ module = __webpack_require__.nmd(module);


var _frameworkImportPath = __webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js");

/* eslint-disable import/no-unresolved */
(0, _frameworkImportPath.configure)([__webpack_require__("./stories/intro sync ^\\.[\\\\/](?:welcome\\.stories\\.mdx)$"),__webpack_require__("./stories/intro sync ^\\.[\\\\/](?:(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories/design sync ^\\.[\\\\/](?:(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories/dev sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src/components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src/autokits sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$")], module, false);

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, [42], () => (__webpack_exec__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"), __webpack_exec__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/globals.js"), __webpack_exec__("./storybook-init-framework-entry.js"), __webpack_exec__("./node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"), __webpack_exec__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"), __webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"), __webpack_exec__("./node_modules/@storybook/addon-a11y/preview.js-generated-config-entry.js"), __webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"), __webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"), __webpack_exec__("./.storybook/preview.js-generated-config-entry.js"), __webpack_exec__("./generated-stories-entry.cjs")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);